(()=>{"use strict";var e={amdO:{}};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}();var t="/index.js",n=Object.defineProperty,a=(e,t)=>{for(var a in t)n(e,a,{get:t[a],enumerable:!0})},r=(e,t,a)=>(((e,t,a)=>{t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a})(e,"symbol"!=typeof t?t+"":t,a),a),i=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)},s=(e,t,n)=>(i(e,t,"read from private field"),n?n.call(e):t.get(e)),o=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},l=(e,t,n,a)=>(i(e,t,"write to private field"),a?a.call(e,n):t.set(e,n),n),u={};a(u,{Abs:()=>Ge,Acos:()=>He,Acosh:()=>je,AdadeltaOptimizer:()=>bh,AdagradOptimizer:()=>vh,AdamOptimizer:()=>wh,AdamaxOptimizer:()=>kh,Add:()=>qe,AddN:()=>Xe,All:()=>Ke,Any:()=>Ze,ArgMax:()=>Ye,ArgMin:()=>Je,Asin:()=>Qe,Asinh:()=>et,Atan:()=>tt,Atan2:()=>at,Atanh:()=>nt,AvgPool:()=>rt,AvgPool3D:()=>st,AvgPool3DGrad:()=>ot,AvgPoolGrad:()=>it,BackendWasm:()=>gz,BatchMatMul:()=>lt,BatchToSpaceND:()=>ut,Bincount:()=>dt,BitwiseAnd:()=>pt,BroadcastArgs:()=>ht,BroadcastTo:()=>ct,Cast:()=>ft,Ceil:()=>mt,ClipByValue:()=>yt,Complex:()=>gt,ComplexAbs:()=>At,Concat:()=>xt,Conv2D:()=>bt,Conv2DBackpropFilter:()=>vt,Conv2DBackpropInput:()=>wt,Conv3D:()=>kt,Conv3DBackpropFilterV2:()=>It,Conv3DBackpropInputV2:()=>St,Cos:()=>Ct,Cosh:()=>Nt,CropAndResize:()=>Et,Cumprod:()=>Tt,Cumsum:()=>Rt,DataStorage:()=>L,DenseBincount:()=>$t,DepthToSpace:()=>Mt,DepthwiseConv2dNative:()=>Ft,DepthwiseConv2dNativeBackpropFilter:()=>_t,DepthwiseConv2dNativeBackpropInput:()=>Pt,Diag:()=>Ot,Dilation2D:()=>Dt,Dilation2DBackpropFilter:()=>Lt,Dilation2DBackpropInput:()=>zt,Draw:()=>Wt,ENV:()=>Be,Einsum:()=>Vt,Elu:()=>Ut,EluGrad:()=>Gt,Environment:()=>De,Equal:()=>jt,Erf:()=>Ht,Exp:()=>qt,ExpandDims:()=>Xt,Expm1:()=>Kt,FFT:()=>Zt,Fill:()=>Yt,FlipLeftRight:()=>Jt,Floor:()=>Qt,FloorDiv:()=>en,FromPixels:()=>rr,FusedBatchNorm:()=>tn,FusedConv2D:()=>or,FusedDepthwiseConv2D:()=>lr,GPGPUContext:()=>hC,GatherNd:()=>an,GatherV2:()=>nn,GraphModel:()=>Ig,Greater:()=>rn,GreaterEqual:()=>sn,IFFT:()=>ln,Identity:()=>on,Imag:()=>un,IsFinite:()=>dn,IsInf:()=>pn,IsNan:()=>cn,KernelBackend:()=>W,LRN:()=>Sn,LRNGrad:()=>Cn,LeakyRelu:()=>hn,Less:()=>fn,LessEqual:()=>mn,LinSpace:()=>yn,Log:()=>gn,Log1p:()=>An,LogSoftmax:()=>kn,LogicalAnd:()=>xn,LogicalNot:()=>bn,LogicalOr:()=>vn,LogicalXor:()=>wn,LowerBound:()=>In,MathBackendCPU:()=>Eg,MathBackendWebGL:()=>FN,MatrixBandPart:()=>Nn,Max:()=>Tn,MaxPool:()=>En,MaxPool3D:()=>Mn,MaxPool3DGrad:()=>Fn,MaxPoolGrad:()=>$n,MaxPoolWithArgmax:()=>_n,Maximum:()=>Rn,Mean:()=>Pn,Min:()=>On,Minimum:()=>Dn,MirrorPad:()=>zn,Mod:()=>Ln,MomentumOptimizer:()=>Sh,Multinomial:()=>Wn,Multiply:()=>Bn,Neg:()=>Vn,NonMaxSuppressionV3:()=>Gn,NonMaxSuppressionV4:()=>Hn,NonMaxSuppressionV5:()=>jn,NotEqual:()=>Un,OP_SCOPE_SUFFIX:()=>Wi,OneHot:()=>Xn,OnesLike:()=>qn,Optimizer:()=>xh,OptimizerConstructors:()=>Ef,Pack:()=>Kn,PadV2:()=>Zn,Pool:()=>Yn,Pow:()=>Jn,Prelu:()=>Qn,Prod:()=>ea,RMSPropOptimizer:()=>Ch,RaggedGather:()=>ta,RaggedRange:()=>na,RaggedTensorToTensor:()=>aa,Range:()=>ra,Rank:()=>si,Real:()=>ia,RealDiv:()=>Bt,Reciprocal:()=>sa,Reduction:()=>Uc,Relu:()=>oa,Relu6:()=>ha,Reshape:()=>la,ResizeBilinear:()=>pa,ResizeBilinearGrad:()=>ca,ResizeNearestNeighbor:()=>ua,ResizeNearestNeighborGrad:()=>da,Reverse:()=>fa,RotateWithOffset:()=>ir,Round:()=>ma,Rsqrt:()=>ya,SGDOptimizer:()=>Ih,ScatterNd:()=>ga,SearchSorted:()=>xa,Select:()=>ba,Selu:()=>va,Sigmoid:()=>Ca,Sign:()=>Sa,Sin:()=>ka,Sinh:()=>Ia,Slice:()=>wa,Softmax:()=>Ma,Softplus:()=>Na,SpaceToBatchND:()=>Ea,SparseFillEmptyRows:()=>Fa,SparseReshape:()=>_a,SparseSegmentMean:()=>Pa,SparseSegmentSum:()=>Oa,SparseToDense:()=>Da,SplitV:()=>$a,Sqrt:()=>Ta,Square:()=>La,SquaredDifference:()=>za,StaticRegexReplace:()=>Wa,Step:()=>ar,StridedSlice:()=>Ba,StringNGrams:()=>Va,StringSplit:()=>Ua,StringToHashBucketFast:()=>Ga,Sub:()=>Ha,Sum:()=>Ra,Tan:()=>ja,Tanh:()=>qa,Tensor:()=>ri,TensorBuffer:()=>ti,TensorScatterUpdate:()=>Aa,Tile:()=>Xa,TopK:()=>Ka,Transform:()=>Za,Transpose:()=>Ya,Unique:()=>Ja,Unpack:()=>Qa,UnsortedSegmentSum:()=>er,UpperBound:()=>tr,Variable:()=>ii,WebGPUBackend:()=>dL,ZerosLike:()=>nr,_FusedMatMul:()=>sr,abs:()=>yo,acos:()=>go,acosh:()=>Ao,add:()=>co,addN:()=>xo,all:()=>bo,any:()=>vo,argMax:()=>wo,argMin:()=>ko,asin:()=>Io,asinh:()=>So,atan:()=>Co,atan2:()=>No,atanh:()=>To,avgPool:()=>Ho,avgPool3d:()=>jo,backend:()=>uo,backend_util:()=>Pf,basicLSTMCell:()=>Jo,batchNorm:()=>tl,batchNorm2d:()=>nl,batchNorm3d:()=>al,batchNorm4d:()=>rl,batchToSpaceND:()=>Qo,bincount:()=>il,bitwiseAnd:()=>sl,booleanMaskAsync:()=>Xp,broadcastArgs:()=>ol,broadcastTo:()=>ll,broadcast_util:()=>Ml,browser:()=>Jh,buffer:()=>Ws,cast:()=>Bs,ceil:()=>ul,clipByValue:()=>pl,clone:()=>Vs,complex:()=>Vi,concat:()=>qo,concat1d:()=>cl,concat2d:()=>hl,concat3d:()=>fl,concat4d:()=>ml,conv1d:()=>gl,conv2d:()=>yl,conv2dTranspose:()=>xl,conv3d:()=>bl,conv3dTranspose:()=>wl,copyRegisteredKernels:()=>br,cos:()=>kl,cosh:()=>Il,cosineWindow:()=>nc,cumprod:()=>Sl,cumsum:()=>Cl,customGrad:()=>_u,denseBincount:()=>Nl,deprecationWarn:()=>qs,depthToSpace:()=>Tl,depthwiseConv2d:()=>Rl,deregisterOp:()=>qm,device_util:()=>Ei,diag:()=>El,dilation2d:()=>$l,disableDeprecationWarnings:()=>js,dispose:()=>Qs,disposeVariables:()=>Xs,div:()=>fo,divNoNan:()=>Ll,dot:()=>Wl,dropout:()=>ec,einsum:()=>Bl,elu:()=>Vl,enableDebugMode:()=>Hs,enableProdMode:()=>Gs,enclosingPowerOfTwo:()=>tc,engine:()=>Ks,ensureShape:()=>Ul,env:()=>Le,equal:()=>Ol,erf:()=>Gl,euclideanNorm:()=>lu,exp:()=>uu,expandDims:()=>du,expm1:()=>pu,eye:()=>hu,fft:()=>gp,fill:()=>dl,findBackend:()=>so,findBackendFactory:()=>oo,floor:()=>fu,floorDiv:()=>ho,forceHalfFloat:()=>PN,fused:()=>rc,gather:()=>mu,gatherND:()=>Qp,gather_util:()=>of,getBackend:()=>ro,getGradient:()=>fr,getKernel:()=>hr,getKernelsForBackend:()=>mr,getThreadsCount:()=>Ez,gpgpu_util:()=>GS,grad:()=>Ru,grads:()=>Eu,greater:()=>yu,greaterEqual:()=>gu,ifft:()=>Ap,imag:()=>Au,image:()=>dh,inTopKAsync:()=>ac,io:()=>Th,irfft:()=>xp,isFinite:()=>xu,isInf:()=>bu,isNaN:()=>vu,keep:()=>eo,kernel_impls:()=>Um,leakyRelu:()=>wu,less:()=>ku,lessEqual:()=>Iu,linalg:()=>ph,linspace:()=>Su,loadGraphModel:()=>Sg,loadGraphModelSync:()=>Cg,localResponseNormalization:()=>Cu,log:()=>Nu,log1p:()=>Tu,logSigmoid:()=>zu,logSoftmax:()=>Wu,logSumExp:()=>Bu,logicalAnd:()=>Vu,logicalNot:()=>Uu,logicalOr:()=>Gu,logicalXor:()=>Hu,losses:()=>ch,lowerBound:()=>Xu,matMul:()=>Xo,math:()=>Kh,max:()=>Ql,maxPool:()=>Ku,maxPool3d:()=>Zu,maxPoolWithArgmax:()=>Yu,maximum:()=>Ju,mean:()=>Qu,memory:()=>Zs,meshgrid:()=>nd,min:()=>eu,minimum:()=>ad,mirrorPad:()=>rd,mod:()=>id,moments:()=>sd,movingAverage:()=>Zp,mul:()=>mo,multiRNNCell:()=>od,multinomial:()=>ld,neg:()=>Ou,nextFrame:()=>Ff,norm:()=>ou,notEqual:()=>ud,oneHot:()=>dd,ones:()=>td,onesLike:()=>pd,op:()=>Bi,outerProduct:()=>cd,pad:()=>hd,pad1d:()=>fd,pad2d:()=>md,pad3d:()=>yd,pad4d:()=>gd,pool:()=>xd,pow:()=>tu,prelu:()=>bd,print:()=>Us,prod:()=>vd,profile:()=>Ys,raggedGather:()=>wd,raggedRange:()=>kd,raggedTensorToTensor:()=>Id,rand:()=>Sd,randomGamma:()=>Ud,randomNormal:()=>Gd,randomStandardNormal:()=>Hd,randomUniform:()=>jd,randomUniformInt:()=>qd,range:()=>Xd,ready:()=>ao,real:()=>Kd,reciprocal:()=>Zd,registerBackend:()=>lo,registerGradient:()=>gr,registerKernel:()=>yr,registerOp:()=>Hm,relu:()=>Yd,relu6:()=>Jd,removeBackend:()=>io,reshape:()=>Go,reverse:()=>Qd,reverse1d:()=>ep,reverse2d:()=>tp,reverse3d:()=>np,reverse4d:()=>ap,rfft:()=>vp,round:()=>rp,rsqrt:()=>ip,scalar:()=>nu,scatterND:()=>Yp,scatter_util:()=>_p,searchSorted:()=>qu,selu:()=>sp,separableConv2d:()=>op,serialization:()=>mh,setBackend:()=>no,setPlatform:()=>po,setThreadsCount:()=>Rz,setWasmPath:()=>Sz,setWasmPaths:()=>Cz,setWebGLContext:()=>mI,setdiff1dAsync:()=>lp,shared:()=>$g,sigmoid:()=>Ko,sign:()=>up,signal:()=>uh,sin:()=>dp,sinh:()=>pp,slice:()=>Zo,slice1d:()=>cp,slice2d:()=>hp,slice3d:()=>fp,slice4d:()=>mp,slice_util:()=>uf,softmax:()=>yp,softplus:()=>Du,spaceToBatchND:()=>Ad,sparse:()=>hh,sparseToDense:()=>Jp,spectral:()=>lh,split:()=>bp,sqrt:()=>au,square:()=>ru,squaredDifference:()=>wp,squeeze:()=>kp,stack:()=>Ip,step:()=>Sp,stridedSlice:()=>Cp,string:()=>fh,sub:()=>Lu,sum:()=>iu,sumOutType:()=>mi,tan:()=>Np,tanh:()=>Yo,tensor:()=>Gi,tensor1d:()=>Tp,tensor2d:()=>Rp,tensor3d:()=>Ep,tensor4d:()=>$p,tensor5d:()=>Mp,tensor6d:()=>Fp,tensorScatterUpdate:()=>zp,tensor_util:()=>ci,test_util:()=>Nd,tidy:()=>Js,tile:()=>cu,time:()=>to,topk:()=>Lp,train:()=>$f,transpose:()=>Kp,truncatedNormal:()=>Wp,unique:()=>Bp,unregisterGradient:()=>xr,unregisterKernel:()=>Ar,unsortedSegmentSum:()=>Vp,unstack:()=>Up,upcastType:()=>fi,upperBound:()=>Gp,util:()=>wr,valueAndGrad:()=>$u,valueAndGrads:()=>Mu,variable:()=>Hp,variableGrads:()=>Fu,version:()=>Dj,version_converter:()=>Ng,version_core:()=>Rf,version_cpu:()=>nb,version_wasm:()=>$z,version_webgl:()=>_N,webgl:()=>ON,webgl_util:()=>uI,webgpu_util:()=>Zz,where:()=>Dl,whereAsync:()=>qp,zeros:()=>ed,zerosLike:()=>zl});var d=Object.create,p=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h=Object.getOwnPropertyNames,f=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty,y=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),g=(e,t)=>{for(var n in t)p(e,n,{get:t[n],enumerable:!0})},A=(e,t,n)=>(n=null!=e?d(f(e)):{},((e,t,n,a)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of h(t))!m.call(e,n)&&undefined!==n&&p(e,n,{get:()=>t[n],enumerable:!(a=c(t,n))||a.enumerable});return e})(!t&&e&&e.__esModule?n:p(n,"default",{value:e,enumerable:!0}),e)),x=y(((e,t)=>{t.exports=a;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function a(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}a.prototype.__isLong__,Object.defineProperty(a.prototype,"__isLong__",{value:!0}),a.isLong=r;var i={},s={};function o(e,t){var n,a,r;return t?(r=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=u(e,(0|e)<0?-1:0,!0),r&&(s[e]=n),n):(r=-128<=(e|=0)&&e<128)&&(a=i[e])?a:(n=u(e,e<0?-1:0,!1),r&&(i[e]=n),n)}function l(e,t){if(isNaN(e))return t?A:g;if(t){if(e<0)return A;if(e>=f)return k}else{if(e<=-m)return I;if(e+1>=m)return w}return e<0?l(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,n){return new a(e,t,n)}a.fromInt=o,a.fromNumber=l,a.fromBits=u;var d=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return p(e.substring(1),t,n).neg();for(var r=l(d(n,8)),i=g,s=0;s<e.length;s+=8){var o=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+o),n);if(o<8){var c=l(d(n,o));i=i.mul(c).add(l(u))}else i=(i=i.mul(r)).add(l(u))}return i.unsigned=t,i}function c(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?p(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}a.fromString=p,a.fromValue=c;var h=4294967296,f=h*h,m=f/2,y=o(1<<24),g=o(0);a.ZERO=g;var A=o(0,!0);a.UZERO=A;var x=o(1);a.ONE=x;var b=o(1,!0);a.UONE=b;var v=o(-1);a.NEG_ONE=v;var w=u(-1,2147483647,!1);a.MAX_VALUE=w;var k=u(-1,-1,!0);a.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);a.MIN_VALUE=I;var S=a.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=l(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=l(d(e,6),this.unsigned),i=this,s="";;){var o=i.div(r),u=(i.sub(o.mul(r)).toInt()>>>0).toString(e);if((i=o).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=c(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=c(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(e){r(e)||(e=c(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,i=65535&this.low,s=e.high>>>16,o=65535&e.high,l=e.low>>>16,d=0,p=0,h=0,f=0;return h+=(f+=i+(65535&e.low))>>>16,p+=(h+=a+l)>>>16,d+=(p+=n+o)>>>16,d+=t+s,u((h&=65535)<<16|(f&=65535),(d&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=c(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=c(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(y)&&e.lt(y))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,a=65535&this.high,i=this.low>>>16,s=65535&this.low,o=e.high>>>16,d=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,m=0,A=0,x=0;return A+=(x+=s*h)>>>16,m+=(A+=i*h)>>>16,A&=65535,m+=(A+=s*p)>>>16,f+=(m+=a*h)>>>16,m&=65535,f+=(m+=i*p)>>>16,m&=65535,f+=(m+=s*d)>>>16,f+=t*h+a*p+i*d+s*o,u((A&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=c(e)),e.isZero())throw Error("division by zero");var t,a,i;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?A:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return A;if(e.gt(this.shru(1)))return b;i=A}else{if(this.eq(I))return e.eq(x)||e.eq(v)?I:e.eq(I)?x:(t=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:v:(a=this.sub(e.mul(t)),i=t.add(a.div(e)));if(e.eq(I))return this.unsigned?A:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=g}for(a=this;a.gte(e);){t=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(t)/Math.LN2),o=s<=48?1:d(2,s-48),p=l(t),h=p.mul(e);h.isNegative()||h.gt(a);)h=(p=l(t-=o,this.unsigned)).mul(e);p.isZero()&&(p=x),i=i.add(p),a=a.sub(h)}return i},S.div=S.divide,S.modulo=function(e){return r(e)||(e=c(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=c(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=c(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=c(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},a.fromBytes=function(e,t,n){return n?a.fromBytesLE(e,t):a.fromBytesBE(e,t)},a.fromBytesLE=function(e,t){return new a(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},a.fromBytesBE=function(e,t){return new a(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),b=y((()=>{})),v=y((()=>{})),w=y(((e,t)=>{!function(e,t,n){function a(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new a(e),i=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.alea=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),k=y(((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xor128=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),I=y(((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xorwow=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),S=y(((e,t)=>{!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.x&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xorshift7=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),C=y(((e,t)=>{!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,i=t.i;return t.w=a=a+1640531527|0,n=r[i+34&127],e=r[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[i]=n^e,t.i=i,n+(a^a>>>16)|0},function(e,t){var n,a,r,i,s,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),r=0,i=-32;i<l;++i)t&&(a^=t.charCodeAt((i+32)%t.length)),0===i&&(s=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,i>=0&&(s=s+1640531527|0,r=0==(n=o[127&i]^=a+s)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,i=512;i>0;--i)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=s,e.X=o,e.i=r}(t,e)}function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.X&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xor4096=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),N=y(((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.tychei=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),T=y((()=>{})),R=y(((t,n)=>{!function(t,a,r){var i,s=256,o="random",l=r.pow(s,6),u=r.pow(2,52),d=2*u,p=s-1;function c(e,n,p){var c=[],A=y(m((n=1==n?{entropy:!0}:n||{}).entropy?[e,g(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(s):(e=new Uint8Array(s),(t.crypto||t.msCrypto).getRandomValues(e)),g(e)}catch(e){var n=t.navigator,r=n&&n.plugins;return[+new Date,t,r,t.screen,g(a)]}}():e,3),c),x=new h(c),b=function(){for(var e=x.g(6),t=l,n=0;e<u;)e=(e+n)*s,t*=s,n=x.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|x.g(4)},b.quick=function(){return x.g(4)/4294967296},b.double=b,y(g(x.S),a),(n.pass||p||function(e,t,n,a){return a&&(a.S&&f(a,x),e.state=function(){return f(x,{})}),n?(r[o]=e,t):e})(b,A,"global"in n?n.global:this==r,n.state)}function h(e){var t,n=e.length,a=this,r=0,i=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<s;)o[r]=r++;for(r=0;r<s;r++)o[r]=o[i=p&i+e[r%n]+(t=o[r])],o[i]=t;(a.g=function(e){for(var t,n=0,r=a.i,i=a.j,o=a.S;e--;)t=o[r=p&r+1],n=n*s+o[p&(o[r]=o[i=p&i+t])+(o[i]=t)];return a.i=r,a.j=i,n})(s)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(m(e[n],t-1))}catch(e){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[p&r]=p&(n^=19*t[p&r])+a.charCodeAt(r++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(y(r.random(),a),"object"==typeof n&&n.exports){n.exports=c;try{i=T()}catch(e){}}else"function"==typeof define&&e.amdO?define((function(){return c})):r["seed"+o]=c}("undefined"!=typeof self?self:t,[],Math)})),E=y(((e,t)=>{var n=w(),a=k(),r=I(),i=S(),s=C(),o=N(),l=R();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=i,l.xor4096=s,l.tychei=o,t.exports=l})),$=y((()=>{})),M=y((()=>{})),F=y((()=>{})),_=y((()=>{})),P=y((()=>{})),O=y(((n,a)=>{var r,i=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||t,function(t){function n(){return O.buffer!=L&&X(O.buffer),B}function a(){return O.buffer!=L&&X(O.buffer),V}function i(){return O.buffer!=L&&X(O.buffer),U}function s(){return O.buffer!=L&&X(O.buffer),G}var o,l,u,d=void 0!==(t=t||{})?t:{};d.ready=new Promise((function(e,t){o=e,l=t})),"undefined"!=typeof process&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,c,h,f=Object.assign({},d),m=[],y=(e,t)=>{throw t},g="object"==typeof window,A="function"==typeof importScripts,x="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=d.ENVIRONMENT_IS_PTHREAD||!1,v="";function w(e){return d.locateFile?d.locateFile(e,v):v+e}if(x){var k=$(),I=M();let t;v=A?I.dirname(v)+"/":"//",p=(e,t)=>(e=le(e)?new URL(e):I.normalize(e),k.readFileSync(e,t?void 0:"utf8")),h=e=>{var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),t},c=(e,t,n)=>{e=le(e)?new URL(e):I.normalize(e),k.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),m=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof pe))throw e})),process.on("unhandledRejection",(function(e){throw e})),y=(e,t)=>{if(ee())throw process.exitCode=e,t;(function(e){e instanceof pe||R("exiting due to exception: "+e)})(t),process.exit(e)},d.inspect=function(){return"[Emscripten Module object]"};try{t=F()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}e.g.Worker=t.Worker}else(g||A)&&(A?v=self.location.href:"undefined"!=typeof document&&document.currentScript&&(v=document.currentScript.src),void 0!==r&&r&&(v=r),v=0!==v.indexOf("blob:")?v.substr(0,v.replace(/[?#].*/,"").lastIndexOf("/")+1):"",x||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},A&&(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),c=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)}));x&&"undefined"==typeof performance&&(e.g.performance=_().performance);var S=console.log.bind(console),C=console.warn.bind(console);x&&(S=e=>k.writeSync(1,e+"\n"),C=e=>k.writeSync(2,e+"\n"));var N,T=d.print||S,R=d.printErr||C;Object.assign(d,f),f=null,d.arguments&&(m=d.arguments),d.thisProgram&&d.thisProgram,d.quit&&(y=d.quit),Atomics.load,Atomics.store,Atomics.compareExchange,d.wasmBinary&&(N=d.wasmBinary);var E=d.noExitRuntime||!0;"object"!=typeof WebAssembly&&ie("no native wasm support detected");var O,D,z,L,W,B,V,U,G,H=!1,j="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function q(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&j)return j.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,r):e.subarray(t,r));for(var i="";t<r;){var s=e[t++];if(128&s){var o=63&e[t++];if(192!=(224&s)){var l=63&e[t++];if((s=224==(240&s)?(15&s)<<12|o<<6|l:(7&s)<<18|o<<12|l<<6|63&e[t++])<65536)i+=String.fromCharCode(s);else{var u=s-65536;i+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else i+=String.fromCharCode((31&s)<<6|o)}else i+=String.fromCharCode(s)}return i}function X(e){L=e,d.HEAP8=W=new Int8Array(e),d.HEAP16=new Int16Array(e),d.HEAP32=V=new Int32Array(e),d.HEAPU8=B=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=U=new Uint32Array(e),d.HEAPF32=new Float32Array(e),d.HEAPF64=G=new Float64Array(e)}b&&(L=d.buffer);var K=d.INITIAL_MEMORY||16777216;if(b)O=d.wasmMemory,L=d.buffer;else if(d.wasmMemory)O=d.wasmMemory;else if(!((O=new WebAssembly.Memory({initial:K/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&R("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");O&&(L=O.buffer),K=L.byteLength,X(L);var Z,Y=[],J=[],Q=[];function ee(){return E}function te(){!b&&ge(J)}var ne=0,ae=null,re=null;function ie(e){d.onAbort&&d.onAbort(e),R(e="Aborted("+e+")"),H=!0,z=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}var se;function oe(e){return e.startsWith("data:application/octet-stream;base64,")}function le(e){return e.startsWith("file://")}function ue(e){try{if(e==se&&N)return new Uint8Array(N);if(h)return h(e);throw"both async and sync fetching of the wasm failed"}catch(e){ie(e)}}oe(se="tfjs-backend-wasm-threaded-simd.wasm")||(se=w(se));var de={};function pe(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ce(e){var t=ye.pthreads[e];(function(e,t){e||ie(void 0)})(t),ye.returnWorkerToPool(t)}function he(e){var t=ye.getNewWorker();if(!t)return 6;ye.runningWorkers.push(t),ye.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{x&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function fe(e){if(b)return Se(1,1,e);z=e,ee()||(ye.terminateAllThreads(),d.onExit&&d.onExit(e),H=!0),y(e,new pe(e))}var me=function(e,t){if(z=e,!t&&b)throw Ae(e),"unwind";fe(e)},ye={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){b?ye.initWorker():ye.initMainThread()},initMainThread:function(){for(var e=8;e--;)ye.allocateUnusedWorker()},initWorker:function(){E=!1},setExitStatus:function(e){z=e},terminateAllThreads:function(){for(var e of Object.values(ye.pthreads))ye.returnWorkerToPool(e);for(var e of ye.unusedWorkers)e.terminate();ye.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete ye.pthreads[t],ye.unusedWorkers.push(e),ye.runningWorkers.splice(ye.runningWorkers.indexOf(e),1),e.pthread_ptr=0,x&&e.unref(),Ge(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){ye.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var a=n.data,r=a.cmd;if(e.pthread_ptr&&(ye.currentProxiedOperationCallerThread=e.pthread_ptr),a.targetThread&&a.targetThread!=We()){var i=ye.pthreads[a.targetThread];return i?i.postMessage(a,a.transferList):R('Internal error! Worker sent a message "'+r+'" to target pthread '+a.targetThread+", but that thread no longer exists!"),void(ye.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===r?ke(a.queue):"spawnThread"===r?he(a):"cleanupThread"===r?ce(a.thread):"killThread"===r?function(e){var t=ye.pthreads[e];delete ye.pthreads[e],t.terminate(),Ge(e),ye.runningWorkers.splice(ye.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(a.thread):"cancelThread"===r?function(e){ye.pthreads[e].postMessage({cmd:"cancel"})}(a.thread):"loaded"===r?(e.loaded=!0,x&&e.unref(),t&&t(e),e.runPthread&&e.runPthread()):"print"===r?T("Thread "+a.threadId+": "+a.text):"printErr"===r?R("Thread "+a.threadId+": "+a.text):"alert"===r?alert("Thread "+a.threadId+": "+a.text):"setimmediate"===a.target?e.postMessage(a):"callHandler"===r?d[a.handler](...a.args):r&&R("worker sent an unknown command "+r),ye.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw R("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},x&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){})));var n=[];for(var a of["onExit","onAbort","print","printErr"])d.hasOwnProperty(a)&&n.push(a);e.postMessage({cmd:"load",handlers:n,urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:O,wasmModule:D})},allocateUnusedWorker:function(){var e,t=w("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),ye.unusedWorkers.push(e)},getNewWorker:function(){return 0==ye.unusedWorkers.length&&(ye.allocateUnusedWorker(),ye.loadWasmModuleToWorker(ye.unusedWorkers[0])),ye.unusedWorkers.pop()}};function ge(e){for(;e.length>0;)e.shift()(d)}function Ae(e){if(b)return Se(2,0,e);try{me(e)}catch(e){!function(e){if(e instanceof pe||"unwind"==e)return z;y(1,e)}(e)}}d.PThread=ye,d.establishStackSpace=function(){var e=We(),t=a()[e+52>>>2],n=a()[e+56>>>2];je(t,t-n),Xe(t)};var xe,be=[];function ve(e,t,n,a){return b?Se(3,1,e,t,n,a):we(e,t,n,a)}function we(e,t,n,a){if("undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var r=[];if(b&&0===r.length)return ve(e,t,n,a);var i={startRoutine:n,pthread_ptr:e,arg:a,transferList:r};return b?(i.cmd="spawnThread",postMessage(i,r),0):he(i)}function ke(e){Atomics.store(a(),e>>2,1),We()&&Ue(e),Atomics.compareExchange(a(),e>>2,1,0)}function Ie(e){Ie.shown||(Ie.shown={}),Ie.shown[e]||(Ie.shown[e]=1,x&&(e="warning: "+e),R(e))}function Se(e,t){var n=arguments.length-2,a=arguments;return function(e){var t=qe(),n=e();return Xe(t),n}((()=>{for(var r=n,i=Ke(8*r),o=i>>3,l=0;l<n;l++){var u=a[2+l];s()[o+l>>>0]=u}return Ve(e,r,i,t)}))}d.invokeEntryPoint=function(e,t){var n=function(e){var t=be[e];return t||(e>=be.length&&(be.length=e+1),be[e]=t=Z.get(e)),t}(e)(t);ee()?ye.setExitStatus(n):He(n)},d.executeNotifiedProxyingQueue=ke,xe=x?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var Ce=[];function Ne(e){try{return O.grow(e-L.byteLength+65535>>>16),X(O.buffer),1}catch(e){}}function Te(e){return b?Se(4,1,e):52}function Re(e,t,n,a,r){return b?Se(5,1,e,t,n,a,r):70}var Ee=[null,[],[]];function $e(e,t){var n=Ee[e];0===t||10===t?((1===e?T:R)(q(n,0)),n.length=0):n.push(t)}function Me(e,t,a,r){if(b)return Se(6,1,e,t,a,r);for(var s=0,o=0;o<a;o++){var l=i()[t>>>2],u=i()[t+4>>>2];t+=8;for(var d=0;d<u;d++)$e(e,n()[l+d>>>0]);s+=u}return i()[r>>>2]=s,0}function Fe(e){return d["_"+e]}function _e(e,t,a,r,i){var s={string:e=>{var t=0;if(null!=e&&0!==e){var a=1+(e.length<<2);!function(e,t,a){!function(e,t,n,a){if(!(a>0))return 0;for(var r=(n>>>=0)+a-1,i=0;i<e.length;++i){var s=e.charCodeAt(i);if(s>=55296&&s<=57343&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++i)),s<=127){if(n>=r)break;t[n++>>>0]=s}else if(s<=2047){if(n+1>=r)break;t[n++>>>0]=192|s>>6,t[n++>>>0]=128|63&s}else if(s<=65535){if(n+2>=r)break;t[n++>>>0]=224|s>>12,t[n++>>>0]=128|s>>6&63,t[n++>>>0]=128|63&s}else{if(n+3>=r)break;t[n++>>>0]=240|s>>18,t[n++>>>0]=128|s>>12&63,t[n++>>>0]=128|s>>6&63,t[n++>>>0]=128|63&s}}t[n>>>0]=0}(e,n(),t,a)}(e,t=Ke(a),a)}return t},array:e=>{var t=Ke(e.length);return function(e,t){(O.buffer!=L&&X(O.buffer),W).set(e,t>>>0)}(e,t),t}},o=Fe(e),l=[],u=0;if(r)for(var d=0;d<r.length;d++){var p=s[a[d]];p?(0===u&&(u=qe()),l[d]=p(r[d])):l[d]=r[d]}var c,h=o.apply(null,l);return c=h,0!==u&&Xe(u),h=function(e){return"string"===t?function(e,t){return(e>>>=0)?q(n(),e,t):""}(e):"boolean"===t?!!e:e}(c),h}ye.init();var Pe,Oe,De,ze=[null,fe,Ae,ve,Te,Re,Me],Le={__emscripten_init_main_thread_js:function(e){Be(e,!A,1,!g),ye.threadInitTLS()},__emscripten_thread_cleanup:function(e){b?postMessage({cmd:"cleanupThread",thread:e}):ce(e)},__pthread_create_js:we,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return!0},_emscripten_notify_task_queue:function(e,t,n,a){if(e==t)setTimeout((()=>ke(a)));else if(b)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:a});else{var r=ye.pthreads[e];if(!r)return;r.postMessage({cmd:"processProxyingQueue",queue:a})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return-1},abort:function(){ie("")},emscripten_check_blocking_allowed:function(){x||A||Ie("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 4294901760},emscripten_get_now:xe,emscripten_memcpy_big:function(e,t,a){n().copyWithin(e>>>0,t>>>0,t+a>>>0)},emscripten_num_logical_cores:function(){return x?P().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Ce.length=t;for(var a=n>>3,r=0;r<t;r++)Ce[r]=s()[a+r>>>0];return(e<0?de[-e-1]:ze[e]).apply(null,Ce)},emscripten_resize_heap:function(e){var t=n().length;if((e>>>=0)<=t)return!1;var a,r=4294901760;if(e>r)return!1;for(var i=1;i<=4;i*=2){var s=t*(1+.2/i);if(s=Math.min(s,e+100663296),Ne(Math.min(r,(a=Math.max(e,s))+(65536-a%65536)%65536)))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:me,fd_close:Te,fd_seek:Re,fd_write:Me,memory:O||d.wasmMemory},We=(function(){var e={env:Le,wasi_snapshot_preview1:Le};function t(e,t){var n=e.exports;if(d.asm=n,function(e){ye.tlsInitFunctions.push(e)}(d.asm._emscripten_tls_init),Z=d.asm.__indirect_function_table,function(e){J.unshift(e)}(d.asm.__wasm_call_ctors),D=t,!b){var a=ye.unusedWorkers.length;ye.unusedWorkers.forEach((function(e){ye.loadWasmModuleToWorker(e,(function(){--a||function(e){if(ne--,d.monitorRunDependencies&&d.monitorRunDependencies(ne),0==ne&&(null!==ae&&(clearInterval(ae),ae=null),re)){var t=re;re=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function a(t){return function(){if(!N&&(g||A)){if("function"==typeof fetch&&!le(se))return fetch(se,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+se+"'";return e.arrayBuffer()})).catch((function(){return ue(se)}));if(c)return new Promise((function(e,t){c(se,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ue(se)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){R("failed to asynchronously prepare wasm: "+e),ie(e)}))}if(b||(ne++,d.monitorRunDependencies&&d.monitorRunDependencies(ne)),d.instantiateWasm)try{return d.instantiateWasm(e,t)}catch(e){R("Module.instantiateWasm callback failed with error: "+e),l(e)}(N||"function"!=typeof WebAssembly.instantiateStreaming||oe(se)||le(se)||x||"function"!=typeof fetch?a(n):fetch(se,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return R("wasm streaming compile failed: "+e),R("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(l)}(),d.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},d._init=function(){return(d._init=d.asm.init).apply(null,arguments)},d._init_with_threads_count=function(){return(d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},d._get_threads_count=function(){return(d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.register_tensor).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.dispose_data).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.dispose).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.Abs).apply(null,arguments)},d._Acos=function(){return(d._Acos=d.asm.Acos).apply(null,arguments)},d._Acosh=function(){return(d._Acosh=d.asm.Acosh).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.Add).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.AddN).apply(null,arguments)},d._All=function(){return(d._All=d.asm.All).apply(null,arguments)},d._Any=function(){return(d._Any=d.asm.Any).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.ArgMax).apply(null,arguments)},d._ArgMin=function(){return(d._ArgMin=d.asm.ArgMin).apply(null,arguments)},d._Asin=function(){return(d._Asin=d.asm.Asin).apply(null,arguments)},d._Asinh=function(){return(d._Asinh=d.asm.Asinh).apply(null,arguments)},d._Atan=function(){return(d._Atan=d.asm.Atan).apply(null,arguments)},d._Atan2=function(){return(d._Atan2=d.asm.Atan2).apply(null,arguments)},d._Atanh=function(){return(d._Atanh=d.asm.Atanh).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.AvgPool).apply(null,arguments)},d._AvgPool3D=function(){return(d._AvgPool3D=d.asm.AvgPool3D).apply(null,arguments)},d._AvgPool3DGrad=function(){return(d._AvgPool3DGrad=d.asm.AvgPool3DGrad).apply(null,arguments)},d._AvgPoolGrad=function(){return(d._AvgPoolGrad=d.asm.AvgPoolGrad).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},d._Bincount=function(){return(d._Bincount=d.asm.Bincount).apply(null,arguments)},d._BitwiseAnd=function(){return(d._BitwiseAnd=d.asm.BitwiseAnd).apply(null,arguments)},d._Ceil=function(){return(d._Ceil=d.asm.Ceil).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.Conv2D).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},d._Conv3D=function(){return(d._Conv3D=d.asm.Conv3D).apply(null,arguments)},d._Conv3DBackpropFilterV2=function(){return(d._Conv3DBackpropFilterV2=d.asm.Conv3DBackpropFilterV2).apply(null,arguments)},d._Conv3DBackpropInputV2=function(){return(d._Conv3DBackpropInputV2=d.asm.Conv3DBackpropInputV2).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.Cos).apply(null,arguments)},d._Cosh=function(){return(d._Cosh=d.asm.Cosh).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},d._Cumprod=function(){return(d._Cumprod=d.asm.Cumprod).apply(null,arguments)},d._Cumsum=function(){return(d._Cumsum=d.asm.Cumsum).apply(null,arguments)},d._DenseBincount=function(){return(d._DenseBincount=d.asm.DenseBincount).apply(null,arguments)},d._DepthToSpace=function(){return(d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},d._Diag=function(){return(d._Diag=d.asm.Diag).apply(null,arguments)},d._Dilation2D=function(){return(d._Dilation2D=d.asm.Dilation2D).apply(null,arguments)},d._Dilation2DBackpropFilter=function(){return(d._Dilation2DBackpropFilter=d.asm.Dilation2DBackpropFilter).apply(null,arguments)},d._Dilation2DBackpropInput=function(){return(d._Dilation2DBackpropInput=d.asm.Dilation2DBackpropInput).apply(null,arguments)},d._Elu=function(){return(d._Elu=d.asm.Elu).apply(null,arguments)},d._EluGrad=function(){return(d._EluGrad=d.asm.EluGrad).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.Equal).apply(null,arguments)},d._Erf=function(){return(d._Erf=d.asm.Erf).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.Exp).apply(null,arguments)},d._Expm1=function(){return(d._Expm1=d.asm.Expm1).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},d._Floor=function(){return(d._Floor=d.asm.Floor).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.Gather).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.GatherNd).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.Greater).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},d._IsFinite=function(){return(d._IsFinite=d.asm.IsFinite).apply(null,arguments)},d._IsInf=function(){return(d._IsInf=d.asm.IsInf).apply(null,arguments)},d._IsNan=function(){return(d._IsNan=d.asm.IsNan).apply(null,arguments)},d._LRN=function(){return(d._LRN=d.asm.LRN).apply(null,arguments)},d._LRNGrad=function(){return(d._LRNGrad=d.asm.LRNGrad).apply(null,arguments)},d._LeakyRelu=function(){return(d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.Less).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.LessEqual).apply(null,arguments)},d._LinSpace=function(){return(d._LinSpace=d.asm.LinSpace).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.Log).apply(null,arguments)},d._Log1p=function(){return(d._Log1p=d.asm.Log1p).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},d._LogicalNot=function(){return(d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},d._LogicalOr=function(){return(d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},d._LogicalXor=function(){return(d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.Max).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.MaxPool).apply(null,arguments)},d._MaxPool3D=function(){return(d._MaxPool3D=d.asm.MaxPool3D).apply(null,arguments)},d._MaxPool3DGrad=function(){return(d._MaxPool3DGrad=d.asm.MaxPool3DGrad).apply(null,arguments)},d._MaxPoolGrad=function(){return(d._MaxPoolGrad=d.asm.MaxPoolGrad).apply(null,arguments)},d._MaxPoolWithArgmax=function(){return(d._MaxPoolWithArgmax=d.asm.MaxPoolWithArgmax).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.Maximum).apply(null,arguments)},d._Mean=function(){return(d._Mean=d.asm.Mean).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.Min).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.Minimum).apply(null,arguments)},d._MirrorPad=function(){return(d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},d._Mod=function(){return(d._Mod=d.asm.Mod).apply(null,arguments)},d._Multinomial=function(){return(d._Multinomial=d.asm.Multinomial).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.Multiply).apply(null,arguments)},d._Neg=function(){return(d._Neg=d.asm.Neg).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.NotEqual).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.OneHot).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.PadV2).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.Pow).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.Prelu).apply(null,arguments)},d._Prod=function(){return(d._Prod=d.asm.Prod).apply(null,arguments)},d._RealDiv=function(){return(d._RealDiv=d.asm.RealDiv).apply(null,arguments)},d._Reciprocal=function(){return(d._Reciprocal=d.asm.Reciprocal).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.Relu).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.Relu6).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},d._ResizeBilinearGrad=function(){return(d._ResizeBilinearGrad=d.asm.ResizeBilinearGrad).apply(null,arguments)},d._ResizeNearestNeighbor=function(){return(d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},d._ResizeNearestNeighborGrad=function(){return(d._ResizeNearestNeighborGrad=d.asm.ResizeNearestNeighborGrad).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.Reverse).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},d._Round=function(){return(d._Round=d.asm.Round).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},d._SearchSorted=function(){return(d._SearchSorted=d.asm.SearchSorted).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.SelectV2).apply(null,arguments)},d._Selu=function(){return(d._Selu=d.asm.Selu).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},d._Sign=function(){return(d._Sign=d.asm.Sign).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Sin).apply(null,arguments)},d._Sinh=function(){return(d._Sinh=d.asm.Sinh).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Softmax).apply(null,arguments)},d._Softplus=function(){return(d._Softplus=d.asm.Softplus).apply(null,arguments)},d._SparseFillEmptyRows=function(){return(d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},d._SparseReshape=function(){return(d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},d._SparseSegmentReduction=function(){return(d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},d._SparseToDense=function(){return(d._SparseToDense=d.asm.SparseToDense).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Sqrt).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm.Square).apply(null,arguments)},d._SquaredDifference=function(){return(d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},d._Step=function(){return(d._Step=d.asm.Step).apply(null,arguments)},d._StridedSlice=function(){return(d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.Sub).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.Sum).apply(null,arguments)},d._Tan=function(){return(d._Tan=d.asm.Tan).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.Tanh).apply(null,arguments)},d._TensorScatterUpdate=function(){return(d._TensorScatterUpdate=d.asm.TensorScatterUpdate).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.Tile).apply(null,arguments)},d._TopK=function(){return(d._TopK=d.asm.TopK).apply(null,arguments)},d._Transform=function(){return(d._Transform=d.asm.Transform).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.Transpose).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},d._malloc=function(){return(d._malloc=d.asm.malloc).apply(null,arguments)},d._free=function(){return(d._free=d.asm.free).apply(null,arguments)},d.__emscripten_tls_init=function(){return(d.__emscripten_tls_init=d.asm._emscripten_tls_init).apply(null,arguments)},d._pthread_self=function(){return(We=d._pthread_self=d.asm.pthread_self).apply(null,arguments)}),Be=(d.___errno_location=function(){return(d.___errno_location=d.asm.__errno_location).apply(null,arguments)},d.__emscripten_thread_init=function(){return(Be=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)}),Ve=(d.__emscripten_thread_crashed=function(){return(d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},d._emscripten_main_thread_process_queued_calls=function(){return(d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},d._emscripten_main_browser_thread_id=function(){return(d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},d._emscripten_run_in_main_runtime_thread_js=function(){return(Ve=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Ue=(d._emscripten_dispatch_to_thread_=function(){return(d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},d.__emscripten_proxy_execute_task_queue=function(){return(Ue=d.__emscripten_proxy_execute_task_queue=d.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),Ge=d.__emscripten_thread_free_data=function(){return(Ge=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},He=d.__emscripten_thread_exit=function(){return(He=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},je=d._emscripten_stack_set_limits=function(){return(je=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},qe=d.stackSave=function(){return(qe=d.stackSave=d.asm.stackSave).apply(null,arguments)},Xe=d.stackRestore=function(){return(Xe=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},Ke=d.stackAlloc=function(){return(Ke=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)};function Ze(e){if(e=e||m,!(ne>0)){if(b)return o(d),te(),void startWorker(d);(function(){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)e=d.preRun.shift(),Y.unshift(e);var e;ge(Y)})(),ne>0||(d.setStatus?(d.setStatus("Running..."),setTimeout((function(){setTimeout((function(){d.setStatus("")}),1),t()}),1)):t())}function t(){Pe||(Pe=!0,d.calledRun=!0,!H&&(te(),o(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),function(){if(!b){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)e=d.postRun.shift(),Q.unshift(e);ge(Q)}var e}()))}}if(d.dynCall_iijjiiii=function(){return(d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},d.dynCall_jiji=function(){return(d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},d.keepRuntimeAlive=ee,d.wasmMemory=O,d.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?Fe(e):function(){return _e(e,t,n,arguments)}},d.ExitStatus=pe,d.PThread=ye,re=function e(){Pe||Ze(),Pe||(re=e)},d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();if(Ze(),u&&(Oe={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!u.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!u.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)De=WasmBackendModule;else{if(void 0===t)throw new Error("Could not find wasm module in post.js");De=t}if(Oe){var Ye=De._dispose;De._dispose=function(){Ye(),Oe.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Oe.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return t.ready});"object"==typeof n&&"object"==typeof a?a.exports=i:"function"==typeof define&&e.amdO?define([],(function(){return i})):"object"==typeof n&&(n.WasmBackendModuleThreadedSimd=i)})),D=y(((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'})),z=y(((n,a)=>{var r,i=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||t,function(e){var t,n,a,i=void 0!==(e=e||{})?e:{};i.ready=new Promise((function(e,a){t=e,n=a})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var s,o,l,u=Object.assign({},i),d=[],p="object"==typeof window,c="function"==typeof importScripts,h="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,f="";if(h){var m=$(),y=M();f=c?y.dirname(f)+"/":"//",s=(e,t)=>(e=B(e)?new URL(e):y.normalize(e),m.readFileSync(e,t?void 0:"utf8")),l=e=>{var t=s(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{e=B(e)?new URL(e):y.normalize(e),m.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof U))throw e})),process.on("unhandledRejection",(function(e){throw e})),i.inspect=function(){return"[Emscripten Module object]"}}else(p||c)&&(c?f=self.location.href:"undefined"!=typeof document&&document.currentScript&&(f=document.currentScript.src),r&&(f=r),f=0!==f.indexOf("blob:")?f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):"",s=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)});var g,A=i.print||console.log.bind(console),x=i.printErr||console.warn.bind(console);Object.assign(i,u),u=null,i.arguments&&(d=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit,i.wasmBinary&&(g=i.wasmBinary),i.noExitRuntime,"object"!=typeof WebAssembly&&D("no native wasm support detected");var b,v,w,k,I,S=!1,C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function N(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&C)return C.decode(e.subarray(t,r));for(var i="";t<r;){var s=e[t++];if(128&s){var o=63&e[t++];if(192!=(224&s)){var l=63&e[t++];if((s=224==(240&s)?(15&s)<<12|o<<6|l:(7&s)<<18|o<<12|l<<6|63&e[t++])<65536)i+=String.fromCharCode(s);else{var u=s-65536;i+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else i+=String.fromCharCode((31&s)<<6|o)}else i+=String.fromCharCode(s)}return i}function T(e){v=e,i.HEAP8=w=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=new Int32Array(e),i.HEAPU8=k=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=I=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var R=[],E=[],F=[],_=0,P=null,O=null;function D(e){i.onAbort&&i.onAbort(e),x(e="Aborted("+e+")"),S=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}var z,L;function W(e){return e.startsWith("data:application/octet-stream;base64,")}function B(e){return e.startsWith("file://")}function V(e){try{if(e==z&&g)return new Uint8Array(g);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){D(e)}}function U(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function G(e){for(;e.length>0;)e.shift()(i)}function H(e){try{return b.grow(e-v.byteLength+65535>>>16),T(b.buffer),1}catch(e){}}W(z="tfjs-backend-wasm.wasm")||(L=z,z=i.locateFile?i.locateFile(L,f):f+L);var j=[null,[],[]];function q(e,t){var n=j[e];0===t||10===t?((1===e?A:x)(N(n,0)),n.length=0):n.push(t)}function X(e){return i["_"+e]}function K(e,t,n,a,r){var i={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,a){if(!(a>0))return 0;for(var r=(n>>>=0)+a-1,i=0;i<e.length;++i){var s=e.charCodeAt(i);if(s>=55296&&s<=57343&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++i)),s<=127){if(n>=r)break;t[n++>>>0]=s}else if(s<=2047){if(n+1>=r)break;t[n++>>>0]=192|s>>6,t[n++>>>0]=128|63&s}else if(s<=65535){if(n+2>=r)break;t[n++>>>0]=224|s>>12,t[n++>>>0]=128|s>>6&63,t[n++>>>0]=128|63&s}else{if(n+3>=r)break;t[n++>>>0]=240|s>>18,t[n++>>>0]=128|s>>12&63,t[n++>>>0]=128|s>>6&63,t[n++>>>0]=128|63&s}}t[n>>>0]=0}(e,k,t,n)}(e,t=ne(n),n)}return t},array:e=>{var t=ne(e.length);return function(e,t){w.set(e,t>>>0)}(e,t),t}},s=X(e),o=[],l=0;if(a)for(var u=0;u<a.length;u++){var d=i[n[u]];d?(0===l&&(l=ee()),o[u]=d(a[u])):o[u]=a[u]}var p,c=s.apply(null,o);return p=c,0!==l&&te(l),c=function(e){return"string"===t?function(e,t){return(e>>>=0)?N(k,e,t):""}(e):"boolean"===t?!!e:e}(p),c}var Z,Y,J,Q={abort:function(){D("")},emscripten_get_heap_max:function(){return 4294901760},emscripten_memcpy_big:function(e,t,n){k.copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_resize_heap:function(e){var t,n=k.length,a=4294901760;if((e>>>=0)>a)return!1;for(var r=1;r<=4;r*=2){var i=n*(1+.2/r);if(i=Math.min(i,e+100663296),H(Math.min(a,(t=Math.max(e,i))+(65536-t%65536)%65536)))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,a,r){return 70},fd_write:function(e,t,n,a){for(var r=0,i=0;i<n;i++){var s=I[t>>>2],o=I[t+4>>>2];t+=8;for(var l=0;l<o;l++)q(e,k[s+l>>>0]);r+=o}return I[a>>>2]=r,0}},ee=(function(){var e={env:Q,wasi_snapshot_preview1:Q};function t(e,t){var n=e.exports;i.asm=n,T((b=i.asm.memory).buffer),i.asm.__indirect_function_table,function(e){E.unshift(e)}(i.asm.__wasm_call_ctors),function(e){if(_--,i.monitorRunDependencies&&i.monitorRunDependencies(_),0==_&&(null!==P&&(clearInterval(P),P=null),O)){var t=O;O=null,t()}}()}function a(e){t(e.instance)}function r(t){return function(){if(!g&&(p||c)){if("function"==typeof fetch&&!B(z))return fetch(z,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+z+"'";return e.arrayBuffer()})).catch((function(){return V(z)}));if(o)return new Promise((function(e,t){o(z,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return V(z)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){x("failed to asynchronously prepare wasm: "+e),D(e)}))}if(_++,i.monitorRunDependencies&&i.monitorRunDependencies(_),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(e){x("Module.instantiateWasm callback failed with error: "+e),n(e)}(g||"function"!=typeof WebAssembly.instantiateStreaming||W(z)||B(z)||h||"function"!=typeof fetch?r(a):fetch(z,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(a,(function(e){return x("wasm streaming compile failed: "+e),x("falling back to ArrayBuffer instantiation"),r(a)}))}))).catch(n)}(),i.___wasm_call_ctors=function(){return(i.___wasm_call_ctors=i.asm.__wasm_call_ctors).apply(null,arguments)},i._init=function(){return(i._init=i.asm.init).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.init_with_threads_count).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.get_threads_count).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.register_tensor).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.dispose_data).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.dispose).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.Abs).apply(null,arguments)},i._Acos=function(){return(i._Acos=i.asm.Acos).apply(null,arguments)},i._Acosh=function(){return(i._Acosh=i.asm.Acosh).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.Add).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.AddN).apply(null,arguments)},i._All=function(){return(i._All=i.asm.All).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.Any).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.ArgMax).apply(null,arguments)},i._ArgMin=function(){return(i._ArgMin=i.asm.ArgMin).apply(null,arguments)},i._Asin=function(){return(i._Asin=i.asm.Asin).apply(null,arguments)},i._Asinh=function(){return(i._Asinh=i.asm.Asinh).apply(null,arguments)},i._Atan=function(){return(i._Atan=i.asm.Atan).apply(null,arguments)},i._Atan2=function(){return(i._Atan2=i.asm.Atan2).apply(null,arguments)},i._Atanh=function(){return(i._Atanh=i.asm.Atanh).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.AvgPool).apply(null,arguments)},i._AvgPool3D=function(){return(i._AvgPool3D=i.asm.AvgPool3D).apply(null,arguments)},i._AvgPool3DGrad=function(){return(i._AvgPool3DGrad=i.asm.AvgPool3DGrad).apply(null,arguments)},i._AvgPoolGrad=function(){return(i._AvgPoolGrad=i.asm.AvgPoolGrad).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.BatchMatMul).apply(null,arguments)},i._Bincount=function(){return(i._Bincount=i.asm.Bincount).apply(null,arguments)},i._BitwiseAnd=function(){return(i._BitwiseAnd=i.asm.BitwiseAnd).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.Ceil).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.ClipByValue).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.Conv2D).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.Conv2DBackpropInput).apply(null,arguments)},i._Conv3D=function(){return(i._Conv3D=i.asm.Conv3D).apply(null,arguments)},i._Conv3DBackpropFilterV2=function(){return(i._Conv3DBackpropFilterV2=i.asm.Conv3DBackpropFilterV2).apply(null,arguments)},i._Conv3DBackpropInputV2=function(){return(i._Conv3DBackpropInputV2=i.asm.Conv3DBackpropInputV2).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.Cos).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.Cosh).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.CropAndResize).apply(null,arguments)},i._Cumprod=function(){return(i._Cumprod=i.asm.Cumprod).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.Cumsum).apply(null,arguments)},i._DenseBincount=function(){return(i._DenseBincount=i.asm.DenseBincount).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.DepthToSpace).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.DepthwiseConv2dNative).apply(null,arguments)},i._Diag=function(){return(i._Diag=i.asm.Diag).apply(null,arguments)},i._Dilation2D=function(){return(i._Dilation2D=i.asm.Dilation2D).apply(null,arguments)},i._Dilation2DBackpropFilter=function(){return(i._Dilation2DBackpropFilter=i.asm.Dilation2DBackpropFilter).apply(null,arguments)},i._Dilation2DBackpropInput=function(){return(i._Dilation2DBackpropInput=i.asm.Dilation2DBackpropInput).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.Elu).apply(null,arguments)},i._EluGrad=function(){return(i._EluGrad=i.asm.EluGrad).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.Equal).apply(null,arguments)},i._Erf=function(){return(i._Erf=i.asm.Erf).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.Exp).apply(null,arguments)},i._Expm1=function(){return(i._Expm1=i.asm.Expm1).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.FlipLeftRight).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.Floor).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.FloorDiv).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.FusedBatchNorm).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.FusedConv2D).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.FusedDepthwiseConv2D).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.Gather).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.GatherNd).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.Greater).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.GreaterEqual).apply(null,arguments)},i._IsFinite=function(){return(i._IsFinite=i.asm.IsFinite).apply(null,arguments)},i._IsInf=function(){return(i._IsInf=i.asm.IsInf).apply(null,arguments)},i._IsNan=function(){return(i._IsNan=i.asm.IsNan).apply(null,arguments)},i._LRN=function(){return(i._LRN=i.asm.LRN).apply(null,arguments)},i._LRNGrad=function(){return(i._LRNGrad=i.asm.LRNGrad).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.LeakyRelu).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Less).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.LessEqual).apply(null,arguments)},i._LinSpace=function(){return(i._LinSpace=i.asm.LinSpace).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm.Log).apply(null,arguments)},i._Log1p=function(){return(i._Log1p=i.asm.Log1p).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.LogicalAnd).apply(null,arguments)},i._LogicalNot=function(){return(i._LogicalNot=i.asm.LogicalNot).apply(null,arguments)},i._LogicalOr=function(){return(i._LogicalOr=i.asm.LogicalOr).apply(null,arguments)},i._LogicalXor=function(){return(i._LogicalXor=i.asm.LogicalXor).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.Max).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.MaxPool).apply(null,arguments)},i._MaxPool3D=function(){return(i._MaxPool3D=i.asm.MaxPool3D).apply(null,arguments)},i._MaxPool3DGrad=function(){return(i._MaxPool3DGrad=i.asm.MaxPool3DGrad).apply(null,arguments)},i._MaxPoolGrad=function(){return(i._MaxPoolGrad=i.asm.MaxPoolGrad).apply(null,arguments)},i._MaxPoolWithArgmax=function(){return(i._MaxPoolWithArgmax=i.asm.MaxPoolWithArgmax).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.Maximum).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.Mean).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.Min).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.Minimum).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.MirrorPad).apply(null,arguments)},i._Mod=function(){return(i._Mod=i.asm.Mod).apply(null,arguments)},i._Multinomial=function(){return(i._Multinomial=i.asm.Multinomial).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.Multiply).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.Neg).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.NonMaxSuppressionV3).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.NonMaxSuppressionV4).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.NonMaxSuppressionV5).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.NotEqual).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.OneHot).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.PadV2).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.Pow).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.Prelu).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.Prod).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.RealDiv).apply(null,arguments)},i._Reciprocal=function(){return(i._Reciprocal=i.asm.Reciprocal).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.Relu).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.Relu6).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.ResizeBilinear).apply(null,arguments)},i._ResizeBilinearGrad=function(){return(i._ResizeBilinearGrad=i.asm.ResizeBilinearGrad).apply(null,arguments)},i._ResizeNearestNeighbor=function(){return(i._ResizeNearestNeighbor=i.asm.ResizeNearestNeighbor).apply(null,arguments)},i._ResizeNearestNeighborGrad=function(){return(i._ResizeNearestNeighborGrad=i.asm.ResizeNearestNeighborGrad).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.Reverse).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.RotateWithOffset).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.Round).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.Rsqrt).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.ScatterNd).apply(null,arguments)},i._SearchSorted=function(){return(i._SearchSorted=i.asm.SearchSorted).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.SelectV2).apply(null,arguments)},i._Selu=function(){return(i._Selu=i.asm.Selu).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Sigmoid).apply(null,arguments)},i._Sign=function(){return(i._Sign=i.asm.Sign).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Sin).apply(null,arguments)},i._Sinh=function(){return(i._Sinh=i.asm.Sinh).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Softmax).apply(null,arguments)},i._Softplus=function(){return(i._Softplus=i.asm.Softplus).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.SparseFillEmptyRows).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.SparseReshape).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.SparseSegmentReduction).apply(null,arguments)},i._SparseToDense=function(){return(i._SparseToDense=i.asm.SparseToDense).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Sqrt).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Square).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.SquaredDifference).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.Step).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.StridedSlice).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Sub).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Sum).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Tan).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Tanh).apply(null,arguments)},i._TensorScatterUpdate=function(){return(i._TensorScatterUpdate=i.asm.TensorScatterUpdate).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Tile).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.TopK).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Transform).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Transpose).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm._FusedMatMul).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.malloc).apply(null,arguments)},i._free=function(){return(i._free=i.asm.free).apply(null,arguments)},i.___errno_location=function(){return(i.___errno_location=i.asm.__errno_location).apply(null,arguments)},i.stackSave=function(){return(ee=i.stackSave=i.asm.stackSave).apply(null,arguments)}),te=i.stackRestore=function(){return(te=i.stackRestore=i.asm.stackRestore).apply(null,arguments)},ne=i.stackAlloc=function(){return(ne=i.stackAlloc=i.asm.stackAlloc).apply(null,arguments)};function ae(e){function n(){Z||(Z=!0,i.calledRun=!0,!S&&(G(E),t(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),function(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)e=i.postRun.shift(),F.unshift(e);var e;G(F)}()))}e=e||d,_>0||(function(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)e=i.preRun.shift(),R.unshift(e);var e;G(R)}(),_>0)||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),n()}),1)):n())}if(i.dynCall_iijjiiii=function(){return(i.dynCall_iijjiiii=i.asm.dynCall_iijjiiii).apply(null,arguments)},i.dynCall_jiji=function(){return(i.dynCall_jiji=i.asm.dynCall_jiji).apply(null,arguments)},i.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?X(e):function(){return K(e,t,n,arguments)}},O=function e(){Z||ae(),Z||(O=e)},i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();if(ae(),a&&(Y={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)J=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");J=WasmBackendModuleThreadedSimd}if(Y){var re=J._dispose;J._dispose=function(){re(),Y.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Y.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof n&&"object"==typeof a?a.exports=i:"function"==typeof define&&e.amdO?define([],(function(){return i})):"object"==typeof n&&(n.WasmBackendModule=i)})),L=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},W=class{refCount(e){return B("refCount")}incRef(e){return B("incRef")}timerAvailable(){return!0}time(e){return B("time")}read(e){return B("read")}readSync(e){return B("readSync")}readToGPU(e,t){return B("readToGPU")}numDataIds(){return B("numDataIds")}disposeData(e,t){return B("disposeData")}write(e,t,n){return B("write")}move(e,t,n,a,r){return B("move")}createTensorFromGPUData(e,t,n){return B("createTensorFromGPUData")}memory(){return B("memory")}floatPrecision(){return B("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return B("dispose")}};function B(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function V(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,j(e,t,n)}function U(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,j(e,n,a),j(t,n,a)}function G(e,t,n){return Math.max(e,Math.min(t,n))}function H(e){return e%2==0?e:e+1}function j(e,t,n){let a=e[t];e[t]=e[n],e[n]=a}function q(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function X(e,t){let n=Math.random();return t*n+(1-n)*e}function K(e,t){let n=0;for(let a=0;a<e.length;a++){let r=Number(e[a])-Number(t[a]);n+=r*r}return n}function Z(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Y(e,t,n=""){Z(ne(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function J(e){Z(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Q(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ee(e){return 0===e.length}function te(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function ne(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ae(e){return e%1==0}function re(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function ie(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function se(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return V(t),t}function oe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function le(e,t=(e=>0),n,a){return new Promise(((r,i)=>{let s=0,o=()=>{if(e())return void r();s++;let l=t(s);null!=n&&s>=n?i():null!=a?a(o,l):setTimeout(o,l)};o()}))}function ue(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[a]=t/n,r}function de(e,t){let n=t.length;return Z((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Z(e.every((e=>ae(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function pe(e,t){let n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||r?null:de(t,e).sort(),s=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[s]||i[s]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),i[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function ce(e,t){return he(e,t)}function he(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function fe(e,t){for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function me(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ye(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ge(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ae(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function xe(e){return"string"==typeof e||e instanceof String}function be(e){return"boolean"==typeof e}function ve(e){return"number"==typeof e}function we(e){return Array.isArray(e)?we(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":ve(e)?"float32":xe(e)?"string":be(e)?"bool":"float32"}function ke(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ie(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Se(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function Ce(e,t,n,a=!1){let r=new Array;if(1===t.length){let i=t[0]*(a?2:1);for(let t=0;t<i;t++)r[t]=n[e+t]}else{let i=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<i;t++)r[t]=Ce(e+t*o,s,n,a)}return r}function Ne(e,t,n=!1){if(0===e.length)return t[0];let a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Ce(0,e,t,n)}function Te(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Re(e,t){let n=Ee(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Ee(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function $e(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ne(e,new Float32Array(n));if("int32"===t)return Ne(e,new Int32Array(n));if("bool"===t)return Ne(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Me(e){e.forEach((t=>{Z(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Fe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function _e(e,t,n){if(0===t)return[];if(1===t)return[e];let a=new Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function Pe(e){return e&&e.then&&"function"==typeof e.then}var Oe="tfjsflags",De=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ze,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Le().getBool("IS_TEST")||Le().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Le().getBool("IS_TEST")||Le().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Pe(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Oe in e&&e[Oe].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){let n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}};function ze(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Le(){return Be}var We,Be=null;function Ve(){if(null==We){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e.g)t=e.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}We=t}return We}function Ue(e,t){let n=function(){let e=Ve();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let a=t();return n.set(e,a),n.get(e)}}var Ge="Abs",He="Acos",je="Acosh",qe="Add",Xe="AddN",Ke="All",Ze="Any",Ye="ArgMax",Je="ArgMin",Qe="Asin",et="Asinh",tt="Atan",nt="Atanh",at="Atan2",rt="AvgPool",it="AvgPoolGrad",st="AvgPool3D",ot="AvgPool3DGrad",lt="BatchMatMul",ut="BatchToSpaceND",dt="Bincount",pt="BitwiseAnd",ct="BroadcastTo",ht="BroadcastArgs",ft="Cast",mt="Ceil",yt="ClipByValue",gt="Complex",At="ComplexAbs",xt="Concat",bt="Conv2D",vt="Conv2DBackpropFilter",wt="Conv2DBackpropInput",kt="Conv3D",It="Conv3DBackpropFilterV2",St="Conv3DBackpropInputV2",Ct="Cos",Nt="Cosh",Tt="Cumprod",Rt="Cumsum",Et="CropAndResize",$t="DenseBincount",Mt="DepthToSpace",Ft="DepthwiseConv2dNative",_t="DepthwiseConv2dNativeBackpropFilter",Pt="DepthwiseConv2dNativeBackpropInput",Ot="Diag",Dt="Dilation2D",zt="Dilation2DBackpropInput",Lt="Dilation2DBackpropFilter",Wt="Draw",Bt="RealDiv",Vt="Einsum",Ut="Elu",Gt="EluGrad",Ht="Erf",jt="Equal",qt="Exp",Xt="ExpandDims",Kt="Expm1",Zt="FFT",Yt="Fill",Jt="FlipLeftRight",Qt="Floor",en="FloorDiv",tn="FusedBatchNorm",nn="GatherV2",an="GatherNd",rn="Greater",sn="GreaterEqual",on="Identity",ln="IFFT",un="Imag",dn="IsFinite",pn="IsInf",cn="IsNan",hn="LeakyRelu",fn="Less",mn="LessEqual",yn="LinSpace",gn="Log",An="Log1p",xn="LogicalAnd",bn="LogicalNot",vn="LogicalOr",wn="LogicalXor",kn="LogSoftmax",In="LowerBound",Sn="LRN",Cn="LRNGrad",Nn="MatrixBandPart",Tn="Max",Rn="Maximum",En="MaxPool",$n="MaxPoolGrad",Mn="MaxPool3D",Fn="MaxPool3DGrad",_n="MaxPoolWithArgmax",Pn="Mean",On="Min",Dn="Minimum",zn="MirrorPad",Ln="Mod",Wn="Multinomial",Bn="Multiply",Vn="Neg",Un="NotEqual",Gn="NonMaxSuppressionV3",Hn="NonMaxSuppressionV4",jn="NonMaxSuppressionV5",qn="OnesLike",Xn="OneHot",Kn="Pack",Zn="PadV2",Yn="Pool",Jn="Pow",Qn="Prelu",ea="Prod",ta="RaggedGather",na="RaggedRange",aa="RaggedTensorToTensor",ra="Range",ia="Real",sa="Reciprocal",oa="Relu",la="Reshape",ua="ResizeNearestNeighbor",da="ResizeNearestNeighborGrad",pa="ResizeBilinear",ca="ResizeBilinearGrad",ha="Relu6",fa="Reverse",ma="Round",ya="Rsqrt",ga="ScatterNd",Aa="TensorScatterUpdate",xa="SearchSorted",ba="Select",va="Selu",wa="Slice",ka="Sin",Ia="Sinh",Sa="Sign",Ca="Sigmoid",Na="Softplus",Ta="Sqrt",Ra="Sum",Ea="SpaceToBatchND",$a="SplitV",Ma="Softmax",Fa="SparseFillEmptyRows",_a="SparseReshape",Pa="SparseSegmentMean",Oa="SparseSegmentSum",Da="SparseToDense",za="SquaredDifference",La="Square",Wa="StaticRegexReplace",Ba="StridedSlice",Va="StringNGrams",Ua="StringSplit",Ga="StringToHashBucketFast",Ha="Sub",ja="Tan",qa="Tanh",Xa="Tile",Ka="TopK",Za="Transform",Ya="Transpose",Ja="Unique",Qa="Unpack",er="UnsortedSegmentSum",tr="UpperBound",nr="ZerosLike",ar="Step",rr="FromPixels",ir="RotateWithOffset",sr="_FusedMatMul",or="FusedConv2D",lr="FusedDepthwiseConv2D";function ur(...e){Le().getBool("IS_TEST")||Le().getBool("PROD")||console.warn(...e)}function dr(...e){Le().getBool("IS_TEST")||Le().getBool("PROD")||console.log(...e)}var pr=Ue("kernelRegistry",(()=>new Map)),cr=Ue("gradRegistry",(()=>new Map));function hr(e,t){let n=vr(e,t);return pr.get(n)}function fr(e){return cr.get(e)}function mr(e){let t=pr.entries(),n=[];for(;;){let{done:a,value:r}=t.next();if(a)break;let[i,s]=r,[o]=i.split("_");o===e&&n.push(s)}return n}function yr(e){let{kernelName:t,backendName:n}=e,a=vr(t,n);pr.has(a)&&ur(`The kernel '${t}' for backend '${n}' is already registered`),pr.set(a,e)}function gr(e){let{kernelName:t}=e;cr.has(t)&&Le().getBool("DEBUG")&&ur(`Overriding the gradient for '${t}'`),cr.set(t,e)}function Ar(e,t){let n=vr(e,t);if(!pr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);pr.delete(n)}function xr(e){if(!cr.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);cr.delete(e)}function br(e,t){mr(e).forEach((e=>{yr(Object.assign({},e,{backendName:t}))}))}function vr(e,t){return`${t}_${e}`}var wr={};function kr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}g(wr,{arraysEqual:()=>ne,arraysEqualWithNull:()=>te,assert:()=>Z,assertNonNegativeIntegerDimensions:()=>Me,assertNonNull:()=>J,assertShapesMatch:()=>Y,bytesFromStringArray:()=>Ae,bytesPerElement:()=>ge,checkConversionForErrors:()=>fe,clamp:()=>G,computeStrides:()=>Se,convertBackendValuesAndArrayBuffer:()=>Te,createScalarValue:()=>zr,createShuffledIndices:()=>se,decodeString:()=>Ur,distSquared:()=>K,encodeString:()=>Vr,fetch:()=>Br,fingerPrint64:()=>Dr,flatten:()=>Hr,getArrayFromDType:()=>he,getTypedArrayFromDType:()=>ce,hasEncodingLoss:()=>ye,hexToLong:()=>Cr,indexToLoc:()=>_e,inferDtype:()=>we,inferFromImplicitShape:()=>ue,isBoolean:()=>be,isFunction:()=>ke,isInt:()=>ae,isNumber:()=>ve,isPromise:()=>Pe,isScalarShape:()=>ee,isString:()=>xe,isTypedArray:()=>Gr,isValidDtype:()=>me,locToIndex:()=>Fe,makeOnesTypedArray:()=>Re,makeZerosNestedTypedArray:()=>$e,makeZerosTypedArray:()=>Ee,nearestDivisor:()=>Ie,nearestLargerEven:()=>H,now:()=>Wr,parseAxisParam:()=>de,randUniform:()=>X,repeatedTry:()=>le,rightPad:()=>oe,shuffle:()=>V,shuffleCombo:()=>U,sizeFromShape:()=>Q,sizeToSquarishShape:()=>ie,squeezeShape:()=>pe,sum:()=>q,swap:()=>j,tanh:()=>re,toNestedArray:()=>Ne,toTypedArray:()=>Lr});var Ir=A(x()),Sr=Ir.default||Ir;function Cr(e){return Sr.fromString(e,!0,16)}var Nr=Cr("c3a5c85c97cb3127"),Tr=Cr("b492b66fbe98f273"),Rr=Cr("9ae16a3b2f90404f");function Er(e){return e.xor(e.shru(47))}function $r(e,t,n){let a=e.slice(t,t+n);return Sr.fromBytes(Array.from(a),!0,!0)}function Mr(e,t){return $r(e,t,8)}function Fr(e,t){return $r(e,t,4)}function _r(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Pr(e,t,n=Cr("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Or(e,t,n,a){return function(e,t,n,a,r,i){r=r.add(e),i=_r(i.add(r).add(a),21);let s=r;return r=(r=r.add(t)).add(n),i=i.add(_r(r,44)),[r.add(a),i.add(s)]}(Mr(e,t),Mr(e,t+8),Mr(e,t+16),Mr(e,t+24),n,a)}function Dr(e,t=e.length){let n=Sr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=Rr.add(2*t),a=Mr(e,0).add(Rr),r=Mr(e,t-8);return Pr(_r(r,37).mul(n).add(a),_r(a,25).add(r).mul(n),n)}if(t>=4){let n=Rr.add(2*t);return Pr(Fr(e,0).shl(3).add(t),Fr(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Er(Rr.mul(n).xor(Nr.mul(a))).mul(Rr)}return Rr}(e,t):function(e,t=e.length){let n=Rr.add(2*t),a=Mr(e,0).mul(Tr),r=Mr(e,8),i=Mr(e,t-8).mul(n),s=Mr(e,t-16).mul(Rr);return Pr(_r(a.add(r),43).add(_r(i,30)).add(s),a.add(_r(r.add(Rr),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=Rr.add(2*t),a=Mr(e,0).mul(Rr),r=Mr(e,8),i=Mr(e,t-8).mul(n),s=Mr(e,t-16).mul(Rr),o=_r(a.add(r),43).add(_r(i,30)).add(s),l=Pr(o,a.add(_r(r.add(Rr),18)).add(i),n),u=Mr(e,16).mul(n),d=Mr(e,24),p=o.add(Mr(e,t-32)).mul(n),c=l.add(Mr(e,t-24)).mul(n);return Pr(_r(u.add(d),43).add(_r(p,30)).add(c),u.add(_r(d.add(a),18)).add(p),n)}(e,t);let a=n,r=n.mul(Tr).add(113),i=Er(r.mul(Rr).add(113)).mul(Rr),s=[Sr.UZERO,Sr.UZERO],o=[Sr.UZERO,Sr.UZERO];a=a.mul(Rr).add(Mr(e,0));let l=0,u=64*(t-1>>6),d=u+(t-1&63)-63;do{a=_r(a.add(r).add(s[0]).add(Mr(e,l+8)),37).mul(Tr),r=_r(r.add(s[1]).add(Mr(e,l+48)),42).mul(Tr),a=a.xor(o[1]),r=r.add(s[0]).add(Mr(e,l+40)),i=_r(i.add(o[0]),33).mul(Tr),s=Or(e,l,s[1].mul(Tr),a.add(o[0])),o=Or(e,l+32,i.add(o[1]),r.add(Mr(e,l+16))),[i,a]=[a,i],l+=64}while(l!==u);let p=Tr.add(i.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),s[0]=s[0].add(o[0]),o[0]=o[0].add(s[0]),a=_r(a.add(r).add(s[0]).add(Mr(e,l+8)),37).mul(p),r=_r(r.add(s[1]).add(Mr(e,l+48)),42).mul(p),a=a.xor(o[1].mul(9)),r=r.add(s[0].mul(9).add(Mr(e,l+40))),i=_r(i.add(o[0]),33).mul(p),s=Or(e,l,s[1].mul(p),a.add(o[0])),o=Or(e,l+32,i.add(o[1]),r.add(Mr(e,l+16))),[i,a]=[a,i],Pr(Pr(s[0],o[0],p).add(Er(r).mul(Nr)).add(i),Pr(s[1],o[1],p).add(a),p)}function zr(e,t){return"string"===t?Vr(e):Lr([e],t)}function Lr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Hr(e)),Le().getBool("DEBUG")&&fe(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Wr(){return Le().platform.now()}function Br(e,t){return Le().platform.fetch(e,t)}function Vr(e,t="utf-8"){return t=t||"utf-8",Le().platform.encode(e,t)}function Ur(e,t="utf-8"){return t=t||"utf-8",Le().platform.decode(e,t)}function Gr(e){return null!=Le().platform.isTypedArray?Le().platform.isTypedArray(e):kr(e)}function Hr(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Pe(e)||null==e||Gr(e)&&n)t.push(e);else if(Array.isArray(e)||Gr(e))for(let a=0;a<e.length;++a)Hr(e[a],t,n);else{let a=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)Hr(e[r],t,n)}return t}function jr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var qr=20,Xr=3,Kr=7;function Zr(e,t,n,a){let r=Se(t),i=function(e,t,n,a){let r=Q(t),i=a[a.length-1],s=new Array(i).fill(0),o=t.length,l="complex64"===n?ei(e):e;if(o>1)for(let e=0;e<r/i;e++){let t=e*i;for(let e=0;e<i;e++)s[e]=Math.max(s[e],Yr(l[t+e],0,n).length)}return s}(e,t,n,r),s=t.length,o=Qr(e,t,n,r,i),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${s}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Yr(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(Kr))} + ${parseFloat(e[1].toFixed(Kr))}j`:xe(e)?`'${e}'`:"bool"===n?Jr(e):parseFloat(e.toFixed(Kr)).toString(),oe(a,t)}function Jr(e){return 0===e?"false":"true"}function Qr(e,t,n,a,r,i=!0){let s="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Yr(ei(e)[0],0,n)]:"bool"===n?[Jr(e[0])]:[e[0].toString()];if(1===l){if(o>qr){let t=Xr*s,a=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-Xr)*s,o*s));return"complex64"===n&&(a=ei(a),i=ei(i)),["["+a.map(((e,t)=>Yr(e,r[t],n))).join(", ")+", ..., "+i.map(((e,t)=>Yr(e,r[o-Xr+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ei(e):Array.from(e)).map(((e,t)=>Yr(e,r[t],n))).join(", ")+"]"]}let u=t.slice(1),d=a.slice(1),p=a[0]*s,c=[];if(o>qr){for(let t=0;t<Xr;t++){let a=t*p,i=a+p;c.push(...Qr(e.slice(a,i),u,n,d,r,!1))}c.push("...");for(let t=o-Xr;t<o;t++){let a=t*p,i=a+p;c.push(...Qr(e.slice(a,i),u,n,d,r,t===o-1))}}else for(let t=0;t<o;t++){let a=t*p,i=a+p;c.push(...Qr(e.slice(a,i),u,n,d,r,t===o-1))}let h=2===l?",":"";c[0]="["+(o>0?c[0]+h:"");for(let e=1;e<c.length-1;e++)c[e]=" "+c[e]+h;let f=",\n";for(let e=2;e<l;e++)f+="\n";return c[c.length-1]=" "+c[c.length-1]+"]"+(i?"":f),c}function ei(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var ti=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Q(e),null!=n){let e=n.length;Z(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||he(t,this.size),this.strides=Se(e)}set(e,...t){0===t.length&&(t=[0]),Z(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ni().makeTensor(this.values,this.shape,this.dtype)}},ni=null,ai=null,ri=class{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Q(e),this.strides=Se(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return ai.buffer(this.shape,this.dtype,e)}bufferSync(){return ai.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ne(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ne(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=ni().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Ur(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ni().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=ni().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Ur(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ni().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ni().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ai.print(this,e)}clone(){return this.throwIfDisposed(),ai.clone(this)}toString(e=!1){return Zr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ai.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ni().makeVariable(this,e,t,n)}};Object.defineProperty(ri,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ue("Tensor",(()=>ri));var ii=class extends ri{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ne(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ni().disposeTensor(this),this.dataId=e.dataId,ni().incRef(this,null)}dispose(){ni().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(ii,Symbol.hasInstance,{value:e=>e instanceof ri&&null!=e.assign&&e.assign instanceof Function});var si,oi,li,ui,di,pi,ci={};g(ci,{assertTypesMatch:()=>xi,getTensorsInContainer:()=>vi,isTensorInList:()=>bi,makeTypesMatch:()=>Ai}),(oi=si||(si={})).R0="R0",oi.R1="R1",oi.R2="R2",oi.R3="R3",oi.R4="R4",oi.R5="R5",oi.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(li||(li={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ui||(ui={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(di||(di={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(pi||(pi={}));var hi={float32:di,int32:li,bool:ui,complex64:pi};function fi(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return hi[e][t]}function mi(e){return fi(e,"int32")}function yi(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function gi(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Ai(e,t){if(e.dtype===t.dtype)return[e,t];let n=fi(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function xi(e,t){Z(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function bi(e,t){return t.some((t=>t.id===e.id))}function vi(e){let t=[];return wi(e,t,new Set),t}function wi(e,t,n){if(null==e)return;if(e instanceof ri)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let a=e;for(let e in a){let r=a[e];n.has(r)||(n.add(r),wi(r,t,n))}}function ki(e){return null!=e.kernelName}var Ii=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Si=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ii}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ur(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new class{logKernelProfile(e,t,n,a,r,i){let s="number"==typeof a?oe(`${a}ms`,9):a.error,o=oe(e,25),l=t.rank,u=t.size,d=oe(t.shape.toString(),14),p="";for(let e in r){let n=r[e];if(null!=n){let a=n.shape||t.shape,r=a.length;p+=`${e}: ${r}D ${r>0?a:""} `}}console.log(`%c${o}\t%c${s}\t%c${l}D ${d}\t%c${u}\t%c${p}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}})}profileKernel(e,t,n){let a,r,i=()=>{a=n()},s=Wr();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(i);else{i();for(let e of a)e.dataSync();r=Promise.resolve({kernelMs:Wr()-s})}if(Le().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){let n=a[t];n.data().then((t=>{jr(t,n.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:r.then((e=>e.kernelMs)),extraInfo:r.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),a,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){mr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){mr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof W||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ur(`Initialization of backend ${e} failed`),ur(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return ur(`Initialization of backend ${e} failed`),ur(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),i=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Si.nextTensorId++}nextVariableId(){return Si.nextVariableId++}clone(e){let t=Ni.runKernel(on,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e};return Ni.runKernel(ft,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==hr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let a=this.backend.numDataIds(),r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=a-t-r-i;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,a=[],r=this.isTapeOn(),i=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=ki(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ki(e)){let{kernelName:t,inputs:i,attrs:s}=e;null==this.backendName&&this.backend;let l=hr(t,this.backendName);Z(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:i,attrs:s,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){let e=this.getTensorsForGradient(t,i,u);a=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,i=e=>{r&&(a=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,i)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:d,attrs:p}=e,c=ki(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,d,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),r&&this.addTapeNode(l,d,t,c,a,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let a=fr(e);if(null!=a){let e,r=a.inputsToSave||[],i=a.outputsToSave||[];a.saveAllInputs?(Z(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=r.map((e=>t[e]));let s=n.filter(((e,t)=>i[t]));return e.concat(s)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&xe(e[0])&&(r=e.map((e=>Vr(e))));let i=a.write(r,t,n),s=new ri(t,n,i,this.nextTensorId());if(this.trackTensor(s,a),"string"===n){let e=this.state.tensorInfo.get(i),t=Ae(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,a){let r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:a,dtype:r}=e,i=new ri(a,r,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));let r=new ii(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ge(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ii||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*ge(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,i){let s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=fr(e);null!=o&&(a=o.gradFunc),null!=a&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],a=Ee(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=vi(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===a.id&&this.track(e)}))}gradients(e,t,n,a=!1){if(Z(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Z(r instanceof ri,(()=>"The result y returned by f() must be a tensor."));let i=function(e,t,n){let a={},r={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){let i=e[n],s=i.inputs;for(let e in s){let n=s[e],o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){i.outputs.forEach((e=>a[e.id]=!0)),o=!0,r[i.id]=!0;break}if(o)break}}let i={};i[n.id]=!0;let s={};for(let t=e.length-1;t>=0;t--){let n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(let e in a)i[a[e].id]=!0,s[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(r[n.id]&&s[n.id]){let e={};for(let t in n.inputs){let r=n.inputs[t];a[r.id]&&(e[t]=r)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!a&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[r.id]=null==n?function(e){let t=Re(Q(e),"float32");return Ni.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){let i=t[r],s=[];if(i.outputs.forEach((t=>{let n=e[t.id];null!=n?s.push(n):s.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);let o=i.gradient(s);for(let t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);let s=i.inputs[t];if(!ne(r.shape,s.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=r;else{let t=e[s.id];e[s.id]=a(t,r),t.dispose()}}}}(e,i,(e=>this.tidy(e)),Ti);let a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){return Z(ke(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{Z(t.every((e=>e instanceof ri)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,a={};return t.forEach(((e,t)=>{a[t]=e})),this.runKernelFunc({forwardFunc:(a,r)=>(n=e(...t,r),Z(n.value instanceof ri,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Z(ke(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,a)=>{let r=n.gradFunc(e,a),i=Array.isArray(r)?r:[r];Z(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Z(i.every((e=>e instanceof ri)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let s={};return i.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Wr(),n=await this.backend.time(e);return n.wallMs=Wr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ii;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function Ci(){let e=Ve();if(null==e._tfengine){let t=new De(e);e._tfengine=new Si(t)}return function(e){Be=e}(e._tfengine.ENV),function(e){ni=e}((()=>e._tfengine)),e._tfengine}Si.nextTensorId=0,Si.nextVariableId=0;var Ni=Ci();function Ti(e,t){let n={a:e,b:t};return Ni.runKernel(qe,n)}var Ri,Ei={};function $i(e){Ri=e}function Mi(e){if(void 0!==Ri)return Ri;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Fi(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}g(Ei,{isBrowser:()=>Fi,isMobile:()=>Mi,mockIsMobile:()=>$i});var _i=Le();function Pi(e,t){let n=e;if(Gr(e))return"string"===t?[]:[e.length];if(yi(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(gi(e))return[e.buffer.size/(null==t?4:ge(t))];if(!Array.isArray(e))return[];let a=[];for(;Array.isArray(n)||Gr(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&Le().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Oi(e,a,[]),a}function Oi(e,t,n){if(n=n||[],!Array.isArray(e)&&!Gr(e))return void Z(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Z(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Z(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let a=t.slice(1);for(let t=0;t<e.length;++t)Oi(e[t],a,n.concat(t))}function Di(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function zi(e,t,n,a="numeric"){if(e instanceof ri)return Di(a,e.dtype,t,n),e;let r=we(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),Di(a,r,t,n),null==e||!Gr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}let i=Pi(e,r);!Gr(e)&&!Array.isArray(e)&&(e=[e]);let s="string"!==r?Lr(e,r):Hr(e,[],!0);return Ni.makeTensor(s,i,r)}function Li(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>zi(e,`${t}[${r}]`,n,a)))}_i.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),_i.registerFlag("IS_BROWSER",(()=>Fi())),_i.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),_i.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),_i.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),_i.registerFlag("PROD",(()=>!1)),_i.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>_i.getBool("DEBUG"))),_i.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),_i.registerFlag("IS_TEST",(()=>!1)),_i.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>_i.getBool("DEBUG"))),_i.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),_i.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),_i.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var Wi="__op";function Bi(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Wi;let r=(...e)=>{Ni.startScope(n);try{let t=a(...e);return Pe(t)&&console.error("Cannot return a Promise inside of tidy."),Ni.endScope(t),t}catch(e){throw Ni.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}var Vi=Bi({complex_:function(e,t){let n=zi(e,"real","complex"),a=zi(t,"imag","complex");Y(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);let r={real:n,imag:a};return Ni.runKernel(gt,r)}});function Ui(e,t,n,a){if(null==a)a=we(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(gi(e)||yi(e)){if("float32"!==a&&"int32"!==a)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return Ni.backend.createTensorFromGPUData(e,t||n,a)}if(!Gr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Me(t);let e=Q(t),a=Q(n);Z(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let e=0;e<n.length;++e){let a=n[e],r=e!==n.length-1||a!==Q(t.slice(e));Z(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!Gr(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==a?Lr(e,a):Hr(e,[],!0),Ni.makeTensor(e,t,a)}function Gi(e,t,n){return Ui(e,t,Pi(e,n),n)}var Hi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ji=class{static join(e){return new ji(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map((e=>Gr(e)?e.buffer:e))).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);let a=new ArrayBuffer(t-e),r=new Uint8Array(a),i=0;for(let a=n;a<this.shards.length;a++){let n=this.shards[a],s=e+i-n.start,o=i,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,s,l-s);if(r.set(u,o),i+=u.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=function(e,t){let n=0,a=e.length;for(;n<=a;){let r=Math.floor((a-n)/2)+n,i=t(e[r]);if(0===i)return r;i<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}},qi=4;async function Xi(e,t){let n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<r.length;++i){let s=r[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);let l={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+qi*t.length,a=new Uint8Array(n),r=0;for(let e=0;e<t.length;e++){let n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);a.set(i,r),r+=qi,a.set(n,r),r+=n.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Zi(await Promise.all(a)),specs:n}}function Ki(e,t){let n,a=new ji(e),r={},i=0;for(let e of t){let t,s=e.name,o=e.dtype,l=e.shape,u=Q(l);if("quantization"in e){let r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=Hi[r.dtype],d=a.slice(i,i+u*l),p="uint8"===r.dtype?new Uint8Array(d):new Uint16Array(d);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=ss()),t=n(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${s}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=Math.round(n*r.scale+r.min)}}i+=u*l}else if("string"===o){let n=Q(e.shape);t=[];for(let e=0;e<n;e++){let e=new Uint32Array(a.slice(i,i+qi))[0];i+=qi;let n=new Uint8Array(a.slice(i,i+e));t.push(n),i+=e}}else{let e=Hi[o],n=a.slice(i,i+u*e);if("float32"===o)t=new Float32Array(n);else if("int32"===o)t=new Int32Array(n);else if("bool"===o)t=new Uint8Array(n);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${s}': ${o}`);{t=new Float32Array(n);let e=new Float32Array(t.length/2),a=new Float32Array(t.length/2);for(let n=0;n<e.length;n++)e[n]=t[2*n],a[n]=t[2*n+1];let i=Gi(e,l,"float32"),o=Gi(a,l,"float32");r[s]=Vi(i,o),i.dispose(),o.dispose()}}i+=u*e}"complex64"!==o&&(r[s]=Gi(t,l,o))}return r}function Zi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let a=new Uint8Array(t),r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}var Yi="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ji(e){return Yi?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Qi(e){return ji.join(e)}function es(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function ts(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function ns(e,t,n){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function as(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),ns(e,n,a)}function rs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ji(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ji(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new ji(e.weightData).byteLength}}function is(e){let t=[];for(let n of e)t.push(...n.weights);return t}function ss(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{let r=new ArrayBuffer(4*a.length),i=new Uint32Array(r);for(let r=0;r<a.length;r++){let s=a[r],o=e[n[s>>10]+(1023&s)]+t[s>>10];i[r]=o}return new Float32Array(r)}}var os=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==os.instance&&(os.instance=new os),os.instance}static registerSaveRouter(e){os.getInstance().saveRouters.push(e)}static registerLoadRouter(e){os.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return os.getHandlers(e,"save")}static getLoadHandlers(e,t){return os.getHandlers(e,"load",t)}static getHandlers(e,t,n){let a=[];return("load"===t?os.getInstance().loadRouters:os.getInstance().saveRouters).forEach((t=>{let r=t(e,n);null!==r&&a.push(r)})),a}},ls=e=>os.registerSaveRouter(e),us=e=>os.registerLoadRouter(e),ds=e=>os.getSaveHandlers(e),ps=(e,t)=>os.getLoadHandlers(e,t),cs="tensorflowjs",hs="models_store",fs="model_info_store";function ms(){if(!Le().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ys(e){let t=e.result;t.createObjectStore(hs,{keyPath:"modelPath"}),t.createObjectStore(fs,{keyPath:"modelPath"})}var gs=class{constructor(e){if(this.indexedDB=ms(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let a=this.indexedDB.open(cs,1);a.onupgradeneeded=()=>ys(a),a.onsuccess=()=>{let r=a.result;if(null==t){let t=r.transaction(hs,"readonly"),a=t.objectStore(hs).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=ji.join(t.weightData);let a,i,s=rs(t),o=r.transaction(fs,"readwrite"),l=o.objectStore(fs);try{a=l.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(e){return n(e)}a.onsuccess=()=>{i=r.transaction(hs,"readwrite");let a,u=i.objectStore(hs);try{a=u.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(e){return n(e)}a.onsuccess=()=>e({modelArtifactsInfo:s}),a.onerror=e=>{l=o.objectStore(fs);let t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(a.error)),t.onerror=e=>(r.close(),n(a.error))}},a.onerror=e=>(r.close(),n(a.error)),o.oncomplete=()=>{null==i?r.close():i.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}};gs.URL_SCHEME="indexeddb://";var As=e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gs.URL_SCHEME)?function(e){return new gs(e)}(e.slice(gs.URL_SCHEME.length)):null;os.registerSaveRouter(As),os.registerLoadRouter(As);var xs="/",bs="tensorflowjs_models",vs="info",ws="model_topology",ks="weight_specs",Is="weight_data",Ss="model_metadata";function Cs(e){return{info:[bs,e,vs].join(xs),topology:[bs,e,ws].join(xs),weightSpecs:[bs,e,ks].join(xs),weightData:[bs,e,Is].join(xs),modelMetadata:[bs,e,Ss].join(xs)}}function Ns(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function Ts(e){let t=e.split(xs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(xs)}var Rs=class{constructor(e){if(!Le().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Cs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=rs(e),r=ji.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Yi)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(r));let i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch(e){throw Ns(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;let r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){let e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Yi){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}};Rs.URL_SCHEME="localstorage://";var Es=e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Rs.URL_SCHEME)?function(e){return new Rs(e)}(e.slice(Rs.URL_SCHEME.length)):null;os.registerSaveRouter(Es),os.registerLoadRouter(Es);var $s="://",Ms=class{constructor(){this.managers={}}static getInstance(){return null==Ms.instance&&(Ms.instance=new Ms),Ms.instance}static registerManager(e,t){Z(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith($s)&&(e=e.slice(0,e.indexOf($s))),Z(e.length>0,(()=>"scheme must not be an empty string."));let n=Ms.getInstance();Z(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=Ms.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Ms.getInstance().managers)}};function Fs(e){if(-1===e.indexOf($s))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ms.getSchemes().join(",")}`);return{scheme:e.split($s)[0],path:e.split($s)[1]}}async function _s(e,t,n=!1){Z(e!==t,(()=>`Old path and new path are the same: '${e}'`));let a=os.getLoadHandlers(e);Z(a.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Z(a.length<2,(()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`));let r=a[0],i=os.getSaveHandlers(t);Z(i.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Z(i.length<2,(()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`));let s=i[0],o=Fs(e).scheme,l=Fs(e).path,u=o===Fs(e).scheme,d=await r.load();n&&u&&await Ms.getManager(o).removeModel(l);let p=await s.save(d);return n&&!u&&await Ms.getManager(o).removeModel(l),p.modelArtifactsInfo}async function Ps(){let e=Ms.getSchemes(),t={};for(let n of e){let e=await Ms.getManager(n).listModels();for(let a in e)t[n+$s+a]=e[a]}return t}async function Os(e){let t=Fs(e);return Ms.getManager(t.scheme).removeModel(t.path)}async function Ds(e,t){return _s(e,t,!1)}async function zs(e,t){return _s(e,t,!0)}if(Le().get("IS_BROWSER")){Le().setPlatform("browser",new class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Le().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return kr(e)}});try{Ms.registerManager(Rs.URL_SCHEME,new class{constructor(){Z(Le().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Z("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=bs+xs,n=xs+vs;for(let a=0;a<this.LS.length;++a){let r=this.LS.key(a);r.startsWith(t)&&r.endsWith(n)&&(e[Ts(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){e=function(e){return e.startsWith(Rs.URL_SCHEME)?e.slice(Rs.URL_SCHEME.length):e}(e);let t=Cs(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Ns(t),n}})}catch(oi){}try{Ms.registerManager(gs.URL_SCHEME,new class{constructor(){this.indexedDB=ms()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(cs,1);n.onupgradeneeded=()=>ys(n),n.onsuccess=()=>{let a=n.result,r=a.transaction(fs,"readonly"),i=r.objectStore(fs).getAll();i.onsuccess=()=>{let t={};for(let e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(a.close(),t(i.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(gs.URL_SCHEME)?e.slice(gs.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let a=this.indexedDB.open(cs,1);a.onupgradeneeded=()=>ys(a),a.onsuccess=()=>{let r,i=a.result,s=i.transaction(fs,"readwrite"),o=s.objectStore(fs),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return i.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let a=o.delete(e),s=()=>{r=i.transaction(hs,"readwrite");let a=r.objectStore(hs).delete(e);a.onsuccess=()=>t(l.result.modelArtifactsInfo),a.onerror=e=>n(l.error)};a.onsuccess=s,a.onerror=e=>(s(),i.close(),n(l.error))}},l.onerror=e=>(i.close(),n(l.error)),s.oncomplete=()=>{null==r?i.close():r.oncomplete=()=>i.close()}},a.onerror=e=>n(a.error)}))}})}catch(oi){}}var Ls;function Ws(e,t="float32",n){return t=t||"float32",Me(e),new ti(e,t,n)}Le().get("IS_NODE")&&!Le().get("IS_BROWSER")&&Le().setPlatform("node",new class{constructor(){this.util=v(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Le().global.fetch?Le().global.fetch(e,t):(null==Ls&&(Ls=b()),Ls(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});var Bs=Bi({cast_:function(e,t){let n=zi(e,"x","cast");if(!me(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let a={x:n},r={dtype:t};return Ni.runKernel(ft,a,r)}}),Vs=Bi({clone_:function(e){let t={x:zi(e,"x","clone","string_or_numeric")};return Ni.runKernel(on,t)}});function Us(e,t=!1){console.log(e.toString(t))}function Gs(){Le().set("PROD",!0)}function Hs(){Le().set("DEBUG",!0)}function js(){Le().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function qs(e){Le().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Xs(){Ni.disposeVariables()}function Ks(){return Ni}function Zs(){return Ni.memory()}function Ys(e){return Ni.profile(e)}function Js(e,t){return Ni.tidy(e,t)}function Qs(e){vi(e).forEach((e=>e.dispose()))}function eo(e){return Ni.keep(e)}function to(e){return Ni.time(e)}function no(e){return Ni.setBackend(e)}function ao(){return Ni.ready()}function ro(){return Ni.backendName}function io(e){Ni.removeBackend(e)}function so(e){return Ni.findBackend(e)}function oo(e){return Ni.findBackendFactory(e)}function lo(e,t,n=1){return Ni.registerBackend(e,t,n)}function uo(){return Ni.backend}function po(e,t){Le().setPlatform(e,t)}Ci(),function(e){ai=e}({buffer:Ws,cast:Bs,clone:Vs,print:Us});var co=Bi({add_:function(e,t){let n=zi(e,"a","add"),a=zi(t,"b","add");[n,a]=Ai(n,a);let r={a:n,b:a};return Ni.runKernel(qe,r)}}),ho=Bi({floorDiv_:function(e,t){let n=zi(e,"a","floorDiv"),a=zi(t,"b","floorDiv");[n,a]=Ai(n,a);let r={a:n,b:a};return Ni.runKernel(en,r)}}),fo=Bi({div_:function(e,t){let n=zi(e,"a","div"),a=zi(t,"b","div");if([n,a]=Ai(n,a),"int32"===n.dtype&&"int32"===a.dtype)return ho(n,a);let r={a:n,b:a};return Ni.runKernel(Bt,r,{})}}),mo=Bi({mul_:function(e,t){let n=zi(e,"a","mul"),a=zi(t,"b","mul");[n,a]=Ai(n,a);let r={a:n,b:a};return Ni.runKernel(Bn,r)}}),yo=Bi({abs_:function(e){let t=zi(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Ni.runKernel(At,e)}{let e={x:t};return Ni.runKernel(Ge,e)}}}),go=Bi({acos_:function(e){let t={x:zi(e,"x","acos")};return Ni.runKernel(He,t)}}),Ao=Bi({acosh_:function(e){let t={x:zi(e,"x","acosh")};return Ni.runKernel(je,t)}}),xo=Bi({addN_:function(e){Z(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Z(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>zi(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ne(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let a=t;return Ni.runKernel(Xe,a)}}),bo=Bi({all_:function(e,t=null,n=!1){let a={x:zi(e,"x","all","bool")},r={axis:t,keepDims:n};return Ni.runKernel(Ke,a,r)}}),vo=Bi({any_:function(e,t=null,n=!1){let a={x:zi(e,"x","any","bool")},r={axis:t,keepDims:n};return Ni.runKernel(Ze,a,r)}}),wo=Bi({argMax_:function(e,t=0){let n={x:zi(e,"x","argMax")},a={axis:t};return Ni.runKernel(Ye,n,a)}}),ko=Bi({argMin_:function(e,t=0){let n={x:zi(e,"x","argMin")},a={axis:t};return Ni.runKernel(Je,n,a)}}),Io=Bi({asin_:function(e){let t={x:zi(e,"x","asin")};return Ni.runKernel(Qe,t)}}),So=Bi({asinh_:function(e){let t={x:zi(e,"x","asinh")};return Ni.runKernel(et,t)}}),Co=Bi({atan_:function(e){let t={x:zi(e,"x","atan")};return Ni.runKernel(tt,t)}}),No=Bi({atan2_:function(e,t){let n=zi(e,"a","atan2"),a=zi(t,"b","atan2");[n,a]=Ai(n,a);let r={a:n,b:a};return Ni.runKernel(at,r)}}),To=Bi({atanh_:function(e){let t={x:zi(e,"x","atanh")};return Ni.runKernel(nt,t)}});function Ro(e,t,n,a,r="NHWC",i){return Mo(e,[...t,e[3]],n,i,a,null,null,Vo(r))}function Eo(e,t,n,a,r,i,s="channelsLast"){let o,[l,u]=Po(t);if("channelsLast"===s)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);o=[l,u,e[1],e[1]]}return Mo(e,o,n,a,r,i,!1,s)}function $o(e,t,n,a,r,i,s="NDHWC"){let o,l,[u,d,p]=Oo(t);if("NDHWC"===s)l="channelsLast",o=[u,d,p,e[4],e[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);l="channelsFirst",o=[u,d,p,e[1],e[1]]}return Fo(e,o,n,a,r,!1,l,i)}function Mo(e,t,n,a,r,i,s=!1,o="channelsLast"){let[l,u,d,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,d]=e}let c,[h,f,,m]=t,[y,g]=Po(n),[A,x]=Po(a),b=Do(h,A),v=Do(f,x),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,a,r,i,s,o,l){let u,d,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let r=function(e,t,n,a,r){null==a&&(a=_o(e,t,n));let i=e[1];return[zo((e[0]-t+2*a)/n+1,r),zo((i-t+2*a)/n+1,r)]}([t,n],i,a,e,o);d=r[0],p=r[1]}else if("same"===e){d=Math.ceil(t/a),p=Math.ceil(n/r);let e=Math.max(0,(d-1)*a+i-t),o=Math.max(0,(p-1)*r+s-n),l=Math.floor(e/2),c=e-l,h=Math.floor(o/2);u={top:l,bottom:c,left:h,right:o-h,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-i+1)/a),p=Math.ceil((n-s+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let c="channelsLast"===l?e[1][0]:e[2][0],h="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:c,bottom:h,left:f,right:m,type:0===c&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},d=zo((t-i+c+h)/a+1,o),p=zo((n-s+f+m)/r+1,o)}}return{padInfo:u,outHeight:d,outWidth:p}}(r,u,d,y,g,b,v,i,o),S=s?m*p:m;return"channelsFirst"===o?c=[l,S,k,I]:"channelsLast"===o&&(c=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:p,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:y,strideWidth:g,filterHeight:h,filterWidth:f,effectiveFilterHeight:b,effectiveFilterWidth:v,dilationHeight:A,dilationWidth:x,inShape:e,outShape:c,filterShape:t}}function Fo(e,t,n,a,r,i=!1,s="channelsLast",o){let[l,u,d,p,c]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[l,u,d,p,c]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[l,c,u,d,p]=e}let h,[f,m,y,,g]=t,[A,x,b]=Oo(n),[v,w,k]=Oo(a),I=Do(f,v),S=Do(m,w),C=Do(y,k),{padInfo:N,outDepth:T,outHeight:R,outWidth:E}=function(e,t,n,a,r,i,s,o,l,u,d){let p,c,h,f;if("valid"===e&&(e=0),"number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=function(e,t,n,a,r,i){null==r&&(r=_o(e,t[0],a[0]));let s=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*r>=t[n]&&(s[n]=zo((e[n]-t[n]+2*r)/a[n]+1,i));return s}([t,n,a,1],[o,l,u],0,[r,i,s],e,d);c=m[0],h=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{c=Math.ceil(t/r),h=Math.ceil(n/i),f=Math.ceil(a/s);let e=(c-1)*r+o-t,d=(h-1)*i+l-n,m=(f-1)*s+u-a,y=Math.floor(e/2),g=e-y,A=Math.floor(d/2),x=d-A,b=Math.floor(m/2);p={top:A,bottom:x,left:b,right:m-b,front:y,back:g,type:"SAME"}}}return{padInfo:p,outDepth:c,outHeight:h,outWidth:f}}(r,u,d,p,A,x,b,I,S,C,o),$=i?g*c:g;return"channelsFirst"===s?h=[l,$,T,R,E]:"channelsLast"===s&&(h=[l,T,R,E,$]),{batchSize:l,dataFormat:s,inDepth:u,inHeight:d,inWidth:p,inChannels:c,outDepth:T,outHeight:R,outWidth:E,outChannels:$,padInfo:N,strideDepth:A,strideHeight:x,strideWidth:b,filterDepth:f,filterHeight:m,filterWidth:y,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:h,filterShape:t}}function _o(e,t,n,a=1){let r=Do(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function Po(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Oo(e){return"number"==typeof e?[e,e,e]:e}function Do(e,t){return t<=1?e:e+(e-1)*(t-1)}function zo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Lo(e){let[t,n,a]=Po(e);return 1===t&&1===n&&1===a}function Wo(e,t){return Lo(e)||Lo(t)}function Bo(e){return Po(e).every((e=>e>0))}function Vo(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Uo(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Z(ae(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Z(ae(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var Go=Bi({reshape_:function(e,t){let n={x:zi(e,"x","reshape","string_or_numeric")},a={shape:t};return Ni.runKernel(la,n,a)}}),Ho=Bi({avgPool_:function(e,t,n,a,r){let i=zi(e,"x","avgPool","float32");Z(Wo(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let s=i,o=!1;3===i.rank&&(o=!0,s=Go(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Z(4===s.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`)),Uo("avgPool",a,r);let l={x:s},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},d=Ni.runKernel(rt,l,u);return d=Bs(d,i.dtype),o?Go(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),jo=Bi({avgPool3d_:function(e,t,n,a,r,i="NDHWC"){let s=zi(e,"x","avgPool3d","float32"),o=s,l=!1;4===s.rank&&(l=!0,o=Go(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),Z(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Z("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Z("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Uo("avgPool3d",a,r);let u={x:o},d={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:i},p=Ni.runKernel(st,u,d);return p=Bs(p,o.dtype),l?Go(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),qo=Bi({concat_:function(e,t=0){Z(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Li(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Vs(n[0]);let a=n,r={axis:t};return Ni.runKernel(xt,a,r)}}),Xo=Bi({matMul_:function(e,t,n=!1,a=!1){let r=zi(e,"a","matMul"),i=zi(t,"b","matMul");[r,i]=Ai(r,i);let s={a:r,b:i},o={transposeA:n,transposeB:a};return Ni.runKernel(lt,s,o)}}),Ko=Bi({sigmoid_:function(e){let t={x:zi(e,"x","sigmoid","float32")};return Ni.runKernel(Ca,t)}}),Zo=Bi({slice_:function(e,t,n){let a=zi(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");let r={x:a},i={begin:t,size:n};return Ni.runKernel(wa,r,i)}}),Yo=Bi({tanh_:function(e){let t={x:zi(e,"x","tanh","float32")};return Ni.runKernel(qa,t)}}),Jo=Bi({basicLSTMCell_:function(e,t,n,a,r,i){let s=zi(e,"forgetBias","basicLSTMCell"),o=zi(t,"lstmKernel","basicLSTMCell"),l=zi(n,"lstmBias","basicLSTMCell"),u=zi(a,"data","basicLSTMCell"),d=zi(r,"c","basicLSTMCell"),p=zi(i,"h","basicLSTMCell"),c=qo([u,p],1),h=Xo(c,o),f=co(h,l),m=f.shape[0],y=f.shape[1]/4,g=[m,y],A=Zo(f,[0,0],g),x=Zo(f,[0,y],g),b=Zo(f,[0,2*y],g),v=Zo(f,[0,3*y],g),w=co(mo(Ko(A),Yo(x)),mo(d,Ko(co(s,b))));return[w,mo(Yo(w),Ko(v))]}}),Qo=Bi({batchToSpaceND_:function(e,t,n){let a=zi(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));Z(a.rank>=1+t.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`)),Z(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Z(a.shape[0]%r==0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));let i={x:a},s={blockShape:t,crops:n};return Ni.runKernel(ut,i,s)}});function el(e){let t;return t=0===e.rank||1===e.rank?Go(e,[1,1,1,e.size]):2===e.rank?Go(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Go(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var tl=Bi({batchNorm_:function(e,t,n,a,r,i){null==i&&(i=.001);let s,o,l=zi(e,"x","batchNorm"),u=zi(t,"mean","batchNorm"),d=zi(n,"variance","batchNorm");null!=r&&(s=zi(r,"scale","batchNorm")),null!=a&&(o=zi(a,"offset","batchNorm")),Z(u.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Z(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Z(null==s||u.rank===s.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let p={x:el(l),scale:s,offset:o,mean:u,variance:d},c={varianceEpsilon:i},h=Ni.runKernel(tn,p,c);return Go(h,l.shape)}}),nl=Bi({batchNorm2d_:function(e,t,n,a,r,i){let s,o,l=zi(e,"x","batchNorm"),u=zi(t,"mean","batchNorm"),d=zi(n,"variance","batchNorm");return null!=r&&(s=zi(r,"scale","batchNorm")),null!=a&&(o=zi(a,"offset","batchNorm")),Z(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),Z(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),Z(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`)),null!=s&&Z(2===s.rank||1===s.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${s.rank}.`)),null!=o&&Z(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),tl(l,u,d,o,s,i)}}),al=Bi({batchNorm3d_:function(e,t,n,a,r,i){let s,o,l=zi(e,"x","batchNorm"),u=zi(t,"mean","batchNorm"),d=zi(n,"variance","batchNorm");return null!=r&&(s=zi(r,"scale","batchNorm")),null!=a&&(o=zi(a,"offset","batchNorm")),Z(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),Z(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),Z(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`)),null!=s&&Z(3===s.rank||1===s.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${s.rank}.`)),null!=o&&Z(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),tl(l,u,d,o,s,i)}}),rl=Bi({batchNorm4d_:function(e,t,n,a,r,i){let s,o,l=zi(e,"x","batchNorm"),u=zi(t,"mean","batchNorm"),d=zi(n,"variance","batchNorm");return null!=r&&(s=zi(r,"scale","batchNorm")),null!=a&&(o=zi(a,"offset","batchNorm")),Z(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),Z(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),Z(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`)),null!=s&&Z(4===s.rank||1===s.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${s.rank}.`)),null!=o&&Z(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),tl(l,u,d,o,s,i)}}),il=Bi({bincount_:function(e,t,n){let a=zi(e,"x","bincount"),r=zi(t,"weights","bincount");Z("int32"===a.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`)),Z(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Z(r.size===a.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`));let i={x:a,weights:r},s={size:n};return Ni.runKernel(dt,i,s)}}),sl=Bi({bitwiseAnd_:function(e,t){let n=zi(e,"x","bitwiseAnd"),a=zi(t,"y","bitwiseAnd");if(!ne(n.shape,a.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${a.shape}`);if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${a.dtype}`);let r={a:n,b:a};return Ni.runKernel(pt,r)}}),ol=Bi({broadcastArgs_:function(e,t){let n=zi(e,"s0","broadcastArgs","int32"),a=zi(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==a.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${a.rank}`);let r={s0:n,s1:a};return Ni.runKernel(ht,r)}}),ll=Bi({broadcastTo_:function(e,t){let n=zi(e,"broadcastTo","x"),a=n.shape;if(Me(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Go(n,e)}let r=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Vs(n);let s={x:n},o={reps:i};return Ni.runKernel(Xa,s,o)}}),ul=Bi({ceil_:function(e){let t={x:zi(e,"x","ceil","float32")};return Ni.runKernel(mt,t)}});function dl(e,t,n){Me(e);let a={shape:e,value:t,dtype:n=n||we(t)};return Ni.runKernel(Yt,{},a)}var pl=Bi({clipByValue_:function(e,t,n){let a=zi(e,"x","clipByValue");if(Z(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return dl(a.shape,t,a.dtype);let r={x:a},i={clipValueMin:t,clipValueMax:n};return Ni.runKernel(yt,r,i)}}),cl=Bi({concat1d_:function(e){return qo(e,0)}}),hl=Bi({concat2d_:function(e,t){return qo(e,t)}}),fl=Bi({concat3d_:function(e,t){return qo(e,t)}}),ml=Bi({concat4d_:function(e,t){return qo(e,t)}}),yl=Bi({conv2d_:function(e,t,n,a,r="NHWC",i=[1,1],s){let o=zi(e,"x","conv2d","float32"),l=zi(t,"filter","conv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=Go(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Z(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Z(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Uo("conv2d",a,s);let p="NHWC"===r?u.shape[3]:u.shape[1];Z(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),Z(Wo(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Z(Bo(i),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),Z(Bo(n),(()=>"Error in conv2D: Strides should be larger than 0."));let c={x:u,filter:l},h={strides:n,pad:a,dataFormat:r,dilations:i,dimRoundingMode:s},f=Ni.runKernel(bt,c,h);return d?Go(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),gl=Bi({conv1d_:function(e,t,n,a,r="NWC",i=1,s){let o=zi(e,"x","conv1d"),l=zi(t,"filter","conv1d"),u=o,d=!1;2===o.rank&&(d=!0,u=Go(o,[1,o.shape[0],o.shape[1]])),Z(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Z(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Uo("conv1d",a,s),Z(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Z(Wo(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),Z(Bo(i),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),Z(Bo(n),(()=>"Error in conv1D: Stride should be larger than 0.")),Z("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));let p=Go(l,[1,l.shape[0],l.shape[1],l.shape[2]]),c=Go(u,[u.shape[0],1,u.shape[1],u.shape[2]]),h=yl(c,p,[1,n],a,"NHWC",[1,i],s);return Go(h,d?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}}),Al=Bi({conv2DBackpropInput_:function(e,t,n,a,r,i="NHWC",s){Z(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Go(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Z(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Z(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Z(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let d="NHWC"===i?o[3]:o[1],p="NHWC"===i?l.shape[3]:l.shape[1];Z(d===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`)),Z(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),Uo("conv2dDerInput",r,s);let c={dy:l,filter:n},h={strides:a,pad:r,dataFormat:i,dimRoundingMode:s,inputShape:o},f=Ni.runKernel(wt,c,h);return u?Go(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),xl=Bi({conv2dTranspose_:function(e,t,n,a,r,i){let s=zi(e,"x","conv2dTranspose"),o=zi(t,"filter","conv2dTranspose");return Al(n,s,o,a,r,"NHWC",i)}}),bl=Bi({conv3d_:function(e,t,n,a,r="NDHWC",i=[1,1,1]){let s=zi(e,"x","conv3d"),o=zi(t,"filter","conv3d"),l=s,u=!1;4===s.rank&&(u=!0,l=Go(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),Z(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Z(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Z(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Z(Wo(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Z("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),Z(Bo(i),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),Z(Bo(n),(()=>"Error in conv3D: Strides should be larger than 0."));let d={x:l,filter:o},p={strides:n,pad:a,dataFormat:r,dilations:i},c=Ni.runKernel(kt,d,p);return u?Go(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),vl=Bi({conv3DBackpropInput_:function(e,t,n,a,r){Z(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,s=t,o=!1;4===t.rank&&(o=!0,s=Go(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);let l=i[4],u=s.shape[4];Z(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),Z(5===s.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`)),Z(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Z(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Z(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let d={dy:s,filter:n},p={pad:r,strides:a,inputShape:i},c=Ni.runKernel(St,d,p);return o?Go(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),wl=Bi({conv3dTranspose_:function(e,t,n,a,r){let i=zi(e,"x","conv3dTranspose"),s=zi(t,"filter","conv3dTranspose");return vl(n,i,s,a,r)}}),kl=Bi({cos_:function(e){let t={x:zi(e,"x","cos","float32")};return Ni.runKernel(Ct,t)}}),Il=Bi({cosh_:function(e){let t={x:zi(e,"x","cosh","float32")};return Ni.runKernel(Nt,t)}}),Sl=Bi({cumprod_:function(e,t=0,n=!1,a=!1){let r={x:zi(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:a};return Ni.runKernel(Tt,r,i)}}),Cl=Bi({cumsum_:function(e,t=0,n=!1,a=!1){let r={x:zi(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:a};return Ni.runKernel(Rt,r,i)}}),Nl=Bi({denseBincount_:function(e,t,n,a=!1){let r=zi(e,"x","denseBincount"),i=zi(t,"weights","denseBincount");Z("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),Z(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),Z(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Z(i.size===r.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`));let s={x:r,weights:i},o={size:n,binaryOutput:a};return Ni.runKernel($t,s,o)}}),Tl=Bi({depthToSpace_:function(e,t,n="NHWC"){let a=zi(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],i="NHWC"===n?a.shape[2]:a.shape[3],s="NHWC"===n?a.shape[3]:a.shape[1];Z(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Z(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${a.shape}`)),Z(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${a.shape}`)),Z(s%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${a.shape}`));let o={x:a},l={blockSize:t,dataFormat:n};return Ni.runKernel(Mt,o,l)}}),Rl=Bi({depthwiseConv2d_:function(e,t,n,a,r="NHWC",i=[1,1],s){let o=zi(e,"x","depthwiseConv2d","float32"),l=zi(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=Go(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Z(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Z(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));let p="NHWC"===r?u.shape[3]:u.shape[1];Z(p===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Uo("depthwiseConv2d",a,s);let c={x:u,filter:l},h={strides:n,pad:a,dataFormat:r,dilations:i,dimRoundingMode:s},f=Ni.runKernel(Ft,c,h);return d?Go(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),El=Bi({diag_:function(e){let t={x:zi(e,"x","diag")};return Ni.runKernel(Ot,t)}}),$l=Bi({dilation2d_:function(e,t,n,a,r=[1,1],i="NHWC"){let s=zi(e,"x","dilation2d"),o=zi(t,"filter","dilation2d");Z(3===s.rank||4===s.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`)),Z(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Z("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=s,u=!1;3===s.rank&&(l=Go(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=!0),Z(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));let d={x:l,filter:o},p={strides:n,pad:a,dilations:r},c=Ni.runKernel(Dt,d,p);return u?Go(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ml={};function Fl(e,t){let n=e.length,a=[];for(let r=0;r<n;r++){let i=n-1-r,s=e[i]||1;(t[t.length-1-r]||1)>1&&1===s&&a.unshift(i)}return a}function _l(e,t){let n=[];for(let a=0;a<t.length;a++){let r=e[e.length-a-1],i=t.length-a-1,s=t[i];(null==r||1===r&&s>1)&&n.unshift(i)}return n}function Pl(e,t){let n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let i=e[e.length-r-1];null==i&&(i=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===i)a[n-r-1]=s;else if(1===s)a[n-r-1]=i;else{if(i!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);a[n-r-1]=i}}return a}g(Ml,{assertAndGetBroadcastShape:()=>Pl,getBroadcastDims:()=>Fl,getReductionAxes:()=>_l});var Ol=Bi({equal_:function(e,t){let n=zi(e,"a","equal","string_or_numeric"),a=zi(t,"b","equal","string_or_numeric");[n,a]=Ai(n,a),Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(jt,r)}}),Dl=Bi({where_:function(e,t,n){let a=zi(t,"a","where"),r=zi(n,"b","where"),i=zi(e,"condition","where","bool"),s=Pl(Pl(i.shape,a.shape),r.shape),o={condition:ll(i,s),t:ll(a,s),e:ll(r,s)};return Ni.runKernel(ba,o)}}),zl=Bi({zerosLike_:function(e){let t={x:zi(e,"x","zerosLike")};return Ni.runKernel(nr,t)}}),Ll=Bi({divNoNan_:function(e,t){let n=zi(e,"a","div"),a=zi(t,"b","div");[n,a]=Ai(n,a);let r=fo(n,a),i=zl(r),s=Ol(a,i);return Dl(s,i,r)}}),Wl=Bi({dot_:function(e,t){let n=zi(e,"t1","dot"),a=zi(t,"t2","dot");Z(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));let r=1===n.rank?n.size:n.shape[1],i=1===a.rank?a.size:a.shape[0];if(Z(r===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`)),1===n.rank&&1===a.rank){let e=Go(n,[1,-1]),t=Go(a,[-1,1]),r=Xo(e,t);return Go(r,[])}if(1===n.rank&&2===a.rank){let e=Go(n,[1,-1]),t=Go(a,[a.shape[0],a.shape[1]]),r=Xo(e,t);return Go(r,[r.size])}if(2===n.rank&&1===a.rank){let e=Go(a,[-1,1]),t=Xo(n,e);return Go(t,[t.size])}{let e=Go(a,[a.shape[0],a.shape[1]]);return Xo(n,e)}}}),Bl=Bi({einsum_:function(e,...t){let n=t.map(((e,t)=>zi(e,`tensors${t}`,"einsum"))),a={equation:e};return Ni.runKernel(Vt,n,a)}}),Vl=Bi({elu_:function(e){let t={x:zi(e,"x","elu","float32")};return Ni.runKernel(Ut,t)}}),Ul=Bi({ensureShape_:function(e,t){let n=zi(e,"x","ensureShape","string_or_numeric");if(!te(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Gl=Bi({erf_:function(e){let t=zi(e,"x","erf");Z("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Bs(t,"float32"));let n={x:t};return Ni.runKernel(Ht,n)}});function Hl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function jl(e,t,n){let a=e.length+t.length,r=[],i=0,s=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?r.push(e[i++]):r.push(t[s++]);return r}function ql(e,t){let n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Xl(e,t){return jl(e,t.map((e=>1)),t)}function Kl(e,t,n){Z(Hl(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Zl(e,t){if(Hl(e,t))return null;let n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function Yl(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Jl(e,t){let n=[];for(let a=t-e;a<t;++a)n.push(a);return n}var Ql=Bi({max_:function(e,t=null,n=!1){let a={x:zi(e,"x","max")},r={reductionIndices:t,keepDims:n};return Ni.runKernel(Tn,a,r)}}),eu=Bi({min_:function(e,t=null,n=!1){let a={x:zi(e,"x","min")},r={axis:t,keepDims:n};return Ni.runKernel(On,a,r)}}),tu=Bi({pow_:function(e,t){let n=zi(e,"base","pow"),a=zi(t,"exp","pow");[n,a]=Ai(n,a);let r={a:n,b:a};return Ni.runKernel(Jn,r)}});function nu(e,t){if((Gr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Gr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ui(e,[],[],t)}var au=Bi({sqrt_:function(e){let t={x:zi(e,"x","sqrt","float32")};return Ni.runKernel(Ta,t)}}),ru=Bi({square_:function(e){let t=zi(e,"x","square");return Ni.runKernel("Square",{x:t},{})}}),iu=Bi({sum_:function(e,t=null,n=!1){let a=zi(e,"x","sum");"bool"===a.dtype&&(a=Bs(a,"int32"));let r={x:a},i={axis:t,keepDims:n};return Ni.runKernel(Ra,r,i)}});function su(e,t,n=null){if(0===e.rank)return yo(e);if(1!==e.rank&&null===n)return su(Go(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return iu(yo(e),n);if(t===1/0)return Ql(yo(e),n);if(t===-1/0)return eu(yo(e),n);if("euclidean"===t||2===t)return au(iu(tu(yo(e),nu(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Ql(iu(yo(e),n[0]),n[1]-1);if(t===1/0)return Ql(iu(yo(e),n[1]),n[0]);if(t===-1/0)return eu(iu(yo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return au(iu(ru(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var ou=Bi({norm_:function(e,t="euclidean",n=null,a=!1){let r=su(e=zi(e,"x","norm"),t,n),i=r.shape;if(a){let t=de(n,e.shape);i=Xl(r.shape,t)}return Go(r,i)}}),lu=Bi({euclideanNorm_:function(e,t=null,n=!1){return ou(e,"euclidean",t,n)}}),uu=Bi({exp_:function(e){let t={x:zi(e,"x","exp")};return Ni.runKernel(qt,t)}}),du=Bi({expandDims_:function(e,t=0){let n=zi(e,"x","expandDims","string_or_numeric");Z(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let a={input:n},r={dim:t};return Ni.runKernel(Xt,a,r)}}),pu=Bi({expm1_:function(e){let t={x:zi(e,"x","expm1")};return Ni.runKernel(Kt,t)}}),cu=Bi({tile_:function(e,t){let n=zi(e,"x","tile","string_or_numeric");Z(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let a={x:n},r={reps:t};return Ni.runKernel(Xa,a,r)}}),hu=Bi({eye_:function(e,t,n,a="float32"){null==t&&(t=e);let r=Ws([e,t],a),i=e<=t?e:t;for(let e=0;e<i;++e)r.set(1,e,e);let s=Go(r.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return cu(du(s,0),[n[0],1,1]);if(2===n.length)return cu(du(du(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return cu(du(du(du(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),fu=Bi({floor_:function(e){let t={x:zi(e,"x","floor","float32")};return Ni.runKernel(Qt,t)}}),mu=Bi({gather_:function(e,t,n=0,a=0){let r={x:zi(e,"x","gather"),indices:zi(t,"indices","gather","int32")},i={axis:n,batchDims:a};return Ni.runKernel(nn,r,i)}}),yu=Bi({greater_:function(e,t){let n=zi(e,"a","greater","string_or_numeric"),a=zi(t,"b","greater","string_or_numeric");[n,a]=Ai(n,a),Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(rn,r)}}),gu=Bi({greaterEqual_:function(e,t){let n=zi(e,"a","greaterEqual","string_or_numeric"),a=zi(t,"b","greaterEqual","string_or_numeric");[n,a]=Ai(n,a),Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(sn,r)}}),Au=Bi({imag_:function(e){let t={input:zi(e,"input","imag")};return Ni.runKernel(un,t)}}),xu=Bi({isFinite_:function(e){let t={x:zi(e,"x","isFinite")};return Ni.runKernel(dn,t)}}),bu=Bi({isInf_:function(e){let t={x:zi(e,"x","isInf")};return Ni.runKernel(pn,t)}}),vu=Bi({isNaN_:function(e){let t={x:zi(e,"x","isNaN")};return Ni.runKernel(cn,t)}}),wu=Bi({leakyRelu_:function(e,t=.2){let n={x:zi(e,"x","leakyRelu")},a={alpha:t};return Ni.runKernel(hn,n,a)}}),ku=Bi({less_:function(e,t){let n=zi(e,"a","less","string_or_numeric"),a=zi(t,"b","less","string_or_numeric");[n,a]=Ai(n,a),Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(fn,r)}}),Iu=Bi({lessEqual_:function(e,t){let n=zi(e,"a","lessEqual","string_or_numeric"),a=zi(t,"b","lessEqual","string_or_numeric");[n,a]=Ai(n,a),Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(mn,r)}});function Su(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let a={start:e,stop:t,num:n};return Ni.runKernel(yn,{},a)}var Cu=Bi({localResponseNormalization_:function(e,t=5,n=1,a=1,r=.5){let i=zi(e,"x","localResponseNormalization");Z(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),Z(ae(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let s=i,o=!1;3===i.rank&&(o=!0,s=Go(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let l={x:s},u={depthRadius:t,bias:n,alpha:a,beta:r},d=Ni.runKernel(Sn,l,u);return o?Go(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Nu=Bi({log_:function(e){let t={x:zi(e,"x","log","float32")};return Ni.runKernel(gn,t)}}),Tu=Bi({log1p_:function(e){let t={x:zi(e,"x","log1p")};return Ni.runKernel(An,t)}});function Ru(e){return Z(ke(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let a=zi(t,"x","tf.grad","string_or_numeric"),r=null!=n?zi(n,"dy","tf.grad"):null;return Ni.tidy((()=>{let{value:t,grads:n}=Ni.gradients((()=>e(a)),[a],r);return null!=r&&Y(t.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Pu(n),n[0]}))}}function Eu(e){return Z(ke(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Z(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let a=Li(t,"args","tf.grads","string_or_numeric"),r=null!=n?zi(n,"dy","tf.grads"):null;return Ni.tidy((()=>{let{value:t,grads:n}=Ni.gradients((()=>e(...a)),a,r);return null!=r&&Y(t.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Pu(n),n}))}}function $u(e){return Z(ke(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Z(t instanceof ri,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Z(null==n||n instanceof ri,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:a,value:r}=Ni.gradients((()=>e(t)),[t],n);return Pu(a),{grad:a[0],value:r}}}function Mu(e){return Z(ke(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Z(Array.isArray(t)&&t.every((e=>e instanceof ri)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Z(null==n||n instanceof ri,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let a=Ni.gradients((()=>e(...t)),t,n);return null!=n&&Y(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Pu(a.grads),a}}function Fu(e,t){Z(ke(e),(()=>"The f passed in variableGrads(f) must be a function")),Z(null==t||Array.isArray(t)&&t.every((e=>e instanceof ii)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in Ni.registeredVariables)t.push(Ni.registeredVariables[e])}let a=n?t.filter((e=>!e.trainable)):null,r=t.length;Z((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));let{value:i,grads:s}=Ni.gradients(e,t,null,!0);Z(s.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Z(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=s[t]&&(o[e.name]=s[t])})),null!=a&&a.forEach((e=>o[e.name]=null)),{value:i,grads:o}}function _u(e){return Ni.customGrad(e)}function Pu(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Ou=Bi({neg_:function(e){let t={x:zi(e,"x","neg")};return Ni.runKernel(Vn,t)}}),Du=Bi({softplus_:function(e){let t={x:zi(e,"x","softplus")};return Ni.runKernel(Na,t)}}),zu=Bi({logSigmoid_:function(e){let t=zi(e,"x","logSigmoid");return _u((e=>({value:Ou(Du(Ou(e))),gradFunc:t=>mo(t,Ko(Ou(e)))})))(t)}}),Lu=Bi({sub_:function(e,t){let n=zi(e,"a","sub"),a=zi(t,"b","sub");[n,a]=Ai(n,a);let r={a:n,b:a};return Ni.runKernel(Ha,r)}}),Wu=Bi({logSoftmax_:function(e,t=-1){let n=zi(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return _u(((e,n)=>{let a=Ql(e,t,!0),r=Lu(e,a),i=Lu(Bs(r,"float32"),Nu(iu(uu(r),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{let[a]=n,r=uu(a);return Lu(e,mo(iu(e,t,!0),r))}}}))(n)}}),Bu=Bi({logSumExp_:function(e,t=null,n=!1){let a=zi(e,"x","logSumExp"),r=de(t,a.shape),i=Ql(a,r,!0),s=Lu(a,i),o=uu(s),l=iu(o,r),u=Nu(l),d=co(Go(i,u.shape),u);if(n){let e=Xl(d.shape,r);return Go(d,e)}return d}}),Vu=Bi({logicalAnd_:function(e,t){let n=zi(e,"a","logicalAnd","bool"),a=zi(t,"b","logicalAnd","bool");Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(xn,r)}}),Uu=Bi({logicalNot_:function(e){let t={x:zi(e,"x","logicalNot","bool")};return Ni.runKernel(bn,t)}}),Gu=Bi({logicalOr_:function(e,t){let n=zi(e,"a","logicalOr","bool"),a=zi(t,"b","logicalOr","bool");Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(vn,r)}}),Hu=Bi({logicalXor_:function(e,t){let n=zi(e,"a","logicalXor","bool"),a=zi(t,"b","logicalXor","bool");return Pl(n.shape,a.shape),Vu(Gu(e,t),Uu(Vu(e,t)))}}),ju=2147483648,qu=Bi({searchSorted_:function(e,t,n="left"){let a=zi(e,"sortedSequence","searchSorted"),r=zi(t,"values","searchSorted"),i=a.shape[a.shape.length-1],s=r.shape[r.shape.length-1],o=Go(a,[-1,i]),l=Go(r,[-1,s]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Q(l.shape)>=ju)throw new Error(`values tensor size must less than ${ju}`);if(o.shape[1]>=ju)throw new Error(`trailing dim_size must less than ${ju} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},d={side:n};return Ni.runKernel(xa,u,d)}});function Xu(e,t){return qu(e,t,"left")}var Ku=Bi({maxPool_:function(e,t,n,a,r){let i=zi(e,"x","maxPool"),s=i,o=!1;3===i.rank&&(o=!0,s=Go(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Z(4===s.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`)),Z(Wo(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Uo("maxPool",a,r);let l={x:s},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},d=Ni.runKernel(En,l,u);return o?Go(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Zu=Bi({maxPool3d_:function(e,t=[1,1,1],n,a,r,i="NDHWC"){let s=zi(e,"x","maxPool3d"),o=s,l=!1;4===s.rank&&(l=!0,o=Go(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),Z(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Z("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Uo("maxPool3d",a,r);let u={x:o},d={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:i},p=Ni.runKernel(Mn,u,d);return l?Go(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Yu=Bi({maxPoolWithArgmax_:function(e,t,n,a,r=!1){let i={x:zi(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=Ni.runKernel(_n,i,s);return{result:o[0],indexes:o[1]}}}),Ju=Bi({maximum_:function(e,t){let n=zi(e,"a","maximum"),a=zi(t,"b","maximum");[n,a]=Ai(n,a),"bool"===n.dtype&&(n=Bs(n,"int32"),a=Bs(a,"int32")),Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(Rn,r)}}),Qu=Bi({mean_:function(e,t=null,n=!1){let a={x:zi(e,"x","mean")},r={axis:t,keepDims:n};return Ni.runKernel(Pn,a,r)}});function ed(e,t="float32"){if(Me(e),"complex64"===t){let t=ed(e,"float32"),n=ed(e,"float32");return Vi(t,n)}let n=Ee(Q(e),t);return Ni.makeTensor(n,e,t)}function td(e,t="float32"){if(Me(e),"complex64"===t){let t=td(e,"float32"),n=ed(e,"float32");return Vi(t,n)}let n=Re(Q(e),t);return Ni.makeTensor(n,e,t)}function nd(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let a=zi(e,"x","meshgrid",e instanceof ri?e.dtype:"float32");if(void 0===t)return[a];let r=zi(t,"y","meshgrid",t instanceof ri?t.dtype:"float32"),i=Q(a.shape),s=Q(r.shape);return"xy"===n?(a=Go(a,[1,-1]),r=Go(r,[-1,1]),[Xo(td([s,1],a.dtype),a),Xo(r,td([1,i],r.dtype))]):(a=Go(a,[-1,1]),r=Go(r,[1,-1]),[Xo(a,td([1,s],a.dtype)),Xo(td([i,1],r.dtype),r)])}var ad=Bi({minimum_:function(e,t){let n=zi(e,"a","minimum"),a=zi(t,"b","minimum");[n,a]=Ai(n,a),"bool"===n.dtype&&(n=Bs(n,"int32"),a=Bs(a,"int32")),Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(Dn,r)}}),rd=Bi({mirrorPad_:function(e,t,n){Z("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let a=zi(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Z(t.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`));let r="reflect"===n?1:0;for(let e=0;e<a.rank;e++)Z(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Z(t[e][0]>=0&&t[e][0]<=a.shape[e]-r&&t[e][1]>=0&&t[e][1]<=a.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${a.shape[e]-r} or less than 0 for input of shape ${a.shape}`));let i={paddings:t,mode:n},s={x:a};return Ni.runKernel(zn,s,i)}}),id=Bi({mod_:function(e,t){let n=zi(e,"a","mod"),a=zi(t,"b","mod");[n,a]=Ai(n,a);let r={a:n,b:a};return Ni.runKernel(Ln,r)}}),sd=Bi({moments_:function(e,t=null,n=!1){let a=de(t,(e=zi(e,"x","moments")).shape),r=Qu(e,a,n),i=r.shape;n||(i=Xl(r.shape,a));let s=ru(Lu(Bs(e,"float32"),Go(r,i)));return{mean:r,variance:Qu(s,a,n)}}}),od=Bi({multiRNNCell_:function(e,t,n,a){let r=zi(t,"data","multiRNNCell"),i=Li(n,"c","multiRNNCell"),s=Li(a,"h","multiRNNCell"),o=r,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,i[t],s[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],d=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),d.push(l[e+1]);return[u,d]}}),ld=Bi({multinomial_:function(e,t,n,a=!1){let r=zi(e,"logits","multinomial"),i=r.size,s=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);n=n||Math.random();let o={logits:1===s?Go(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:a},u=Ni.runKernel(Wn,o,l);return 1===s?Go(u,[u.size]):u}}),ud=Bi({notEqual_:function(e,t){let n=zi(e,"a","notEqual","string_or_numeric"),a=zi(t,"b","notEqual","string_or_numeric");[n,a]=Ai(n,a),Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(Un,r)}}),dd=Bi({oneHot_:function(e,t,n=1,a=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i={indices:zi(e,"indices","oneHot","int32")},s={dtype:r,depth:t,onValue:n,offValue:a};return Ni.runKernel(Xn,i,s)}}),pd=Bi({onesLike_:function(e){let t={x:zi(e,"x","onesLike")};return Ni.runKernel(qn,t)}}),cd=Bi({outerProduct_:function(e,t){let n=zi(e,"v1","outerProduct"),a=zi(t,"v2","outerProduct");Z(1===n.rank&&1===a.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`));let r=Go(n,[-1,1]),i=Go(a,[1,-1]);return Xo(r,i)}}),hd=Bi({pad_:function(e,t,n=0){let a=zi(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},i={x:a};return Ni.runKernel(Zn,i,r)}}),fd=Bi({pad1d_:function(e,t,n=0){return Z(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),hd(e,[t],n)}}),md=Bi({pad2d_:function(e,t,n=0){return Z(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),hd(e,t,n)}}),yd=Bi({pad3d_:function(e,t,n=0){return Z(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),hd(e,t,n)}}),gd=Bi({pad4d_:function(e,t,n=0){return Z(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),hd(e,t,n)}}),Ad=Bi({spaceToBatchND_:function(e,t,n){let a=zi(e,"x","spaceToBatchND");Z(a.rank>=1+t.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`)),Z(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Z(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let r={x:a},i={blockShape:t,paddings:n};return Ni.runKernel(Ea,r,i)}}),xd=Bi({pool_:function(e,t,n,a,r,i,s){null==r&&(r=[1,1]),null==i&&(i=1),0===a&&(a="valid");let o=zi(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=Go(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Z(Wo(i,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`));let d,p=Eo(l.shape,t,i,r,a),c=[p.dilationHeight,p.dilationWidth];d="same"===a?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],r[t]]))}([p.filterHeight,p.filterWidth],c):[[0,0],[0,0]];let h=1===c[0]&&1===c[1],[f,m]=function(e,t,n){let a=n.map((e=>e[0])),r=n.map((e=>e[1])),i=e.concat(a,r),s=t.map(((e,t)=>(e-i[t]%e)%e)),o=r.map(((e,t)=>e+s[t])),l=t.map(((e,t)=>[a[t],o[t]])),u=t.map(((e,t)=>[0,s[t]]));return[l,u]}([p.inHeight,p.inWidth],c,d),y=h?a:"valid",g=h?l:Ad(l,c,f),A=("avg"===n?()=>Ho(g,t,i,y,s):()=>Ku(g,t,i,y,s))(),x=h?A:Qo(A,c,m);return u?Go(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),bd=Bi({prelu_:function(e,t){let n={x:zi(e,"x","prelu"),alpha:zi(t,"alpha","prelu")};return Ni.runKernel(Qn,n)}}),vd=Bi({prod_:function(e,t=null,n=!1){let a=zi(e,"x","prod");"bool"===a.dtype&&(a=Bs(a,"int32"));let r={x:a},i={axis:t,keepDims:n};return Ni.runKernel(ea,r,i)}}),wd=Bi({raggedGather_:function(e,t,n,a){let r={paramsNestedSplits:e.map(((e,t)=>zi(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:zi(t,"paramsDenseValues","raggedGather"),indices:zi(n,"indices","raggedGather","int32")},i={outputRaggedRank:a},s=Ni.runKernel(ta,r,i);return{outputNestedSplits:s.slice(0,s.length-1),outputDenseValues:s[s.length-1]}}}),kd=Bi({raggedRange_:function(e,t,n){let a=zi(e,"starts","raggedRange"),r={starts:a,limits:zi(t,"limits","raggedRange",a.dtype),deltas:zi(n,"deltas","raggedRange",a.dtype)},i=Ni.runKernel(na,r);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}}),Id=Bi({raggedTensorToTensor_:function(e,t,n,a,r){let i=zi(e,"shape","raggedTensorToTensor","int32"),s=zi(t,"values","raggedTensorToTensor"),o={shape:i,values:s,defaultValue:zi(n,"defaultValue","raggedTensorToTensor",s.dtype),rowPartitionTensors:a.map(((e,t)=>zi(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:r};return Ni.runKernel(aa,o,l)}}),Sd=Bi({rand_:function(e,t,n){Me(e);let a=Q(e),r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(a)}for(let e=0;e<a;e++)r[e]=t();return Ni.makeTensor(r,e,n)}}),Cd=A(E()),Nd={};g(Nd,{TEST_EPSILON_FLOAT16:()=>Rd,createVideoElement:()=>Wd,encodeStrings:()=>Ld,expectArrayBuffersEqual:()=>zd,expectArraysClose:()=>Ed,expectArraysEqual:()=>_d,expectNumbersClose:()=>Pd,expectPromiseToFail:()=>Fd,expectValuesInRange:()=>Dd,play:()=>Bd,testEpsilon:()=>$d});var Td=.001,Rd=.1;function Ed(e,t,n){return null==n&&(n=$d()),Md(e,t,((e,t)=>Od(e,t,n)))}function $d(){return 32===Ni.backend.floatPrecision()?Td:Rd}function Md(e,t,n){let a=!0;if((Gr(e)||Gr(t))&&(a=!1),Gr(e)&&Gr(t)&&(a=!0),a){let n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${a}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=Pi(e),a=Pi(t);if(!ne(n,a))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${a}]`)}let r=Gr(e)?e:Hr(e),i=Gr(t)?t:Hr(t);if(r.length!==i.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${i.length}.\nActual:   ${r}.\nExpected: ${i}.`);for(let e=0;e<i.length;++e){let t=r[e],a=i[e];if(!n(t,a))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${a}.\nActual:   ${r}.\nExpected: ${i}.`)}"undefined"!=typeof expect&&expect().nothing()}function Fd(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function _d(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return xe(e)||xe(e[0])||xe(t)||xe(t[0])?Md(e,n,((e,t)=>e==t)):Md(e,t,((e,t)=>Od(e,t,0)))}function Pd(e,t,n){if(null==n&&(n=$d()),!Od(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Od(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Dd(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error(`Value out of range:${e[a]} low: ${t}, high: ${n}`)}function zd(e,t){let n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error(`Expected ArrayBuffer to be of length ${a.length}, but it was ${n.length}`);for(let e=0;e<a.length;e++)if(n[e]!==a[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${a[e]} but got ${n[e]} instead`)}function Ld(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Ld(n):e[t]=Vr(n)}return e}function Wd(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Bd(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}var Vd=class{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let i=r||Math.random();this.random=Cd.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,i;do{a=2*this.random()-1,r=2*this.random()-1,i=a*a+r*r}while(i>=1||0===i);let s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*a*s,t=this.mean+this.stdDev*r*s,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Ud=Bi({randomGamma_:function(e,t,n=1,a="float32",r){if(Me(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error(`Unsupported data type ${a}`);let i=new class{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;let r=a||Math.random();this.randu=Cd.alea(r.toString()),this.randn=new Vd(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,i;for(;;){do{a=this.randn.nextValue(),i=1+this.c*a}while(i<=0);if(i*=i*i,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),r=this.randu(),r<t||Math.log(r)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,a,r),s=Ws(e,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),Gd=Bi({randomNormal_:function(e,t=0,n=1,a,r){if(Me(e),null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);let i=new Vd(t,n,a,!1,r),s=Ws(e,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),Hd=Bi({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Gd(e,0,1,t,n)}}),jd=Bi({randomUniform_:function(e,t=0,n=1,a="float32",r){Me(e);let i=Ws(e,a),s=new class{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Cd.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),qd=Bi({randomUniformInt_:function(e,t,n,a){return jd(e,t,n,"int32",a)}});function Xd(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:a};return Ni.runKernel(ra,{},r)}var Kd=Bi({real_:function(e){let t={input:zi(e,"input","real")};return Ni.runKernel(ia,t)}}),Zd=Bi({reciprocal_:function(e){let t={x:zi(e,"x","reciprocal")};return Ni.runKernel(sa,t)}}),Yd=Bi({relu_:function(e){let t={x:zi(e,"x","relu")};return Ni.runKernel(oa,t)}}),Jd=Bi({relu6_:function(e){let t={x:zi(e,"x","relu6")};return Ni.runKernel(ha,t)}}),Qd=Bi({reverse_:function(e,t){let n={x:zi(e,"x","reverse")},a={dims:t};return Ni.runKernel(fa,n,a)}}),ep=Bi({reverse1d_:function(e){let t=zi(e,"x","reverse");return Z(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Qd(t,0)}}),tp=Bi({reverse2d_:function(e,t){let n=zi(e,"x","reverse");return Z(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Qd(n,t)}}),np=Bi({reverse3d_:function(e,t){let n=zi(e,"x","reverse");return Z(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Qd(n,t)}}),ap=Bi({reverse4d_:function(e,t){let n=zi(e,"x","reverse");return Z(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Qd(n,t)}}),rp=Bi({round_:function(e){let t={x:zi(e,"x","round")};return Ni.runKernel(ma,t)}}),ip=Bi({rsqrt_:function(e){let t={x:zi(e,"x","rsqrt","float32")};return Ni.runKernel(ya,t)}}),sp=Bi({selu_:function(e){let t={x:zi(e,"x","selu")};return Ni.runKernel(va,t)}}),op=Bi({separableConv2d_:function(e,t,n,a,r,i=[1,1],s="NHWC"){let o=zi(e,"x","separableConv2d"),l=zi(t,"depthwiseFilter","separableConv2d"),u=zi(n,"pointwiseFilter","separableConv2d"),d=o,p=!1;if(3===o.rank&&(p=!0,d=Go(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Z(4===d.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`)),Z(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Z(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Z(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Z(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let c=l.shape[2],h=l.shape[3];Z(u.shape[2]===c*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*h}, but got ${u.shape[2]}.`));let f=Rl(d,l,a,r,s,i),m=yl(f,u,1,"valid",s);return p?Go(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),lp=async function(e,t){let n=zi(e,"x","setdiff1d"),a=zi(t,"y","setdiff1d");Z(n.dtype===a.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`)),Z(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Z(1===a.rank,(()=>`y should be 1D tensor, but got y (${a.shape}).`));let r=await n.data(),i=await a.data(),s=new Set(i),o=0;for(let e=0;e<r.length;e++)s.has(r[e])||o++;let l=new ti([o],n.dtype),u=new ti([o],"int32");for(let e=0,t=0;e<r.length;e++)s.has(r[e])||(l.values[t]=r[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},up=Bi({sign_:function(e){let t={x:zi(e,"x","sign")};return Ni.runKernel(Sa,t)}}),dp=Bi({sin_:function(e){let t={x:zi(e,"x","sin","float32")};return Ni.runKernel(ka,t)}}),pp=Bi({sinh_:function(e){let t={x:zi(e,"x","sinh")};return Ni.runKernel(Ia,t)}}),cp=Bi({slice1d_:function(e,t,n){let a=zi(e,"x","slice1d");return Z(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),Zo(a,[t],[n])}}),hp=Bi({slice2d_:function(e,t,n){let a=zi(e,"x","slice2d");return Z(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),Zo(a,t,n)}}),fp=Bi({slice3d_:function(e,t,n){let a=zi(e,"x","slice3d");return Z(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),Zo(a,t,n)}}),mp=Bi({slice4d_:function(e,t,n){let a=zi(e,"x","slice4d");return Z(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),Zo(a,t,n)}}),yp=Bi({softmax_:function(e,t=-1){let n=zi(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let a={logits:n},r={dim:t};return Ni.runKernel(Ma,a,r)}}),gp=Bi({fft_:function(e){Z("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ni.runKernel(Zt,t)}}),Ap=Bi({ifft_:function(e){Z("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ni.runKernel(ln,t)}}),xp=Bi({irfft_:function(e){let t,n=e.shape[e.shape.length-1],a=e.size/n;if(n<=2){let r=Go(e,[a,n]);t=Ap(r)}else{let r=[a,2*(n-1)],i=Go(Kd(e),[a,n]),s=Go(Au(e),[a,n]),o=Qd(Zo(i,[0,1],[a,n-2]),1),l=mo(Qd(Zo(s,[0,1],[a,n-2]),1),nu(-1)),u=qo([i,o],1),d=qo([s,l],1),p=Go(Vi(u,d),[r[0],r[1]]);t=Ap(p)}if(t=Kd(t),3===e.rank&&0!==e.shape[0]){let n=t,a=e.shape[0];t=Go(t,[a,t.shape[0]/a,t.shape[1]]),n.dispose()}return t}}),bp=Bi({split_:function(e,t,n=0){let a={x:zi(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Ni.runKernel($a,a,r)}}),vp=Bi({rfft_:function(e,t){Z("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,a=e.shape[e.shape.length-1],r=e.size/a;if(null!=t&&t<a){let r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,n=Zo(e,r,i),a=t}else if(null!=t&&t>a){let r=e.shape.map((e=>e));r[e.shape.length-1]=t-a,n=qo([e,ed(r)],e.shape.length-1),a=t}else n=e;let i=zl(n),s=Go(Vi(n,i),[r,a]),o=gp(s),l=Math.floor(a/2)+1,u=Kd(o),d=Au(o),p=bp(u,[l,a-l],u.shape.length-1),c=bp(d,[l,a-l],d.shape.length-1),h=n.shape.slice();return h[n.shape.length-1]=l,Go(Vi(p[0],c[0]),h)}}),wp=Bi({squaredDifference_:function(e,t){let n=zi(e,"a","squaredDifference"),a=zi(t,"b","squaredDifference");[n,a]=Ai(n,a),Pl(n.shape,a.shape);let r={a:n,b:a};return Ni.runKernel(za,r,{})}}),kp=Bi({squeeze_:function(e,t){let n=zi(e,"x","squeeze","string_or_numeric");return Go(n,pe(n.shape,t).newShape)}}),Ip=Bi({stack_:function(e,t=0){let n=Li(e,"tensors","stack","string_or_numeric");Z(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Z(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let a=n,r={axis:t};return Ni.runKernel(Kn,a,r)}}),Sp=Bi({step_:function(e,t=0){let n={x:zi(e,"x","step")},a={alpha:t};return Ni.runKernel(ar,n,a)}}),Cp=Bi({stridedSlice_:function(e,t,n,a,r=0,i=0,s=0,o=0,l=0){let u={x:zi(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:a,beginMask:r,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:l};return Ni.runKernel(Ba,u,d)}}),Np=Bi({tan_:function(e){let t={x:zi(e,"x","tan","float32")};return Ni.runKernel(ja,t)}});function Tp(e,t){J(e);let n=Pi(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ui(e,null,n,t)}function Rp(e,t,n){if(J(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let a=Pi(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ui(e,t,a,n)}function Ep(e,t,n){if(J(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let a=Pi(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ui(e,t,a,n)}function $p(e,t,n){if(J(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let a=Pi(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ui(e,t,a,n)}function Mp(e,t,n){if(J(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let a=Pi(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ui(e,t,a,n)}function Fp(e,t,n){if(J(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let a=Pi(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ui(e,t=t||a,a,n)}var _p={};function Pp(e,t,n){let a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(i+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(i+" update.rank != "+(r+e.length-a));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+a])throw new Error(i+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function Op(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Pp(n,t,e)}function Dp(e,t,n){let a=t.shape.length,r=a>1?t.shape[a-1]:1,i=n.length,s=1;for(let e=r;e<i;++e)s*=n[e];let o=r<1?1:r;return{sliceRank:r,numUpdates:Q(t.shape)/o,sliceSize:s,strides:[...Se(n.slice(0,r)),1],outputSize:Q(n)}}g(_p,{calculateShapes:()=>Dp,validateInput:()=>Op,validateUpdateShape:()=>Pp});var zp=Bi({tensorScatterUpdate_:function(e,t,n){let a=zi(e,"tensor","tensorScatterupdate"),r=zi(t,"indices","tensorScatterupdate","int32"),i=zi(n,"updates","tensorScatterupdate");if(Op(i,r,a.shape),a.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${a.dtype} and ${i.dtype}.`);let s={tensor:a,indices:r,updates:i};return Ni.runKernel(Aa,s,{})}}),Lp=Bi({topk_:function(e,t=1,n=!0){let a=zi(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let r=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let i={x:a},s={k:t,sorted:n},[o,l]=Ni.runKernel(Ka,i,s);return{values:o,indices:l}}}),Wp=Bi({truncatedNormal_:function(e,t=0,n=1,a,r){if(Me(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");let i=new Vd(t,n,a,!0,r),s=Ws(e,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),Bp=Bi({unique_:function(e,t=0){let n=zi(e,"x","unique","string_or_numeric");Z(n.rank>0,(()=>"The input tensor must be at least 1D"));let a={x:n},r={axis:t},[i,s]=Ni.runKernel(Ja,a,r);return{values:i,indices:s}}}),Vp=Bi({unsortedSegmentSum_:function(e,t,n){let a=zi(e,"x","unsortedSegmentSum"),r=zi(t,"segmentIds","unsortedSegmentSum","int32");Z(ae(n),(()=>"numSegments must be of dtype int"));let i={x:a,segmentIds:r},s={numSegments:n};return Ni.runKernel(er,i,s)}}),Up=Bi({unstack_:function(e,t=0){let n=zi(e,"x","unstack","string_or_numeric");Z(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let a={value:n},r={axis:t};return Ni.runKernel(Qa,a,r)}});function Gp(e,t){return qu(e,t,"right")}function Hp(e,t=!0,n,a){return Ni.makeVariable(e,t,n,a)}function jp(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let a=Ws(e,"int32"),r=Ws([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let i=a.indexToLoc(n[t]),s=t*e.length;r.values.set(i,s)}return r.toTensor()}var qp=async function(e){let t=zi(e,"condition","whereAsync","bool"),n=await t.data(),a=jp(t.shape,n);return e!==t&&t.dispose(),a},Xp=async function(e,t,n){let a=zi(e,"tensor","boolMask"),r=zi(t,"mask","boolMask","bool"),i=null==n?0:n,s=r.rank,o=a.shape;Z(s>0,(()=>"mask cannot be scalar")),Y(o.slice(i,i+s),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=i;e<i+s;e++)l*=o[e];let u=o.slice(0,i).concat([l],o.slice(i+s)),d=Go(a,u),p=Go(r,[-1]),c=await qp(p),h=kp(c,[1]),f=mu(d,h,i);return e!==a&&a.dispose(),t!==r&&r.dispose(),h.dispose(),d.dispose(),p.dispose(),c.dispose(),f},Kp=Bi({transpose_:function(e,t,n){let a=zi(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),Z(a.rank===t.length,(()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`)),t.forEach((e=>{Z(e>=0&&e<a.rank,(()=>`All entries in 'perm' must be between 0 and ${a.rank-1} but got ${t}`))})),a.rank<=1)return a.clone();let r={x:a},i={perm:t};return"complex64"===a.dtype?Js((()=>{let e=Kd(a),t=Au(a);return e=Ni.runKernel(Ya,{x:e},i),t=Ni.runKernel(Ya,{x:t},i),n&&(t=Ou(t)),Vi(e,t)})):Ni.runKernel(Ya,r,i)}}),Zp=Bi({movingAverage_:function(e,t,n,a,r=!0){let i=zi(e,"v","movingAverage"),s=zi(t,"x","movingAverage"),o=zi(n,"decay","movingAverage");xi(i,s),Z(ne(i.shape,s.shape),(()=>"Shape mismatch in v and x"));let l=nu(1),u=Lu(l,o),d=mo(Lu(s,i),u);if(r){Z(null!=a,(()=>"When using zeroDebias: true, step is required."));let e=zi(a,"step","movingAverage");d=fo(d,Lu(l,tu(o,e)))}return co(i,d)}}),Yp=Bi({scatterND_:function(e,t,n){Me(n);let a=zi(e,"indices","scatterND","int32"),r=zi(t,"updates","scatterND");Op(r,a,n);let i={indices:a,updates:r},s={shape:n};return Ni.runKernel(ga,i,s)}}),Jp=Bi({sparseToDense_:function(e,t,n,a=0){Me(n);let r=zi(e,"sparseIndices","sparseToDense","int32"),i=zi(t,"sparseValues","sparseToDense","string_or_numeric"),s=zi(a,"defaultValue","sparseToDense",i.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);let s=t.size;if(0!==t.rank&&(1!==t.rank||s!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,i,n,s);let o={sparseIndices:r,sparseValues:i,defaultValue:s},l={outputShape:n};return Ni.runKernel(Da,o,l)}}),Qp=Bi({gatherND_:function(e,t){let n=zi(t,"indices","gatherND","int32"),a={params:zi(e,"x","gatherND","string_or_numeric"),indices:n};return Ni.runKernel(an,a)}}),ec=Bi({dropout_:function(e,t,n,a){let r=zi(e,"x","dropout");if(Z("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),Z(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ri?r.clone():r;let i=function(e,t){if(null==t)return e.shape.slice();if(ne(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),s=1-t,o=fo(fu(co(jd(i,0,1,"float32",a),s)),s);return mo(r,o)}});function tc(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function nc(e,t,n){let a=1-e%2,r=new Float32Array(e);for(let i=0;i<e;++i){let s=2*Math.PI*i/(e+a-1);r[i]=t-n*Math.cos(s)}return Tp(r,"float32")}var ac=async function(e,t,n=1){let a=zi(e,"predictions","inTopK"),r=zi(t,"targets","inTopK");Z(a.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`)),Z(a.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`)),Y(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let i=a.shape[a.shape.length-1];Z(n>0&&n<=i,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`));let s=await a.data(),o=await r.data(),[l,u]=[s.length/i,i],d=ce("bool",l);for(let e=0;e<l;e++){let t=e*u,a=s.subarray(t,t+u),r=[];for(let e=0;e<a.length;e++)r.push({value:a[e],index:e});r.sort(((e,t)=>t.value-e.value)),d[e]=0;for(let t=0;t<n;t++)if(r[t].index===o[e]){d[e]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),Gi(d,r.shape,"bool")},rc={};g(rc,{conv2d:()=>dc,depthwiseConv2d:()=>hc,matMul:()=>fc});var ic=Bi({conv2DBackpropFilter_:function(e,t,n,a,r,i="NHWC",s){let o=e;3===e.rank&&(o=Go(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Go(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Z(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Z(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Z(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===i?o.shape[3]:o.shape[1],d="NHWC"===i?l.shape[3]:l.shape[1];Z(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Z(d===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`)),Uo("conv2dDerFilter",r,s);let p={x:o,dy:l},c={strides:a,pad:r,dataFormat:i,dimRoundingMode:s,filterShape:n};return Ni.runKernel(vt,p,c)}});function sc(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return mo(e,Sp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function oc(e,t){let n=t,a=_l(e.shape,t.shape);return a.length>0&&(n=iu(n,a)),Go(n,e.shape)}function lc(e,t,n,a){if("linear"===t)return e;if("relu"===t)return Yd(e);if("elu"===t)return Vl(e);if("relu6"===t)return Jd(e);if("prelu"===t)return bd(e,n);if("leakyrelu"===t)return wu(e,a);if("sigmoid"===t)return Ko(e);throw new Error(`Unknown fused activation ${t}.`)}var uc=(e,t)=>!(e>0)||"linear"===t,dc=Bi({fusedConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(l=l||"linear",!1===uc(Ni.state.gradientDepth,l)){Z("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let p=yl(e,t,n,a,r,i,s);return null!=o&&(p=co(p,o)),lc(p,l,u,d)}let p=zi(e,"x","conv2d","float32"),c=zi(t,"filter","conv2d","float32"),h=p,f=!1;3===p.rank&&(f=!0,h=Go(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Z(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),Z(4===c.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`)),Uo("fused conv2d",a,s);let m="NHWC"===r?h.shape[3]:h.shape[1];Z(c.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${c.shape[2]}.`)),Z(Wo(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));let y,g,A=Mo(h.shape,c.shape,n,i,a,s);if(null!=o&&(y=zi(o,"bias","fused conv2d"),[y]=Ai(y,p),"NHWC"===r?Pl(A.outShape,y.shape):(Z(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),Z(0===y.shape.length||y.shape[0]===A.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${A.outChannels})`)))),null!=u){let e=u.shape;if(Z(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)Z(1===e[0]||e[0]===A.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${A.outChannels}).`));else if(3===e.length)try{Pl(e,A.outShape)}catch(t){let n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${A.outShape}).`;throw Error(n)}g=zi(u,"prelu weights","fused conv2d")}let x=(e,t)=>{Z("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));let[s,o,u,d]=t,p=sc(e,u,l);Z(Lo(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));let c=[Al(o.shape,p,s,n,a),ic(o,p,s.shape,n,a)];if(null!=d){let e=oc(d,p);c.push(e)}return c},b={x:h,filter:c,bias:y,preluActivationWeights:g},v={strides:n,pad:a,dataFormat:r,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:d};return null==o?_u(((e,t,n)=>{let a=Ni.runKernel(or,b,v);return n([t,e,a]),f&&(a=Go(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(h,c):_u(((e,t,n,a)=>{let r=Ni.runKernel(or,b,v);return a([t,e,r,n]),f&&(r=Go(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(h,c,y)}}),pc=Bi({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r,i=[1,1],s){let o=e;3===e.rank&&(o=Go(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Go(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:a,pad:r,dimRoundingMode:s,dilations:i,filterShape:n};return Ni.runKernel(_t,u,d)}}),cc=Bi({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r,i=[1,1],s){let o=t,l=!1;3===t.rank&&(l=!0,o=Go(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},d={strides:a,pad:r,dimRoundingMode:s,dilations:i,inputShape:e},p=Ni.runKernel(Pt,u,d);return l?Go(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),hc=Bi({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(!1===uc(Ni.state.gradientDepth,l)){let p=Rl(e,t,n,a,r,i,s);return null!=o&&(p=co(p,o)),lc(p,l,u,d)}let p=zi(e,"x","depthwiseConv2d","float32"),c=zi(t,"filter","depthwiseConv2d","float32"),h=p,f=!1;3===p.rank&&(f=!0,h=Go(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Z(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),Z(4===c.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`)),Z(h.shape[3]===c.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),null==i&&(i=[1,1]),Z(Wo(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Uo("fused depthwiseConv2d",a,s);let m,y,g=Mo(h.shape,c.shape,n,i,a,s,!0);null!=o&&(m=zi(o,"bias","fused conv2d"),[m]=Ai(m,p),Pl(g.outShape,m.shape)),null!=u&&(y=zi(u,"prelu weights","fused depthwiseConv2d"));let A=(e,t)=>{Z(Lo(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));let[r,o,u,d]=t,p=sc(e,u,l),c=cc(o.shape,p,r,n,a,i,s),h=pc(o,p,r.shape,n,a,i,s);return null!=d?[c,h,oc(m,p)]:[c,h]},x={x:h,filter:c,bias:m,preluActivationWeights:y},b={strides:n,pad:a,dataFormat:r,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:d};return null==o?_u(((e,t,n)=>{let a=Ni.runKernel(lr,x,b);return n([t,e,a]),f&&(a=Go(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:A}}))(h,c):_u(((e,t,n,a)=>{let r=Ni.runKernel(lr,x,b);return a([t,e,r,n]),f&&(r=Go(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:A}}))(h,c,m)}}),fc=Bi({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:o=.2}){if(!1===uc(Ni.state.gradientDepth,i)){let l=Xo(e,t,n,a);return null!=r&&(l=co(l,r)),lc(l,i,s,o)}let l=zi(e,"a","fused matMul"),u=zi(t,"b","fused matMul");[l,u]=Ai(l,u);let d=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=a?u.shape[u.rank-1]:u.shape[u.rank-2],c=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=a?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),y=Q(f),g=Q(m);Z(d===p,(()=>`Error in fused matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${a} must match.`));let A,x,b=Pl(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([c,h]),v=Go(l,n?[y,d,c]:[y,c,d]),w=Go(u,a?[g,h,p]:[g,p,h]);null!=r&&(A=zi(r,"bias","fused matMul"),[A]=Ai(A,l),Pl(b,A.shape)),null!=s&&(x=zi(s,"prelu weights","fused matMul"));let k=(e,t)=>{let s,o,[l,u,d,p]=t,c=sc(Go(e,d.shape),d,i);return n||a?!n&&a?(s=Xo(c,u,!1,!1),o=Xo(c,l,!0,!1)):n&&!a?(s=Xo(u,c,!1,!0),o=Xo(l,c,!1,!1)):(s=Xo(u,c,!0,!0),o=Xo(c,l,!0,!0)):(s=Xo(c,u,!1,!0),o=Xo(l,c,!0,!1)),null!=r?[s,o,oc(p,c)]:[s,o]},I={a:v,b:w,bias:A,preluActivationWeights:x},S={transposeA:n,transposeB:a,activation:i,leakyreluAlpha:o};return null==r?_u(((e,t,n)=>{let a=Ni.runKernel(sr,I,S);return n([e,t,a]),{value:Go(a,b),gradFunc:k}}))(v,w):_u(((e,t,n,a)=>{let r=Ni.runKernel(sr,I,S);return a([e,t,r,n]),{value:Go(r,b),gradFunc:k}}))(v,w,A)}}),mc=Bi({hammingWindow_:function(e){return nc(e,.54,.46)}}),yc=Bi({hannWindow_:function(e){return nc(e,.5,.5)}}),gc=Bi({frame_:function(e,t,n,a=!1,r=0){let i=0,s=[];for(;i+t<=e.size;)s.push(Zo(e,i,t)),i+=n;if(a)for(;i<e.size;){let a=i+t-e.size,o=qo([Zo(e,i,t-a),dl([a],r)]);s.push(o),i+=n}return 0===s.length?Rp([],[0,t]):Go(qo(s),[s.length,t])}}),Ac=Bi({stft_:function(e,t,n,a,r=yc){null==a&&(a=tc(t));let i=gc(e,t,n),s=mo(i,r(t));return vp(s,a)}}),xc=Bi({cropAndResize_:function(e,t,n,a,r="bilinear",i=0){let s=zi(e,"image","cropAndResize"),o=zi(t,"boxes","cropAndResize","float32"),l=zi(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Z(4===s.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`)),Z(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Z(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Z(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),Z(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),Z("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));let d={image:s,boxes:o,boxInd:l},p={method:r,extrapolationValue:i,cropSize:a};return Ni.runKernel(Et,d,p)}}),bc=Bi({flipLeftRight_:function(e){let t=zi(e,"image","flipLeftRight","float32");Z(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return Ni.runKernel(Jt,n,{})}}),vc=Bi({grayscaleToRGB_:function(e){let t=zi(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];Z(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Z(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,cu(t,r)}}),wc=Bi({rotateWithOffset_:function(e,t,n=0,a=.5){let r=zi(e,"image","rotateWithOffset","float32");Z(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));let i={image:r},s={radians:t,fillValue:n,center:a};return Ni.runKernel(ir,i,s)}});function kc(e,t,n,a,r,i){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);let s=e.shape[0];return n=Math.min(n,s),Z(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),Z(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Z(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Z(1===t.rank,(()=>"scores must be a 1D tensor")),Z(t.shape[0]===s,(()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`)),Z(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:i}}var Ic=Bi({nonMaxSuppression_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let i=zi(e,"boxes","nonMaxSuppression","float32"),s=zi(t,"scores","nonMaxSuppression","float32"),o=kc(i,s,n,a,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Ni.runKernel(Gn,{boxes:i,scores:s},l)}});function Sc(e,t,n){let a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,i=0,s=!1;for(;a<r;){i=a+(r-a>>>1);let o=n(t,e[i]);o>0?a=i+1:(r=i,s=!o)}return s?a:-a-1}(e,t,n||Cc)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function Cc(e,t){return e>t?1:e<t?-1:0}function Nc(e,t,n,a,r){return Ec(e,t,n,a,r,0)}function Tc(e,t,n,a,r,i){return Ec(e,t,n,a,r,0,!1,i,!0)}function Rc(e,t,n,a,r,i){return Ec(e,t,n,a,r,i,!0)}function Ec(e,t,n,a,r,i,s=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Fc);let d=i>0?-.5/i:0,p=[],c=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:s}=t;if(n<r)break;let o=!1;for(let n=p.length-1;n>=s;--n){let s=$c(e,i,p[n]);if(s>=a){o=!0;break}if(t.score=t.score*Mc(a,d,s),t.score<=r)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(i),c.push(t.score)):t.score>r&&Sc(u,t,Fc))}let h=p.length,f=n-h;o&&f>0&&(p.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let m={selectedIndices:p};return s&&(m.selectedScores=c),l&&(m.validOutputs=h),m}function $c(e,t,n){let a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),i=Math.min(a[0],a[2]),s=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),d=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),h=(o-i)*(l-s),f=(p-u)*(c-d);if(h<=0||f<=0)return 0;let m=Math.max(i,u),y=Math.max(s,d),g=Math.min(o,p),A=Math.min(l,c),x=Math.max(g-m,0)*Math.max(A-y,0);return x/(h+f-x)}function Mc(e,t,n){let a=Math.exp(t*n*n);return n<=e?a:0}function Fc(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var _c=Bi({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,i=0){let s=zi(e,"boxes","nonMaxSuppression"),o=zi(t,"scores","nonMaxSuppression"),l=kc(s,o,n,a,r,i),u={boxes:s,scores:o},d={maxOutputSize:n=l.maxOutputSize,iouThreshold:a=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},p=Ni.runKernel(jn,u,d);return{selectedIndices:p[0],selectedScores:p[1]}}}),Pc=Bi({nonMaxSuppressionPadded_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,i=!1){let s=zi(e,"boxes","nonMaxSuppression"),o=zi(t,"scores","nonMaxSuppression"),l=kc(s,o,n,a,r,null),u={boxes:s,scores:o},d={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},p=Ni.runKernel(Hn,u,d);return{selectedIndices:p[0],validOutputs:p[1]}}}),Oc=Bi({resizeBilinear_:function(e,t,n=!1,a=!1){let r=zi(e,"images","resizeBilinear");Z(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),Z(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Z(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=r,s=!1;3===r.rank&&(s=!0,i=Go(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:a,size:t},u=Ni.runKernel(pa,o,l);return s?Go(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Dc=Bi({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){let r=zi(e,"images","resizeNearestNeighbor");Z(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),Z(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Z("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Z(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=r,s=!1;3===r.rank&&(s=!0,i=Go(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:a,size:t},u=Ni.runKernel(ua,o,l);return s?Go(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),zc=Bi({threshold_:function(e,t="binary",n=!1,a=.5){let r,i,s,o,l=zi(e,"image","threshold"),u=l.shape[0]*l.shape[1],d=mo(Tp([a]),255);if(Z(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),Z(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),Z("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),Z("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[r,i,s]=bp(l,[1,1,1],-1);let e=mo(r,.2989),t=mo(i,.587),n=mo(s,.114);o=co(co(e,t),n)}else o=e;"otsu"===t&&(d=function(e,t){let n,a,r,i,s,o,l=Tp([-1]),u=Tp([0]),d=Tp([0]);for(let p=0;p<e.size-1;p++){n=Zo(e,0,p+1),a=Zo(e,p+1),s=fo(iu(n),t),o=fo(iu(a),t);let c=iu(mo(n,Xd(0,n.size)));r=fo(c,iu(n));let h=dl(a.shape,n.size),f=co(Xd(0,a.size),h),m=mo(a,f);i=fo(iu(m),iu(a));let y=Lu(r,i),g=Lu(r,i),A=mo(s,o);d=mo(mo(A,y),g);let x=yu(d,u);u=Dl(x,d,u),l=Dl(x,Tp([p]),l)}return l}(il(Bs(rp(o),"int32"),Gi([]),256),u));let p=n?Iu(o,d):yu(o,d);return Bs(mo(p,255),"int32")}}),Lc=Bi({transform_:function(e,t,n="nearest",a="constant",r=0,i){let s=zi(e,"image","transform","float32"),o=zi(t,"transforms","transform","float32");Z(4===s.rank,(()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`)),Z(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Z(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));let l={image:s,transforms:o},u={interpolation:n,fillMode:a,fillValue:r,outputShape:i};return Ni.runKernel(Za,l,u)}}),Wc=Bi({bandPart_:function(e,t,n){let a=zi(e,"a","bandPart");Z(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));let r,i,s=a.shape,[o,l]=a.shape.slice(-2);"number"==typeof t?(Z(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Z(t<=o,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`)),r=zi(t<0?o:t,"numLower","bandPart")):(Z("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),r=Dl(ku(t,0),o,ad(t,o))),"number"==typeof n?(Z(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),Z(n<=l,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${l}).`)),i=zi(n<0?l:n,"numUpper","bandPart")):(Z("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),i=Dl(ku(n,0),l,ad(n,l)));let u=Go(Xd(0,o,1,"int32"),[-1,1]),d=Xd(0,l,1,"int32"),p=Lu(u,d),c=Vu(Iu(p,r),gu(p,Ou(i))),h=ed([o,l],a.dtype);return Go(Ip(Up(Go(a,[-1,o,l])).map((e=>Dl(c,e,h)))),s)}}),Bc=Bi({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Z(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)Z(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=bp(e,e.shape[0],0).map((e=>kp(e,[0])));Z(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],a=e;for(let t=0;t<e.length;++t)n.push(Ni.tidy((()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){let t=mo(iu(mo(n[a],e)),n[a]);e=Lu(e,t)}return fo(e,ou(e,"euclidean"))})));return t?Ip(n,0):n}});function Vc(e,t=!1){return Ni.tidy((()=>{Z(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],a=e.shape[1],r=hu(n),i=Vs(e),s=Rp([[1]],[1,1]),o=Vs(s),l=n>=a?a:n;for(let e=0;e<l;++e){let t=i,l=o,u=r;[o,i,r]=Ni.tidy((()=>{let t=Zo(i,[e,e],[n-e,1]),l=ou(t),u=Zo(i,[e,e],[1,1]),d=Dl(yu(u,0),Rp([[-1]]),Rp([[1]])),p=Lu(u,mo(d,l)),c=fo(t,p);o=1===c.shape[0]?Vs(s):qo([s,Zo(c,[1,0],[c.shape[0]-1,c.shape[1]])],0);let h=Ou(fo(Xo(d,p),l)),f=Zo(i,[e,0],[n-e,a]),m=mo(h,o),y=Kp(o);if(0===e)i=Lu(f,Xo(m,Xo(y,f)));else{let t=Lu(f,Xo(m,Xo(y,f)));i=qo([Zo(i,[0,0],[e,a]),t],0)}let g=Kp(m),A=Zo(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Lu(A,Xo(Xo(A,o),g));else{let t=Lu(A,Xo(Xo(A,o),g));r=qo([Zo(r,[0,0],[n,e]),t],1)}return[o,i,r]})),Qs([t,l,u])}return!t&&n>a&&(r=Zo(r,[0,0],[n,a]),i=Zo(i,[0,0],[a,a])),[r,i]}))}var Uc,Gc=Bi({qr_:function(e,t=!1){if(Z(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Vc(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=Up(Go(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],i=[];return a.forEach((e=>{let[n,a]=Vc(e,t);r.push(n),i.push(a)})),[Go(Ip(r,0),e.shape),Go(Ip(i,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Uc||(Uc={}));var Hc=Bi({computeWeightedLoss_:function(e,t,n=Uc.SUM_BY_NONZERO_WEIGHTS){let a=zi(e,"losses","computeWeightedLoss"),r=null;null!=t&&(r=zi(t,"weights","computeWeightedLoss"));let i=null==r?a:mo(a,r);if(n===Uc.NONE)return i;if(n===Uc.SUM)return iu(i);if(n===Uc.MEAN){if(null==r)return Qu(i);{let e=a.size/r.size,t=fo(iu(i),iu(r));return e>1?fo(t,nu(e)):t}}if(n===Uc.SUM_BY_NONZERO_WEIGHTS){if(null==r)return fo(iu(i),nu(a.size));{let e=mo(r,td(a.shape)),t=Bs(iu(ud(e,nu(0))),"float32");return fo(iu(i),t)}}throw Error(`Unknown reduction: ${n}`)}}),jc=Bi({absoluteDifference_:function(e,t,n,a=Uc.SUM_BY_NONZERO_WEIGHTS){let r=zi(e,"labels","absoluteDifference"),i=zi(t,"predictions","absoluteDifference"),s=null;null!=n&&(s=zi(n,"weights","absoluteDifference")),Y(r.shape,i.shape,"Error in absoluteDifference: ");let o=yo(Lu(r,i));return Hc(o,s,a)}}),qc=Bi({cosineDistance_:function(e,t,n,a,r=Uc.SUM_BY_NONZERO_WEIGHTS){let i=zi(e,"labels","cosineDistance"),s=zi(t,"predictions","cosineDistance"),o=null;null!=a&&(o=zi(a,"weights","cosineDistance")),Y(i.shape,s.shape,"Error in cosineDistance: ");let l=nu(1),u=Lu(l,iu(mo(i,s),n,!0));return Hc(u,o,r)}}),Xc=Bi({hingeLoss_:function(e,t,n,a=Uc.SUM_BY_NONZERO_WEIGHTS){let r=zi(e,"labels","hingeLoss"),i=zi(t,"predictions","hingeLoss"),s=null;null!=n&&(s=zi(n,"weights","hingeLoss")),Y(r.shape,i.shape,"Error in hingeLoss: ");let o=nu(1);r=Lu(mo(nu(2),r),o);let l=Yd(Lu(o,mo(r,i)));return Hc(l,s,a)}}),Kc=Bi({huberLoss_:function(e,t,n,a=1,r=Uc.SUM_BY_NONZERO_WEIGHTS){let i=zi(e,"labels","huberLoss"),s=zi(t,"predictions","huberLoss"),o=null;null!=n&&(o=zi(n,"weights","huberLoss")),Y(i.shape,s.shape,"Error in huberLoss: ");let l=nu(a),u=yo(Lu(s,i)),d=ad(u,l),p=Lu(u,d),c=co(mo(nu(.5),ru(d)),mo(l,p));return Hc(c,o,r)}}),Zc=Bi({logLoss_:function(e,t,n,a=1e-7,r=Uc.SUM_BY_NONZERO_WEIGHTS){let i=zi(e,"labels","logLoss"),s=zi(t,"predictions","logLoss"),o=null;null!=n&&(o=zi(n,"weights","logLoss")),Y(i.shape,s.shape,"Error in logLoss: ");let l=nu(1),u=nu(a),d=Ou(mo(i,Nu(co(s,u)))),p=mo(Lu(l,i),Nu(co(Lu(l,s),u))),c=Lu(d,p);return Hc(c,o,r)}}),Yc=Bi({meanSquaredError_:function(e,t,n,a=Uc.SUM_BY_NONZERO_WEIGHTS){let r=zi(e,"labels","meanSquaredError"),i=zi(t,"predictions","meanSquaredError"),s=null;null!=n&&(s=zi(n,"weights","meanSquaredError")),Y(r.shape,i.shape,"Error in meanSquaredError: ");let o=wp(r,i);return Hc(o,s,a)}}),Jc=Bi({sigmoidCrossEntropy_:function(e,t,n,a=0,r=Uc.SUM_BY_NONZERO_WEIGHTS){let i=zi(e,"multiClassLabels","sigmoidCrossEntropy"),s=zi(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=zi(n,"weights","sigmoidCrossEntropy")),Y(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),a>0){let e=nu(a),t=nu(1),n=nu(.5);i=co(mo(i,Lu(t,e)),mo(n,e))}let l=function(e,t){let n=zi(e,"labels","sigmoidCrossEntropyWithLogits"),a=zi(t,"logits","sigmoidCrossEntropyWithLogits");Y(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Yd(a),i=mo(a,n),s=Tu(uu(Ou(yo(a))));return co(Lu(r,i),s)}(i,s);return Hc(l,o,r)}}),Qc=Bi({softmaxCrossEntropy_:function(e,t,n,a=0,r=Uc.SUM_BY_NONZERO_WEIGHTS){let i=zi(e,"onehotLabels","softmaxCrossEntropy"),s=zi(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=zi(n,"weights","softmaxCrossEntropy")),Y(i.shape,s.shape,"Error in softmaxCrossEntropy: "),a>0){let e=nu(a),t=nu(1),n=nu(i.shape[1]);i=co(mo(i,Lu(t,e)),fo(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return _u(((e,t,a)=>{let r=Bu(t,[n],!0),i=Lu(Bs(t,"float32"),r);a([e,i]);let s=Ou(mo(i,e));return{value:iu(s,[n]),gradFunc:(e,t)=>{let[a,r]=t,i=Xl(e.shape,[n]);return[mo(Go(e,i),Lu(Bs(a,"float32"),uu(r))),mo(Go(e,i),Lu(uu(r),Bs(a,"float32")))]}}}))(e,t)}(i,s);return Hc(l,o,r)}}),eh=Bi({sparseFillEmptyRows_:function(e,t,n,a){let r=zi(e,"indices","sparseFillEmptyRows","int32"),i=zi(t,"values","sparseFillEmptyRows"),s=zi(n,"denseShape","sparseFillEmptyRows","int32"),o=zi(a,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==s.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:r,values:i,denseShape:s,defaultValue:o},u=Ni.runKernel(Fa,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),th=Bi({sparseReshape_:function(e,t,n){let a=zi(e,"inputIndices","sparseReshape","int32"),r=zi(t,"inputShape","sparseReshape","int32"),i=zi(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);let s={inputIndices:a,inputShape:r,newShape:i},o=Ni.runKernel(_a,s);return{outputIndices:o[0],outputShape:o[1]}}}),nh=Bi({sparseSegmentMean_:function(e,t,n){let a=zi(e,"data","sparseSegmentMean"),r=zi(t,"indices","sparseSegmentMean","int32"),i=zi(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);let s={data:a,indices:r,segmentIds:i};return Ni.runKernel(Pa,s)}}),ah=Bi({sparseSegmentSum_:function(e,t,n){let a=zi(e,"data","sparseSegmentSum"),r=zi(t,"indices","sparseSegmentSum","int32"),i=zi(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);let s={data:a,indices:r,segmentIds:i};return Ni.runKernel(Oa,s)}}),rh=Bi({stringNGrams_:function(e,t,n,a,r,i,s,o){let l=zi(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=zi(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let d={separator:n,nGramWidths:a,leftPad:r,rightPad:i,padWidth:s,preserveShortSequences:o},p={data:l,dataSplits:u},c=Ni.runKernel(Va,p,d);return{nGrams:c[0],nGramsSplits:c[1]}}}),ih=Bi({stringSplit_:function(e,t,n=!0){let a=zi(e,"input","stringSplit","string"),r=zi(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let i={skipEmpty:n},s={input:a,delimiter:r},o=Ni.runKernel(Ua,s,i);return{indices:o[0],values:o[1],shape:o[2]}}}),sh=Bi({stringToHashBucketFast_:function(e,t){let n=zi(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return Ni.runKernel(Ga,r,a)}}),oh=Bi({staticRegexReplace_:function(e,t,n,a=!0){let r=zi(e,"input","staticRegexReplace","string"),i={pattern:t,rewrite:n,replaceGlobal:a};return Ni.runKernel(Wa,{x:r},i)}}),lh={fft:gp,ifft:Ap,rfft:vp,irfft:xp},uh={hammingWindow:mc,hannWindow:yc,frame:gc,stft:Ac},dh={flipLeftRight:bc,grayscaleToRGB:vc,resizeNearestNeighbor:Dc,resizeBilinear:Oc,rotateWithOffset:wc,cropAndResize:xc,nonMaxSuppression:Ic,nonMaxSuppressionAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let i=zi(e,"boxes","nonMaxSuppressionAsync"),s=zi(t,"scores","nonMaxSuppressionAsync"),o=kc(i,s,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l=await Promise.all([i.data(),s.data()]),u=l[0],d=l[1],{selectedIndices:p}=Nc(u,d,n,a,r);return i!==e&&i.dispose(),s!==t&&s.dispose(),Tp(p,"int32")},nonMaxSuppressionWithScore:_c,nonMaxSuppressionWithScoreAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,i=0){let s=zi(e,"boxes","nonMaxSuppressionAsync"),o=zi(t,"scores","nonMaxSuppressionAsync"),l=kc(s,o,n,a,r,i);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;let u=await Promise.all([s.data(),o.data()]),d=u[0],p=u[1],{selectedIndices:c,selectedScores:h}=Rc(d,p,n,a,r,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:Tp(c,"int32"),selectedScores:Tp(h)}},nonMaxSuppressionPadded:Pc,nonMaxSuppressionPaddedAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,i=!1){let s=zi(e,"boxes","nonMaxSuppressionAsync"),o=zi(t,"scores","nonMaxSuppressionAsync"),l=kc(s,o,n,a,r,null),u=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,[c,h]=await Promise.all([s.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Tc(c,h,u,d,p,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:Tp(f,"int32"),validOutputs:nu(m,"int32")}},threshold:zc,transform:Lc},ph={bandPart:Wc,gramSchmidt:Bc,qr:Gc},ch={absoluteDifference:jc,computeWeightedLoss:Hc,cosineDistance:qc,hingeLoss:Xc,huberLoss:Kc,logLoss:Zc,meanSquaredError:Yc,sigmoidCrossEntropy:Jc,softmaxCrossEntropy:Qc},hh={sparseFillEmptyRows:eh,sparseReshape:th,sparseSegmentMean:nh,sparseSegmentSum:ah},fh={stringNGrams:rh,stringSplit:ih,stringToHashBucketFast:sh,staticRegexReplace:oh},mh={};g(mh,{Serializable:()=>yh,SerializationMap:()=>gh,registerClass:()=>Ah});var yh=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},gh=class{constructor(){this.classNameMap={}}static getMap(){return null==gh.instance&&(gh.instance=new gh),gh.instance}static register(e){gh.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Ah(e){Z(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Z("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Z(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),gh.register(e)}var xh=class extends yh{minimize(e,t=!1,n){let{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Qs(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Fu(e,t)}dispose(){null!=this.iterations_&&Qs(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:nu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(xh,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var bh=class extends xh{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ni.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Ni.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Js((()=>zl(a).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Js((()=>zl(a).variable(!1)))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let i=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;Js((()=>{let e=co(mo(i,this.rho),mo(ru(r),1-this.rho)),t=mo(fo(au(co(s,this.epsilon)),au(co(i,this.epsilon))),r),n=co(mo(s,this.rho),mo(ru(t),1-this.rho));i.assign(e),s.assign(n);let o=co(mo(t,-this.learningRate),a);a.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Qs(this.accumulatedGrads.map((e=>e.variable))),Qs(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},vh=class extends xh{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Ni.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Js((()=>dl(a.shape,this.initialAccumulatorValue).variable(!1)))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let i=this.accumulatedGrads[n].variable;Js((()=>{let e=co(i,ru(r));i.assign(e);let t=co(mo(fo(r,au(co(e,Ni.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Qs(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},wh=class extends xh{static get className(){return"Adam"}constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Js((()=>{this.accBeta1=nu(t).variable(),this.accBeta2=nu(n).variable()})),null==a&&(this.epsilon=Ni.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Js((()=>{let n=Lu(1,this.accBeta1),a=Lu(1,this.accBeta2);t.forEach(((t,r)=>{let i=Ni.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Js((()=>zl(i).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:Js((()=>zl(i).variable(!1)))});let s=Array.isArray(e)?e[r].tensor:e[t];if(null==s)return;let o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=co(mo(o,this.beta1),mo(s,1-this.beta1)),d=co(mo(l,this.beta2),mo(ru(s),1-this.beta2)),p=fo(u,n),c=fo(d,a);o.assign(u),l.assign(d);let h=co(mo(fo(p,co(au(c),this.epsilon)),-this.learningRate),i);i.assign(h)})),this.accBeta1.assign(mo(this.accBeta1,this.beta1)),this.accBeta2.assign(mo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Qs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Qs(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Js((()=>{this.accBeta1.assign(tu(this.beta1,this.iterations_+1)),this.accBeta2.assign(tu(this.beta2,this.iterations_+1))}));let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},kh=class extends xh{static get className(){return"Adamax"}constructor(e,t,n,a=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Js((()=>{this.iteration=nu(0).variable(),this.accBeta1=nu(t).variable()})),null==a&&(this.epsilon=Ni.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Js((()=>{let n=Lu(1,this.accBeta1),a=fo(-this.learningRate,co(mo(this.iteration,this.decay),1));t.forEach(((t,r)=>{let i=Ni.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:zl(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:zl(i).variable(!1)});let s=Array.isArray(e)?e[r].tensor:e[t];if(null==s)return;let o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=co(mo(o,this.beta1),mo(s,1-this.beta1)),d=mo(l,this.beta2),p=yo(s),c=Ju(d,p);o.assign(u),l.assign(c);let h=co(mo(fo(a,n),fo(u,co(c,this.epsilon))),i);i.assign(h)})),this.iteration.assign(co(this.iteration,1)),this.accBeta1.assign(mo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Qs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Qs(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Ih=class extends xh{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let r=Ni.registeredVariables[t];Js((()=>{let e=co(mo(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=eo(nu(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Sh=class extends Ih{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=nu(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Ni.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:Js((()=>zl(a).variable(!1)))});let r=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&Js((()=>{let e,t=co(mo(this.m,r),i);e=this.useNesterov?co(mo(this.c,co(i,mo(t,this.m))),a):co(mo(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Qs(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Ch=class extends xh{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,a=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Ni.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Ni.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Js((()=>zl(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Js((()=>zl(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Js((()=>zl(a).variable(r)))});let i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;let s=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Js((()=>{let e=co(mo(s,this.decay),mo(ru(i),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,r=co(mo(t,this.decay),mo(i,1-this.decay)),l=fo(mo(i,this.learningRate),au(Lu(e,co(ru(r),this.epsilon)))),u=co(mo(o,this.momentum),l);s.assign(e),t.assign(r),o.assign(u);let d=Lu(a,u);a.assign(d)}else{let e=co(mo(s,this.decay),mo(ru(i),1-this.decay)),t=co(mo(o,this.momentum),fo(mo(i,this.learningRate),au(co(e,this.epsilon))));s.assign(e),o.assign(t);let n=Lu(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Qs(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Qs(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Qs(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},Nh=[bh,vh,wh,kh,Sh,Ch,Ih],Th={};function Rh(e){return new Promise((e=>setTimeout(e))).then(e)}g(Th,{CompositeArrayBuffer:()=>ji,browserFiles:()=>Mh,browserHTTPRequest:()=>Bh,concatenateArrayBuffers:()=>Qi,copyModel:()=>Ds,decodeWeights:()=>Ki,encodeWeights:()=>Xi,fromMemory:()=>Hh,fromMemorySync:()=>jh,getLoadHandlers:()=>ps,getModelArtifactsForJSON:()=>as,getModelArtifactsForJSONSync:()=>ns,getModelArtifactsInfoForJSON:()=>rs,getSaveHandlers:()=>ds,getWeightSpecs:()=>is,http:()=>Wh,isHTTPScheme:()=>zh,listModels:()=>Ps,loadWeights:()=>Ph,moveModel:()=>zs,registerLoadRouter:()=>us,registerSaveRouter:()=>ls,removeModel:()=>Os,weightsLoaderFactory:()=>Oh,withSaveHandler:()=>qh,withSaveHandlerSync:()=>Xh});var Eh=class{constructor(e){if(!Le().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Eh.URL_SCHEME)&&(e=e.slice(Eh.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=ji.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=ts(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await Rh((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Rh((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:rs(e)}}}};Eh.URL_SCHEME="downloads://";var $h=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==a.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});let i=as(a,(e=>this.loadWeights(e)));e(i)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{let r=new FileReader;r.onload=e=>{let t=e.target.result;n(t)},r.onerror=t=>a(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>es(e.name))),a={};for(let r of e)r.paths.forEach((e=>{let r=es(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}};function Mh(e){return new $h(e)}function Fh(e,t,n,a){var r;Z(null!=(r=e)&&Array.isArray(r)&&r.length>0,(()=>"promises must be a none empty array")),function(e,t){Z(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Z(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Z(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,a=null==a?1:a);let i=0;return Promise.all(e.map((r=>(r.then((r=>{let s=n+ ++i/e.length*(a-n);return t(s),r})),r))))}async function _h(e,t){null==t&&(t={});let n=null==t.fetchFunc?Le().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Fh(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Fh(r,t.onProgress,.5,1)}async function Ph(e,t="",n,a){return Oh((e=>_h(e,{requestInit:a})))(e,t,n)}function Oh(e){return async(t,n="",a)=>{let r=t.map((()=>!1)),i={},s=null!=a?a.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=Hi[l]*Q(e.shape),d=()=>{r[t]=!0,null==i[t]&&(i[t]=[]),i[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=a?a.forEach(((t,n)=>{t===e.name&&(d(),s[n]=!0)})):d(),o.push(e.name),n+=u}))})),!s.every((e=>e))){let e=a.filter(((e,t)=>!s[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let d=await e(u),p={},c=0;return l.forEach((e=>{let n=t[e].paths.length,a=new ji(d.slice(c,c+n));i[e].forEach((e=>{let t=Ki(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)p[e]=t[e]})),c+=n})),p}}os.registerSaveRouter((e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Eh.URL_SCHEME)?function(e="model"){return new Eh(e)}(e.slice(Eh.URL_SCHEME.length)):null));var Dh=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Z("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Le().platform.fetch,Z(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Z(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=ts(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){let n=ji.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:rs(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,a=e.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return as(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,i=is(e),s=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),[i,await _h(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}};function zh(e){return null!=e.match(Dh.URL_SCHEME_REGEX)}Dh.URL_SCHEME_REGEX=/^https?:\/\//;var Lh=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>zh(e))):zh(e),n)return Wh(e,t)}return null};function Wh(e,t){return new Dh(e,t)}function Bh(e,t){return Wh(e,t)}os.registerSaveRouter(Lh),os.registerLoadRouter(Lh);var Vh=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},Uh=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},Gh=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function Hh(e,t,n,a){return new Gh(jh(...arguments))}function jh(e,t,n,a){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Vh(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Vh({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Vh({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a}))}function qh(e){return new Uh(e)}function Xh(e){return new Uh(e)}var Kh={};g(Kh,{confusionMatrix:()=>Yh});var Zh,Yh=Bi({confusionMatrix_:function(e,t,n){let a=zi(e,"labels","confusionMatrix"),r=zi(t,"predictions","confusionMatrix");Z(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Z(1===a.rank,(()=>`Expected the rank of labels to be 1, but got ${a.rank}`)),Z(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),Z(a.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),Z(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let i=dd(Bs(a,"int32"),n),s=dd(Bs(r,"int32"),n),o=Kp(i),l=Xo(o,s);return Bs(l,"int32")}}),Jh={};g(Jh,{draw:()=>rf,fromPixels:()=>sf,fromPixelsAsync:()=>tf,toPixels:()=>af});var Qh=!1;function ef(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,i=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=hr(rr,Ni.backendName)){let n={pixels:e},a={numChannels:t};return Ni.runKernel(rr,n,a)}let l,u,[d,p]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(s)l=e.getContext("2d").getImageData(0,0,d,p).data;else if(a||n)l=e.data;else if(i||r||o){if(null==Zh)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Zh=new OffscreenCanvas(1,1).getContext("2d")}else Zh=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Zh.canvas.width=d,Zh.canvas.height=p,Zh.drawImage(e,0,0,d,p),l=Zh.getImageData(0,0,d,p).data}if(4===t)u=new Int32Array(l);else{let e=d*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Ep(u,[p,d,t],"int32")}async function tf(e,t=3){let n=null;if(Le().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ef(n,t)}function nf(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function af(e,t){let n=zi(e,"img","toPixels");if(!(e instanceof ri)){let e=n;n=Bs(e,"int32"),e.dispose()}nf(n);let[a,r]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2],s=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*a*4);for(let e=0;e<a*r;++e){let t=[0,0,0,255];for(let a=0;a<i;a++){let r=s[e*i+a];if("float32"===n.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===i?(t[0]=r*o,t[1]=r*o,t[2]=r*o):t[a]=r*o}let a=4*e;l[a+0]=Math.round(t[0]),l[a+1]=Math.round(t[1]),l[a+2]=Math.round(t[2]),l[a+3]=Math.round(t[3])}if(null!=t){Qh||(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Qh=!0),t.width=r,t.height=a;let e=t.getContext("2d"),n=new ImageData(l,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function rf(e,t,n){let a=zi(e,"img","draw");if(!(e instanceof ri)){let e=a;a=Bs(e,"int32"),e.dispose()}nf(a),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);let r={image:a},i={canvas:t,options:n};Ni.runKernel(Wt,r,i)}var sf=Bi({fromPixels_:ef}),of={};function lf(e,t){let n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===Q(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,i=r[r.length-1],s=1;for(let e=0;e<r.length-1;++e)s*=r[e];let o=e.shape,l=r.slice();l.pop();let u=1;for(let e=i;e<n;++e)u*=o[e],l.push(o[e]);let d=[...Se(e.shape).map((e=>e/u)),1].slice(0,i);return[l,s,u,d]}g(of,{prepareAndValidate:()=>lf});var uf={};g(uf,{assertParamsValid:()=>cf,computeFlatOffset:()=>Sf,computeOutShape:()=>ff,getNormalizedAxes:()=>Af,isSliceContinous:()=>If,maskToAxes:()=>hf,parseSliceParams:()=>Cf,sliceInfo:()=>Nf,startForAxis:()=>wf,startIndicesWithElidedDims:()=>xf,stopForAxis:()=>kf,stopIndicesWithElidedDims:()=>bf,stridesForAxis:()=>vf,stridesWithElidedDims:()=>mf});var df=-2,pf=-1;function cf(e,t,n){let a=e.shape.length;Z(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),Z(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let r=0;r<a;++r)Z(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function hf(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ff(e,t,n){let a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function mf(e,t,n,a){let r=[...e];for(let e=r.length;e<a.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function yf(e,t,n){return n<=e?n:n-(t-1)}function gf(e,t){let n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Af(e,t,n,a,r,i,s,o,l){let u=e.length,d=new Array(u),p=new Array(u),c=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;d=xf(s,l,u,a,e),p=bf(o,l,u,r,e),c=mf(i,l,u,e)}else for(let t=0;t<u;t++)d[t]=wf(s,a,i,e,t,l),p[t]=kf(o,r,i,e,t,l),c[t]=vf(i,t,l);return{begin:d,end:p,strides:c}}function xf(e,t,n,a,r){let i=[...r],s=gf(n,t);for(let r=0;r<i.length;r++)if(s.indexOf(r)>-1)i[r]=0;else{let s=yf(t,n,r),o=a[s];e&1<<s&&(o=0),i[r]=o}return i}function bf(e,t,n,a,r){let i=[...r],s=gf(n,t);for(let r=0;r<i.length;r++)if(s.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{let s=yf(t,n,r),o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){let t=r[e];i[e]<0&&(i[e]+=t),i[e]=G(0,i[e],r[e])}return i}function vf(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function wf(e,t,n,a,r,i){let s=t[r],o=n[r]||1;(e&1<<r||i&1<<r||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=a[r];return s<0&&(s+=l),s=G(0,s,l-1),s}function kf(e,t,n,a,r,i){let s=t[r],o=n[r]||1;(e&1<<r||i&1<<r||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=a[r];return s<0&&(s+=l),s=o>0?G(0,s,l):G(-1,s,l-1),s}function If(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Sf(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Cf(e,t,n){let a,r,i=e.shape.length;return a="number"==typeof t?[t,...new Array(i-1).fill(0)]:t.length<i?t.concat(new Array(i-t.length).fill(0)):t.slice(),a.forEach((e=>{Z(-1!==e,(()=>"slice() does not support negative begin indexing."))})),r=null==n?new Array(i).fill(-1):"number"==typeof n?[n,...new Array(i-1).fill(-1)]:n.length<i?n.concat(new Array(i-n.length).fill(-1)):n,r=r.map(((t,n)=>t>=0?t:(Z(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,r]}function Nf(e,t,n,a,r,i,s,o,l){let u;if(null==a?(u=new Array(t.length),u.fill(1)):u=a,null!=s&&s&s-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<p.dims;e++)d&&1<<e&o&&p.numAddAxisAfterEllipsis++,1<<e&s&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);let c={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(df),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(pf),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,c);let h=!0,f=!0,m=!0,y=[],g=[];for(let t=0;t<e.length;++t){if(0===c.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(c.shrinkAxisMask&1<<t),a=e[t];if(-1===a){y.push(n?1:-1);continue}let r=[c.beginMask&1<<t,c.endMask&1<<t],i=[c.strides[t]>0?0:-1,c.strides[t]>0?a:a-1];if(n&&c.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===c.strides[t];let s=!!(c.beginMask&1<<t&&c.endMask&1<<t);if(c.beginValid&&c.endValid){if(n){let e=c.begin[t]<0?a+c.begin[t]:c.begin[t];if(c.begin[t]=e,c.end[t]=c.begin[t]+1,e<0||e>=a)throw Error(`slice index ${c.begin[t]} of dimension ${t} out of bounds.`)}else c.begin[t]=Tf(c.begin[t],0,c.strides[t],a,r,i),c.end[t]=Tf(c.end[t],1,c.strides[t],a,r,i);let e=1===c.strides[t]&&0===c.begin[t]&&c.end[t]===a;h=h&&e,f=f&&(0===t&&1===c.strides[t]||e)}else h=h&&1===c.strides[t]&&s,f=f&&(0===t&&1===c.strides[t]||s);let o,l=!1;if(c.beginValid&&c.endValid?(o=c.end[t]-c.begin[t],l=!0):n?(o=1,l=!0):s&&a>=0&&(o=c.strides[t]<0?-a:a,l=!0),l){let e;e=0===o||o<0!=c.strides[t]<0?0:Math.trunc(o/c.strides[t])+(o%c.strides[t]!=0?1:0),y.push(e)}else y.push(-1)}for(let e=0;e<c.finalShapeGatherIndices.length;++e){let t=c.finalShapeGatherIndices[e];t>=0?g.push(y[t]):t===df&&g.push(1)}return{finalShapeSparse:g.filter(((e,t)=>c.finalShapeGatherIndices[t]!==df)),finalShape:g,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:c.begin,end:c.end,strides:c.strides}}function Tf(e,t,n,a,r,i){if(r[t])return n>0?i[t]:i[t+1&1];{let t=e<0?a+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}var Rf="4.7.0",Ef=class{static sgd(e){return new Ih(e)}static momentum(e,t,n=!1){return new Sh(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new Ch(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new wh(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new bh(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new kh(e,t,n,a,r)}static adagrad(e,t=.1){return new vh(e,t)}},$f=Ef,Mf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Ff(){return new Promise((e=>Mf((()=>e()))))}var _f,Pf={};function Of(e,t){let n=e[0].length;e.forEach(((e,t)=>{Z(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Z(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let a=e[0];e.forEach(((e,r)=>{for(let i=0;i<n;i++)Z(i===t||e[i]===a[i],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${r}.`))}))}function Df(e,t){let n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}function zf(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${a.length}`);for(let r=1;r<n.length;++r){let i=n[r],s=a[a.length-n.length+r],o=a[s];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${i} but shape[${r+e}] = ${o}`)}else a[s]=i}return a}function Lf(e){let t={FIRST_DIM_SIZE:_f.FIRST_DIM_SIZE,VALUE_ROWIDS:_f.VALUE_ROWIDS,ROW_LENGTHS:_f.ROW_LENGTHS,ROW_SPLITS:_f.ROW_SPLITS,ROW_LIMITS:_f.ROW_LIMITS,ROW_STARTS:_f.ROW_STARTS},n=[];for(let a of e){if(!(a in t))break;n.push(t[a])}return n}function Wf(e){return 0===e.length?0:e[0]===_f.FIRST_DIM_SIZE?e.length-1:e.length}function Bf(e,t){if(null==e||null==t)return;let n=e.length,a=t.length;if(n>=a)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${a})`);for(let r=0;r<Math.min(n,a-1);++r){let n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${a}`)}}g(Pf,{ERF_A1:()=>Qf,ERF_A2:()=>em,ERF_A3:()=>tm,ERF_A4:()=>nm,ERF_A5:()=>am,ERF_P:()=>Jf,PARALLELIZE_THRESHOLD:()=>Vf,RowPartitionType:()=>_f,SELU_SCALE:()=>Yf,SELU_SCALEALPHA:()=>Zf,applyActivation:()=>lc,assertAndGetBroadcastShape:()=>Pl,assertAxesAreInnerMostDims:()=>Kl,assertParamsConsistent:()=>Of,assignToTypedArray:()=>um,axesAreInnerMostDims:()=>Hl,calculateShapes:()=>Dp,checkEinsumDimSizes:()=>Am,checkPadOnDimRoundingMode:()=>Uo,combineLocations:()=>jl,combineRaggedTensorToTensorShapes:()=>zf,complexWithEvenIndex:()=>sm,complexWithOddIndex:()=>om,computeConv2DInfo:()=>Mo,computeConv3DInfo:()=>Fo,computeDefaultPad:()=>_o,computeDilation2DInfo:()=>Ro,computeOptimalWindowSize:()=>Uf,computeOutAndReduceShapes:()=>ql,computeOutShape:()=>Df,computePool2DInfo:()=>Eo,computePool3DInfo:()=>$o,convertConv2DDataFormat:()=>Vo,decodeEinsumEquation:()=>ym,eitherStridesOrDilationsAreOne:()=>Wo,expandShapeToKeepDim:()=>Xl,exponent:()=>pm,exponents:()=>dm,fromStringArrayToUint8:()=>Wm,fromUint8ToStringArray:()=>Lm,getAxesPermutation:()=>Zl,getBroadcastDims:()=>Fl,getComplexWithIndex:()=>lm,getEinsumComputePath:()=>xm,getEinsumPermutation:()=>gm,getFusedBiasGradient:()=>oc,getFusedDyActivation:()=>sc,getImageCenter:()=>Gf,getInnerMostAxes:()=>Jl,getPermuted:()=>jf,getRaggedRank:()=>Wf,getReductionAxes:()=>_l,getReshaped:()=>Hf,getReshapedPermuted:()=>qf,getRowPartitionTypesHelper:()=>Lf,getSliceBeginCoords:()=>Xf,getSliceSize:()=>Kf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>km,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Im,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Sm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Tm,getSparseReshapeInputOutputMismatchErrorMessage:()=>Em,getSparseReshapeInputOutputMultipleErrorMessage:()=>Rm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Cm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Nm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>_m,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>$m,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Mm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Fm,getUndoAxesPermutation:()=>Yl,isIdentityPermutation:()=>bm,log:()=>dr,mergeRealAndImagArrays:()=>rm,prepareAndValidate:()=>lf,prepareSplitSize:()=>wm,segment_util:()=>Pm,shouldFuse:()=>uc,slice_util:()=>uf,splitRealAndImagArrays:()=>im,stridesOrDilationsArePositive:()=>Bo,tupleValuesAreOne:()=>Lo,upcastType:()=>fi,validateDefaultValueShape:()=>Bf,validateInput:()=>Op,validateUpdateShape:()=>Pp,warn:()=>ur}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(_f||(_f={}));var Vf=30;function Uf(e){return e<=Vf?e:Ie(e,Math.floor(Math.sqrt(e)))}function Gf(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Hf(e,t,n,a=!0){let r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function jf(e,t,n=!0){let a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{let n=[],r=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?r.push(a):n.push(a);a.push(...n),a.push(0),a.push(...r)}return a}function qf(e,t,n,a=!0){let r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Xf(e,t){let n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function Kf(e,t,n){let a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var Zf=1.7580993408473768,Yf=1.0507009873554805,Jf=.3275911,Qf=.254829592,em=-.284496736,tm=1.421413741,nm=-1.453152027,am=1.061405429;function rm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function im(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function sm(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function om(e){let t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function lm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function um(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function dm(e,t){let n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let i=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(i),a[r]=Math.sin(i)}return{real:n,imag:a}}function pm(e,t,n){let a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}var cm="->",hm=/->/g,fm=",",mm="...";function ym(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(hm,"").length)/cm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${cm}").`);let[a,r]=e.split(cm);Z(-1===a.indexOf(mm),(()=>`The ellipsis notation ("${mm}") is not supported yet.`));let i=a.split(fm),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<r.length;++e){let t=r[e];if(!i.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){let t=a[e];-1===o.indexOf(t)&&t!==fm&&o.push(t)}let l=new Array(i.length);for(let e=0;e<s;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<i[e].length;++t)l[e].push(o.indexOf(i[e][t]))}let u=o.length,d=[];for(let e=r.length;e<u;++e)d.push(e);return{allDims:o,summedDims:d,idDims:l}}function gm(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Am(e,t,n){let a=new Array(e);for(let e=0;e<n.length;++e){let r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=r[n]:Z(a[t[e][n]]===r[n],(()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function xm(e,t){let n=e,a=[],r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)a.push([]);let i=[];for(let e=0;e<n.length;++e){let r=vm(t,n[e]);for(let t of r)-1===i.indexOf(t)&&(a[e].push(t),i.push(t))}return{path:n,steps:a}}function bm(e){return e.every(((e,t)=>e===t))}function vm(e,t){let n=[];for(let a=0;a<e.length;++a)(0===e[a].length||-1!==e[a].indexOf(t)||-1===t)&&n.push(a);return n}function wm(e,t,n=0){let a=[];if("number"==typeof t)Z(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{Z(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let r=t.indexOf(-1);if(-1!==r){let a=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-a}Z(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function km(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Im(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Sm(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Cm(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Nm(e,t){return`size ${e} must be non-negative, not ${t}`}function Tm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Rm(e,t){return`Input to reshape is a SparseTensor with ${Q(e)}\n  dense values, but the requested shape requires a multiple of ${Q(t)}. inputShape=${e} outputShape= ${t}`}function Em(e,t){return`Input to reshape is a tensor with ${Q(e)} dense values, but the requested shape has ${Q(t)}. inputShape=${e} outputShape=${t}`}function $m(){return"segment ids must be >= 0"}function Mm(){return"segment ids are not increasing"}function Fm(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function _m(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Pm={};function Om(e,t){let n,a=!1;for(e<=Vf?(n=e,a=!0):n=Ie(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=Ie(e,n+1);return n}function Dm(e,t,n){let a=[],r=e.length;for(let i=0;i<r;i++)i!==t?a.push(e[i]):a.push(n);return a}function zm(e,t,n,a){let r=t.shape.length,i=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>i)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${i}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let s=e.shape[n],o=[],l=1,u=1,d=1;for(let t=0;t<a;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=a;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:s,outputShape:o}}function Lm(e){try{return e.map((e=>Ur(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Wm(e){return e.map((e=>Vr(e)))}g(Pm,{collectGatherOpShapeInfo:()=>zm,computeOutShape:()=>Dm,segOpComputeOptimalWindowSize:()=>Om});var Bm,Vm,Um={};g(Um,{nonMaxSuppressionV3Impl:()=>Nc,nonMaxSuppressionV4Impl:()=>Tc,nonMaxSuppressionV5Impl:()=>Rc,whereImpl:()=>jp}),function(){for(let e of Nh)Ah(e)}(),Le().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Bm||(Bm={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(Vm||(Vm={}));var Gm={};function Hm(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Gm[e]=n}function jm(e){return Gm[e]}function qm(e){delete Gm[e]}function Xm(e,t,n,a,r){let i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){let e=i.inputIndexStart,s=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===i.type)return Km(t.inputNames[o],n,a,r);if("tensors"===i.type){let i=t.inputs.slice(e,s);return t.inputNames.slice(e,s).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=i[t])||void 0===n?void 0:n.op)})).map((e=>Km(e,n,a,r)))}let l=Km(t.inputNames[o],n,a,r),u=l.dataSync();return"number"===i.type?u[0]:wr.toNestedArray(l.shape,u)}let s=t.attrParams[e];return s&&s.value}function Km(e,t,n,a){let[r,i]=Qm(e,n);if(null!=a){let e=a.getHashTableHandleByName(r);if(null!=e)return e}let s=n.currentContextIds.find((e=>!!t[Jm(r,e)]));return void 0!==s?t[Jm(r,s)][i]:void 0}function Zm(e,t,n){return t[Jm(e,n.currentContextId)]}function Ym(e,t){let[n,a,r]=Qm(e,t);return[Jm(n,t&&t.currentContextId),a,r]}function Jm(e,t){return t?`${e}-${t}`:e}function Qm(e,t){if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let n=t.parseNodeNameCache.get(e);if(null!=n)return n}let a,r=e.split(":");if(1===r.length)a=[e,0,void 0];else{let e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function ey(e,t,n){let a=Xm("pad",e,t,n);if("explicit"===a){a=Xm("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function ty(e){return e.kept?e:Vs(e)}var ny={};g(ny,{json:()=>ay});var ay=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ry={};g(ry,{json:()=>iy});var iy=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],sy={};g(sy,{json:()=>oy});var oy=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],ly={};g(ly,{json:()=>uy});var uy=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],dy={};g(dy,{json:()=>py});var py=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],cy={};g(cy,{json:()=>hy});var hy=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fy={};g(fy,{json:()=>my});var my=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],yy={};g(yy,{json:()=>gy});var gy=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Ay={};g(Ay,{json:()=>xy});var xy=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],by={};g(by,{json:()=>vy});var vy=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],wy={};g(wy,{json:()=>ky});var ky=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Iy={};g(Iy,{json:()=>Sy});var Sy=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Cy={};g(Cy,{json:()=>Ny});var Ny=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Ty={};g(Ty,{json:()=>Ry});var Ry=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Ey={};g(Ey,{json:()=>$y});var $y=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],My={};g(My,{json:()=>Fy});var Fy=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],_y={};g(_y,{json:()=>Py});var Py=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Oy={};g(Oy,{json:()=>Dy});var Dy=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],zy={};g(zy,{json:()=>Ly});var Ly=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Wy=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[ny,ry,sy,ly,dy,cy,fy,yy,Ay,by,wy,Iy,Cy,Ty,Ey,My,_y,Oy,zy].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,a=[],r=[],i=[],s=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):(null==t.input||0===t.input.length)&&i.push(e[t.name]),e)),{}),o=[],l=[],u={},d={};null!=t&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let p=Object.keys(s);p.forEach((e=>{let t=s[e];t.inputNames.forEach(((e,n)=>{let[a,,r]=Ym(e),i=s[a];if(null!=i.outputs){let e=i.outputs.indexOf(r);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))})),0===Object.keys(d).length?p.forEach((e=>{let t=s[e];0===t.children.length&&l.push(t)})):Object.keys(d).forEach((e=>{let[t]=Ym(e),n=s[t];null!=n&&(n.signatureKey=d[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=Ym(e),n=s[t];n&&(n.signatureKey=u[e],o.push(n))})):o=a;let c={};null!=e.library&&null!=e.library.function&&(c=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let h={nodes:s,inputs:o,outputs:l,weights:r,placeholders:a,signature:t,functions:c};return i.length>0&&(h.initNodes=i),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=jm(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let a,r=n.type;switch(n.type){case"string":a=Vy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Vy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Jy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Jy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Gy(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Gy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Yy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Yy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Uy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Uy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=eg(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=eg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Zy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Zy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Qy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Qy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=qy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=qy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Xy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Xy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=jy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=jy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let r=[],i=[];e.signature.inputArg.forEach((e=>{let[t]=Ym(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Hy(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n})),Object.keys(a).forEach((e=>{let t=a[e];t.inputNames.forEach(((e,n)=>{let[r,,i]=Ym(e),s=a[r];if(null!=s.outputs){let e=s.outputs.indexOf(i);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))}));let s=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=Ym(s[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,i.push(r))}));let o=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:i,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function By(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Le().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Vy(e,t,n,a=!1){let r=e[t];return null!=r?By(r.s,a):n}function Uy(e,t,n){let a=e[t];return a?a.b:n}function Gy(e,t,n){let a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"==typeof r?r:parseInt(r,10)}function Hy(e){switch("string"==typeof e&&(e=Bm[e]),e){case Bm.DT_FLOAT:case Bm.DT_HALF:return"float32";case Bm.DT_INT32:case Bm.DT_INT64:case Bm.DT_INT8:case Bm.DT_UINT8:return"int32";case Bm.DT_BOOL:return"bool";case Bm.DT_DOUBLE:return"float32";case Bm.DT_STRING:return"string";default:return null}}function jy(e,t,n){let a=e[t];return a&&a.func?a.func.name:n}function qy(e,t,n){let a=e[t];return a&&a.type?Hy(a.type):n}function Xy(e,t,n){let a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>Hy(e))):n}function Ky(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function Zy(e,t,n){let a=e[t];return a&&a.shape?Ky(a.shape):n}function Yy(e,t,n){let a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Jy(e,t,n,a=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>By(e,a))):n}function Qy(e,t,n){let a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>Ky(e))):n}function eg(e,t,n){let a=e[t];return a&&a.list&&a.list.b?a.list.b:n}var tg={};function ng(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){wr.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let a=0;a<e.length;a++){let r=e[a],i=t[a];wr.assert(r<0||i<0||r===i,(()=>n+` Shapes ${e} and ${t} must match`))}}}function ag(e){return!("number"==typeof e||e.some((e=>e<0)))}function rg(e,t,n){let a=ig(e,n),r=!ag(a);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&t.forEach((e=>{a=ig(e.shape,a)})),!ag(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function ig(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let a=0;a<e.length;++a){let r=e[a],i=t[a];if(r>=0&&i>=0&&r!==i)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[a]=r>=0?r:i}return n}g(tg,{OP_SCOPE_SUFFIX:()=>Wi,abs:()=>yo,acos:()=>go,acosh:()=>Ao,add:()=>co,addN:()=>xo,all:()=>bo,any:()=>vo,argMax:()=>wo,argMin:()=>ko,asin:()=>Io,asinh:()=>So,atan:()=>Co,atan2:()=>No,atanh:()=>To,avgPool:()=>Ho,avgPool3d:()=>jo,basicLSTMCell:()=>Jo,batchNorm:()=>tl,batchNorm2d:()=>nl,batchNorm3d:()=>al,batchNorm4d:()=>rl,batchToSpaceND:()=>Qo,bincount:()=>il,bitwiseAnd:()=>sl,booleanMaskAsync:()=>Xp,broadcastArgs:()=>ol,broadcastTo:()=>ll,buffer:()=>Ws,cast:()=>Bs,ceil:()=>ul,clipByValue:()=>pl,clone:()=>Vs,complex:()=>Vi,concat:()=>qo,concat1d:()=>cl,concat2d:()=>hl,concat3d:()=>fl,concat4d:()=>ml,conv1d:()=>gl,conv2d:()=>yl,conv2dTranspose:()=>xl,conv3d:()=>bl,conv3dTranspose:()=>wl,cos:()=>kl,cosh:()=>Il,cosineWindow:()=>nc,cumprod:()=>Sl,cumsum:()=>Cl,denseBincount:()=>Nl,depthToSpace:()=>Tl,depthwiseConv2d:()=>Rl,diag:()=>El,dilation2d:()=>$l,div:()=>fo,divNoNan:()=>Ll,dot:()=>Wl,dropout:()=>ec,einsum:()=>Bl,elu:()=>Vl,enclosingPowerOfTwo:()=>tc,ensureShape:()=>Ul,equal:()=>Ol,erf:()=>Gl,euclideanNorm:()=>lu,exp:()=>uu,expandDims:()=>du,expm1:()=>pu,eye:()=>hu,fft:()=>gp,fill:()=>dl,floor:()=>fu,floorDiv:()=>ho,fused:()=>rc,gather:()=>mu,gatherND:()=>Qp,greater:()=>yu,greaterEqual:()=>gu,ifft:()=>Ap,imag:()=>Au,image:()=>dh,inTopKAsync:()=>ac,irfft:()=>xp,isFinite:()=>xu,isInf:()=>bu,isNaN:()=>vu,leakyRelu:()=>wu,less:()=>ku,lessEqual:()=>Iu,linalg:()=>ph,linspace:()=>Su,localResponseNormalization:()=>Cu,log:()=>Nu,log1p:()=>Tu,logSigmoid:()=>zu,logSoftmax:()=>Wu,logSumExp:()=>Bu,logicalAnd:()=>Vu,logicalNot:()=>Uu,logicalOr:()=>Gu,logicalXor:()=>Hu,losses:()=>ch,lowerBound:()=>Xu,matMul:()=>Xo,max:()=>Ql,maxPool:()=>Ku,maxPool3d:()=>Zu,maxPoolWithArgmax:()=>Yu,maximum:()=>Ju,mean:()=>Qu,meshgrid:()=>nd,min:()=>eu,minimum:()=>ad,mirrorPad:()=>rd,mod:()=>id,moments:()=>sd,movingAverage:()=>Zp,mul:()=>mo,multiRNNCell:()=>od,multinomial:()=>ld,neg:()=>Ou,norm:()=>ou,notEqual:()=>ud,oneHot:()=>dd,ones:()=>td,onesLike:()=>pd,op:()=>Bi,outerProduct:()=>cd,pad:()=>hd,pad1d:()=>fd,pad2d:()=>md,pad3d:()=>yd,pad4d:()=>gd,pool:()=>xd,pow:()=>tu,prelu:()=>bd,print:()=>Us,prod:()=>vd,raggedGather:()=>wd,raggedRange:()=>kd,raggedTensorToTensor:()=>Id,rand:()=>Sd,randomGamma:()=>Ud,randomNormal:()=>Gd,randomStandardNormal:()=>Hd,randomUniform:()=>jd,randomUniformInt:()=>qd,range:()=>Xd,real:()=>Kd,reciprocal:()=>Zd,relu:()=>Yd,relu6:()=>Jd,reshape:()=>Go,reverse:()=>Qd,reverse1d:()=>ep,reverse2d:()=>tp,reverse3d:()=>np,reverse4d:()=>ap,rfft:()=>vp,round:()=>rp,rsqrt:()=>ip,scalar:()=>nu,scatterND:()=>Yp,searchSorted:()=>qu,selu:()=>sp,separableConv2d:()=>op,setdiff1dAsync:()=>lp,sigmoid:()=>Ko,sign:()=>up,signal:()=>uh,sin:()=>dp,sinh:()=>pp,slice:()=>Zo,slice1d:()=>cp,slice2d:()=>hp,slice3d:()=>fp,slice4d:()=>mp,softmax:()=>yp,softplus:()=>Du,spaceToBatchND:()=>Ad,sparse:()=>hh,sparseToDense:()=>Jp,spectral:()=>lh,split:()=>bp,sqrt:()=>au,square:()=>ru,squaredDifference:()=>wp,squeeze:()=>kp,stack:()=>Ip,step:()=>Sp,stridedSlice:()=>Cp,string:()=>fh,sub:()=>Lu,sum:()=>iu,tan:()=>Np,tanh:()=>Yo,tensor:()=>Gi,tensor1d:()=>Tp,tensor2d:()=>Rp,tensor3d:()=>Ep,tensor4d:()=>$p,tensor5d:()=>Mp,tensor6d:()=>Fp,tensorScatterUpdate:()=>zp,tile:()=>cu,topk:()=>Lp,transpose:()=>Kp,truncatedNormal:()=>Wp,unique:()=>Bp,unsortedSegmentSum:()=>Vp,unstack:()=>Up,upperBound:()=>Gp,variable:()=>Hp,where:()=>Dl,whereAsync:()=>qp,zeros:()=>ed,zerosLike:()=>zl});var sg=class{get id(){return this.idTensor.id}constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);ng(t,e.shape,"TensorList shape mismatch: "),eo(e)})),this.idTensor=nu(0),this.maxNumElements=a,eo(this.idTensor)}copy(){return new sg([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ng(e,this.elementShape,"TensorList shape mismatch: ");let a=rg(this.elementShape,this.tensors,e);return Js((()=>{let e=this.tensors.map((e=>Go(e,a)));return Ip(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=rg(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,ng(a.shape,e,"TensorList shape mismatch: "),Go(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ng(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");eo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new sg([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);ng(this.tensors[e].shape,t,"TensorList shape mismatch: ");let a=rg(this.elementShape,this.tensors,t);return Go(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ng(this.elementShape,t.shape,"TensorList shape mismatch: "),eo(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ng(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let a=rg(this.elementShape,this.tensors,n);return 0===e.length?Gi([],[0].concat(a)):Js((()=>{let t=e.map((e=>Go(this.tensors[e],a)));return Ip(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ng(this.elementShape,t,"TensorList shape mismatch: ");let n=rg(this.elementShape,this.tensors,t);return 0===this.size()?Gi([],[0].concat(n)):Js((()=>{let e=this.tensors.map((e=>Go(e,n)));return qo(e,0)}))}},og=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let a=Xm("thenBranch",e,t,n),r=Xm("elseBranch",e,t,n),i=Xm("cond",e,t,n),s=Xm("args",e,t,n);return(await i.data())[0]?n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let a=Xm("body",e,t,n),r=Xm("cond",e,t,n),i=Xm("args",e,t,n),s=await n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map((e=>e.id)),l=await s[0].data();s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=i;for(;l[0];){let e=u;u=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let i=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await i[0].data(),i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[ty(Xm("pred",e,t,n))];case"Switch":{let a=Xm("pred",e,t,n),r=Xm("data",e,t,n);return r.kept||(r=ty(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let a=e.inputNames.find((e=>void 0!==Km(e,t,n)));return a?[ty(Km(a,t,n))]:void 0}case"Enter":{let a=Xm("frameName",e,t,n),r=Xm("tensor",e,t,n);return n.enterFrame(a),[ty(r)]}case"Exit":{let a=Xm("tensor",e,t,n);return n.exitFrame(),[ty(a)]}case"NextIteration":{let a=Xm("tensor",e,t,n);return n.nextIteration(),[ty(a)]}case"TensorArrayV3":{let a=Xm("size",e,t,n),r=Xm("dtype",e,t,n),i=Xm("elementShape",e,t,n),s=Xm("dynamicSize",e,t,n),o=Xm("clearAfterRead",e,t,n),l=Xm("identicalElementShapes",e,t,n),u=Xm("name",e,t,n),d=new class{constructor(e,t,n,a,r,i,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=nu(0),eo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),ng(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,eo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Gi([],[0].concat(this.elementShape));let n=this.readMany(e);return ng(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Ip(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Gi([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return ng(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),qo(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Up(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=0===n?0:t.size/n,i=[];Js((()=>{t=Go(t,[1,n,r]);for(let n=0;n<e.length;++n){let s=[0,0===n?0:a[n-1],0],o=[1,e[n],r];i[n]=Go(Zo(t,s,o),this.elementShape)}return i}));let s=[];for(let t=0;t<e.length;t++)s[t]=t;this.writeMany(s,i)}}(u,r,a,i,l,s,o);return n.addTensorArray(d),[d.idTensor,nu(1)]}case"TensorArrayWriteV3":{let a=Xm("tensorArrayId",e,t,n),r=Xm("index",e,t,n),i=Xm("tensor",e,t,n),s=n.getTensorArray(a.id);return s.write(r,i),[s.idTensor]}case"TensorArrayReadV3":{let a=Xm("tensorArrayId",e,t,n),r=Xm("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{let a=Xm("tensorArrayId",e,t,n),r=Xm("indices",e,t,n),i=Xm("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,i)]}case"TensorArrayScatterV3":{let a=Xm("tensorArrayId",e,t,n),r=Xm("indices",e,t,n),i=Xm("tensor",e,t,n),s=n.getTensorArray(a.id);return s.scatter(r,i),[s.idTensor]}case"TensorArrayConcatV3":{let a=Xm("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),i=Xm("dtype",e,t,n);return[r.concat(i)]}case"TensorArraySplitV3":{let a=Xm("tensorArrayId",e,t,n),r=Xm("tensor",e,t,n),i=Xm("lengths",e,t,n),s=n.getTensorArray(a.id);return s.split(i,r),[s.idTensor]}case"TensorArraySizeV3":{let a=Xm("tensorArrayId",e,t,n);return[nu(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{let a=Xm("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let a=Xm("tensorListId",e,t,n),r=Xm("index",e,t,n),i=Xm("tensor",e,t,n),s=n.getTensorList(a.id);return s.setItem(r,i),[s.idTensor]}case"TensorListGetItem":{let a=Xm("tensorListId",e,t,n),r=Xm("index",e,t,n),i=Xm("elementShape",e,t,n),s=Xm("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{let a=Xm("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);let i=new sg([],n,e.dtype,a),s=Up(e,0);return t.forEach(((e,t)=>{i.setItem(e,s[t])})),i}(Xm("tensor",e,t,n),a,Xm("elementShape",e,t,n),Xm("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let a,r=Xm("elementShape",e,t,n),i=Xm("elementDType",e,t,n);a="TensorListReserve"===e.op?"numElements":"maxNumElements";let s=Xm(a,e,t,n),o=function(e,t,n,a){return new sg([],e,t,a)}(r,i,0,"TensorListReserve"===e.op?-1:s);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let a=Xm("tensorListId",e,t,n),r=Xm("indices",e,t,n),i=Xm("elementShape",e,t,n),s=Xm("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,s,i)]}case"TensorListStack":{let a=Xm("tensorListId",e,t,n),r=Xm("elementShape",e,t,n),i=Xm("elementDType",e,t,n),s=Xm("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,i,s)]}case"TensorListFromTensor":{let a=function(e,t,n){let a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);ng(e.shape.slice(1),t,"TensorList shape mismatch: ");let r=Up(e);return new sg(r,t,a)}(Xm("tensor",e,t,n),Xm("elementShape",e,t,n),Xm("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let a=Xm("tensorListId",e,t,n),r=n.getTensorList(a.id),i=Xm("dtype",e,t,n),s=Xm("elementShape",e,t,n);return[r.concat(i,s)]}case"TensorListPushBack":{let a=Xm("tensorListId",e,t,n),r=Xm("tensor",e,t,n),i=n.getTensorList(a.id);return i.pushBack(r),[i.idTensor]}case"TensorListPopBack":{let a=Xm("tensorListId",e,t,n),r=Xm("elementShape",e,t,n),i=Xm("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,i)]}case"TensorListSplit":{let a=Xm("tensor",e,t,n),r=Xm("elementShape",e,t,n),i=function(e,t,n){let a=0,r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${e.shape}`);let i=ig(e.shape.slice(1),n),s=0===a?0:e.size/a,o=Js((()=>{let n=[];e=Go(e,[1,a,s]);for(let a=0;a<t.length;++a){let o=[0,0===a?0:r[a-1],0],l=[1,t[a],s];n[a]=Go(Zo(e,o,l),i)}return e.dispose(),n})),l=new sg([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(a,Xm("lengths",e,t,n),r);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let a=Xm("tensorListId",e,t,n);return[nu(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{let a=Xm("tensorListId",e,t,n),r=Xm("size",e,t,n),i=n.getTensorList(a.id).resize(r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function lg(e,t,n){let[a,r]=Xm("fusedOps",e,t,n),i="biasadd"===a,s=!i,o="prelu"===r,l="fusedbatchnorm"===a,u=Xm("numArgs",e,t,n);if(i){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=Xm("strides",e,t,n),p=ey(e,t,n),c=Xm("dataFormat",e,t,n).toUpperCase(),h=Xm("dilations",e,t,n),[f,m]=Xm("args",e,t,n);return s&&(m=f,f=void 0),{stride:d,pad:p,dataFormat:c,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:Xm("leakyreluAlpha",e,t,n)}}function ug(e,t,n){return{boxes:Xm("boxes",e,t,n),scores:Xm("scores",e,t,n),maxOutputSize:Xm("maxOutputSize",e,t,n),iouThreshold:Xm("iouThreshold",e,t,n),scoreThreshold:Xm("scoreThreshold",e,t,n),softNmsSigma:Xm("softNmsSigma",e,t,n)}}var dg=async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{let r=Xm("keyDType",e,t,n),i=Xm("valueDType",e,t,n),s=new class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=nu(0),this.tensorMap=new Map,eo(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return nu(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Js((()=>{let e=Up(t),a=n.length,r=e.length;wr.assert(a===r,(()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${r} elements.`));for(let t=0;t<a;t++){let a=n[t],r=e[t];eo(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Js((()=>{let e=[];for(let a=0;a<n.length;a++){let r=n[a],i=this.findWithDefault(r,t);e.push(i)}return Ip(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(r,i);return a.addHashTable(e.name,s),[s.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let r=Xm("tableHandle",e,t,n,a),i=Xm("keys",e,t,n),s=Xm("values",e,t,n);return[await a.getHashTableById(r.id).import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{let r=Xm("tableHandle",e,t,n,a),i=Xm("keys",e,t,n),s=Xm("defaultValue",e,t,n);return[await a.getHashTableById(r.id).find(i,s)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=Xm("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function pg(e,t,n,a,r=Js){let i=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(Xm("a",e,t,n),Xm("b",e,t,n))];case"AddN":return[a.addN(Xm("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(Xm("a",e,t,n),Xm("b",e,t,n))];case"Mul":return[a.mul(Xm("a",e,t,n),Xm("b",e,t,n))];case"RealDiv":case"Div":return[a.div(Xm("a",e,t,n),Xm("b",e,t,n))];case"DivNoNan":return[a.divNoNan(Xm("a",e,t,n),Xm("b",e,t,n))];case"FloorDiv":return[a.floorDiv(Xm("a",e,t,n),Xm("b",e,t,n))];case"Sub":return[a.sub(Xm("a",e,t,n),Xm("b",e,t,n))];case"Minimum":return[a.minimum(Xm("a",e,t,n),Xm("b",e,t,n))];case"Maximum":return[a.maximum(Xm("a",e,t,n),Xm("b",e,t,n))];case"Pow":return[a.pow(Xm("a",e,t,n),Xm("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(Xm("a",e,t,n),Xm("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(Xm("x",e,t,n))];case"Acos":return[a.acos(Xm("x",e,t,n))];case"Acosh":return[a.acosh(Xm("x",e,t,n))];case"Asin":return[a.asin(Xm("x",e,t,n))];case"Asinh":return[a.asinh(Xm("x",e,t,n))];case"Atan":return[a.atan(Xm("x",e,t,n))];case"Atan2":return[a.atan2(Xm("x",e,t,n),Xm("y",e,t,n))];case"Atanh":return[a.atanh(Xm("x",e,t,n))];case"Ceil":return[a.ceil(Xm("x",e,t,n))];case"Complex":return[a.complex(Xm("real",e,t,n),Xm("imag",e,t,n))];case"Cos":return[a.cos(Xm("x",e,t,n))];case"Cosh":return[a.cosh(Xm("x",e,t,n))];case"Elu":return[a.elu(Xm("x",e,t,n))];case"Erf":return[a.erf(Xm("x",e,t,n))];case"Exp":return[a.exp(Xm("x",e,t,n))];case"Expm1":return[a.expm1(Xm("x",e,t,n))];case"Floor":return[a.floor(Xm("x",e,t,n))];case"Log":return[a.log(Xm("x",e,t,n))];case"Log1p":return[a.log1p(Xm("x",e,t,n))];case"Imag":return[a.imag(Xm("x",e,t,n))];case"Neg":return[a.neg(Xm("x",e,t,n))];case"Reciprocal":return[a.reciprocal(Xm("x",e,t,n))];case"Real":return[a.real(Xm("x",e,t,n))];case"Relu":return[a.relu(Xm("x",e,t,n))];case"Round":return[a.round(Xm("x",e,t,n))];case"Selu":return[a.selu(Xm("x",e,t,n))];case"Sigmoid":return[a.sigmoid(Xm("x",e,t,n))];case"Sin":return[a.sin(Xm("x",e,t,n))];case"Sign":return[a.sign(Xm("x",e,t,n))];case"Sinh":return[a.sinh(Xm("x",e,t,n))];case"Softplus":return[a.softplus(Xm("x",e,t,n))];case"Sqrt":return[a.sqrt(Xm("x",e,t,n))];case"Square":return[a.square(Xm("x",e,t,n))];case"Tanh":return[a.tanh(Xm("x",e,t,n))];case"Tan":return[a.tan(Xm("x",e,t,n))];case"ClipByValue":return[a.clipByValue(Xm("x",e,t,n),Xm("clipValueMin",e,t,n),Xm("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(Xm("x",e,t,n))];case"Rsqrt":return[a.rsqrt(Km(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(Xm("x",e,t,n),Xm("alpha",e,t,n))];case"Prelu":return[a.prelu(Xm("x",e,t,n),Xm("alpha",e,t,n))];case"IsNan":return[a.isNaN(Km(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(Km(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(Km(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return og(e,t,n);case"convolution":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"Conv1D":{let r=Xm("stride",e,t,n),i=Xm("pad",e,t,n),s=Xm("dataFormat",e,t,n).toUpperCase(),o=Xm("dilation",e,t,n);return[a.conv1d(Xm("x",e,t,n),Xm("filter",e,t,n),r,i,s,o)]}case"Conv2D":{let r=Xm("strides",e,t,n),i=ey(e,t,n),s=Xm("dataFormat",e,t,n).toUpperCase(),o=Xm("dilations",e,t,n);return[a.conv2d(Xm("x",e,t,n),Xm("filter",e,t,n),[r[1],r[2]],i,s,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:i,dataFormat:s,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:p}=lg(e,t,n);return[a.fused.conv2d({x:Xm("x",e,t,n),filter:Xm("filter",e,t,n),strides:[r[1],r[2]],pad:i,dataFormat:s,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:i,dataFormat:s,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:p}=lg(e,t,n);return[a.fused.depthwiseConv2d({x:Xm("x",e,t,n),filter:Xm("filter",e,t,n),strides:[r[1],r[2]],pad:i,dataFormat:s,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=Xm("outputShape",e,t,n),i=Xm("strides",e,t,n),s=ey(e,t,n);return[a.conv2dTranspose(Xm("x",e,t,n),Xm("filter",e,t,n),r,[i[1],i[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=Xm("strides",e,t,n),i=ey(e,t,n),s=Xm("dilations",e,t,n),o=Xm("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(Xm("input",e,t,n),Xm("filter",e,t,n),[r[1],r[2]],i,o,[s[1],s[2]])]}case"Conv3D":{let r=Xm("strides",e,t,n),i=Xm("pad",e,t,n),s=Xm("dataFormat",e,t,n).toUpperCase(),o=Xm("dilations",e,t,n);return[a.conv3d(Xm("x",e,t,n),Xm("filter",e,t,n),[r[1],r[2],r[3]],i,s,[o[1],o[2],o[3]])]}case"AvgPool":{let r=Xm("strides",e,t,n),i=Xm("pad",e,t,n),s=Xm("kernelSize",e,t,n);return[a.avgPool(Xm("x",e,t,n),[s[1],s[2]],[r[1],r[2]],i)]}case"MaxPool":{let r=Xm("strides",e,t,n),i=Xm("pad",e,t,n),s=Xm("kernelSize",e,t,n);return[a.maxPool(Xm("x",e,t,n),[s[1],s[2]],[r[1],r[2]],i)]}case"MaxPoolWithArgmax":{let r=Xm("strides",e,t,n),i=Xm("pad",e,t,n),s=Xm("kernelSize",e,t,n),o=Xm("includeBatchInIndex",e,t,n),{result:l,indexes:u}=a.maxPoolWithArgmax(Xm("x",e,t,n),[s[1],s[2]],[r[1],r[2]],i,o);return[l,u]}case"AvgPool3D":{let r=Xm("strides",e,t,n),i=Xm("pad",e,t,n),s=Xm("kernelSize",e,t,n);return[a.avgPool3d(Xm("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],i)]}case"MaxPool3D":{let r=Xm("strides",e,t,n),i=Xm("pad",e,t,n),s=Xm("kernelSize",e,t,n);return[a.maxPool3d(Xm("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],i)]}case"Dilation2D":{let r=Xm("strides",e,t,n),i=Xm("pad",e,t,n),s=Xm("dilations",e,t,n),o=r[1],l=r[2],u=s[1],d=s[2];return[a.dilation2d(Xm("x",e,t,n),Xm("filter",e,t,n),[o,l],i,[u,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"Fill":{let r=Xm("shape",e,t,n),i=Xm("dtype",e,t,n),s=Xm("value",e,t,n);return[a.fill(r,s,i)]}case"LinSpace":{let r=Xm("start",e,t,n),i=Xm("stop",e,t,n),s=Xm("num",e,t,n);return[a.linspace(r,i,s)]}case"Multinomial":{let r=Xm("logits",e,t,n),i=Xm("numSamples",e,t,n),s=Xm("seed",e,t,n);return[a.multinomial(r,i,s)]}case"OneHot":{let r=Xm("indices",e,t,n),i=Xm("depth",e,t,n),s=Xm("onValue",e,t,n),o=Xm("offValue",e,t,n),l=Xm("dtype",e,t,n);return[a.oneHot(r,i,s,o,l)]}case"Ones":return[a.ones(Xm("shape",e,t,n),Xm("dtype",e,t,n))];case"OnesLike":return[a.onesLike(Xm("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(Xm("shape",e,t,n),Xm("dtype",e,t,n),Xm("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(Xm("shape",e,t,n),Xm("minval",e,t,n),Xm("maxval",e,t,n),Xm("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(Xm("shape",e,t,n),Xm("minval",e,t,n),Xm("maxval",e,t,n),Xm("seed",e,t,n))];case"Range":{let r=Xm("start",e,t,n),i=Xm("stop",e,t,n),s=Xm("step",e,t,n);return[a.range(r,i,s,Xm("dtype",e,t,n))]}case"TruncatedNormal":{let r=Xm("shape",e,t,n),i=Xm("mean",e,t,n),s=Xm("stdDev",e,t,n),o=Xm("seed",e,t,n);return[a.truncatedNormal(r,i,s,Xm("dtype",e,t,n),o)]}case"Zeros":return[a.zeros(Xm("shape",e,t,n),Xm("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(Xm("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,a,r=tg)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=ug(e,t,n),d=await r.image.nonMaxSuppressionWithScoreAsync(a,i,s,o,l,u);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=ug(e,t,n),u=Xm("padToMaxOutputSize",e,t,n),d=await r.image.nonMaxSuppressionPaddedAsync(a,i,s,o,l,u);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=ug(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,i,s,o,l)]}case"Where":{let a=r.cast(Xm("condition",e,t,n),"bool"),i=[await r.whereAsync(a)];return a.dispose(),i}case"ListDiff":return r.setdiff1dAsync(Xm("x",e,t,n),Xm("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"LowerBound":{let r=Xm("sortedSequence",e,t,n),i=Xm("values",e,t,n);return[a.lowerBound(r,i)]}case"TopKV2":{let r=Xm("x",e,t,n),i=Xm("k",e,t,n),s=Xm("sorted",e,t,n),o=a.topk(r,i,s);return[o.values,o.indices]}case"UpperBound":{let r=Xm("sortedSequence",e,t,n),i=Xm("values",e,t,n);return[a.upperBound(r,i)]}case"Unique":{let r=Xm("x",e,t,n),i=a.unique(r);return[i.values,i.indices]}case"UniqueV2":{let r=Xm("x",e,t,n),i=Xm("axis",e,t,n),s=a.unique(r,i);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"ResizeBilinear":{let r=Xm("images",e,t,n),i=Xm("size",e,t,n),s=Xm("alignCorners",e,t,n),o=Xm("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[i[0],i[1]],s,o)]}case"ResizeNearestNeighbor":{let r=Xm("images",e,t,n),i=Xm("size",e,t,n),s=Xm("alignCorners",e,t,n),o=Xm("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[i[0],i[1]],s,o)]}case"CropAndResize":{let r=Xm("image",e,t,n),i=Xm("boxes",e,t,n),s=Xm("boxInd",e,t,n),o=Xm("cropSize",e,t,n),l=Xm("method",e,t,n),u=Xm("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,i,s,o,l,u)]}case"ImageProjectiveTransformV3":{let r=Xm("images",e,t,n),i=Xm("transforms",e,t,n),s=Xm("outputShape",e,t,n),o=Xm("fillValue",e,t,n),l=Xm("interpolation",e,t,n),u=Xm("fillMode",e,t,n);return[a.image.transform(r,i,l.toLowerCase(),u.toLowerCase(),o,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=Xm("default",e,t,n);return[Km(e.name,t,n)||r];case"Placeholder":return[Km(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[ty(Xm("x",e,t,n))];case"IdentityN":return Xm("x",e,t,n).map((e=>ty(e)));case"Shape":return[a.tensor1d(Xm("x",e,t,n).shape,"int32")];case"ShapeN":return Xm("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(Xm("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(Xm("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":let i=Xm("x",e,t,n),s=Xm("data",e,t,n),o=Xm("message",e,t,n),l=Xm("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"Equal":return[a.equal(Xm("a",e,t,n),Xm("b",e,t,n))];case"NotEqual":return[a.notEqual(Xm("a",e,t,n),Xm("b",e,t,n))];case"Greater":return[a.greater(Xm("a",e,t,n),Xm("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(Xm("a",e,t,n),Xm("b",e,t,n))];case"Less":return[a.less(Xm("a",e,t,n),Xm("b",e,t,n))];case"LessEqual":return[a.lessEqual(Xm("a",e,t,n),Xm("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(Xm("a",e,t,n),Xm("b",e,t,n))];case"LogicalNot":return[a.logicalNot(Xm("a",e,t,n))];case"LogicalOr":return[a.logicalOr(Xm("a",e,t,n),Xm("b",e,t,n))];case"Select":case"SelectV2":return[a.where(Xm("condition",e,t,n),Xm("a",e,t,n),Xm("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(Xm("a",e,t,n),Xm("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(Xm("a",e,t,n),Xm("b",e,t,n),Xm("transposeA",e,t,n),Xm("transposeB",e,t,n))];case"Einsum":return[a.einsum(Xm("equation",e,t,n),...Xm("tensors",e,t,n))];case"Transpose":return[a.transpose(Xm("x",e,t,n),Xm("perm",e,t,n))];case"_FusedMatMul":let[r,i]=Xm("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===i,l=Xm("numArgs",e,t,n),u=Xm("leakyreluAlpha",e,t,n);if(s){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,p]=Xm("args",e,t,n);return[a.fused.matMul({a:Xm("a",e,t,n),b:Xm("b",e,t,n),transposeA:Xm("transposeA",e,t,n),transposeB:Xm("transposeB",e,t,n),bias:d,activation:i,preluActivationWeights:p,leakyreluAlpha:u})];case"MatrixBandPart":return[a.linalg.bandPart(Xm("a",e,t,n),Xm("numLower",e,t,n),Xm("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(Xm("x",e,t,n),Xm("axis",e,t,n),Xm("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(Xm("x",e,t,n),Xm("mean",e,t,n),Xm("variance",e,t,n),Xm("offset",e,t,n),Xm("scale",e,t,n),Xm("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(Xm("x",e,t,n),Xm("radius",e,t,n),Xm("bias",e,t,n),Xm("alpha",e,t,n),Xm("beta",e,t,n))];case"Softmax":return[a.softmax(Xm("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(Xm("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:r,outputDenseValues:i}=a.raggedGather(Xm("paramsNestedSplits",e,t,n),Xm("paramsDenseValues",e,t,n),Xm("indices",e,t,n),Xm("outputRaggedRank",e,t,n));return r.concat(i)}case"RaggedRange":{let{rtNestedSplits:r,rtDenseValues:i}=a.raggedRange(Xm("starts",e,t,n),Xm("limits",e,t,n),Xm("splits",e,t,n));return[r,i]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(Xm("shape",e,t,n),Xm("values",e,t,n),Xm("defaultValue",e,t,n),Xm("rowPartitionTensors",e,t,n),Xm("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"Max":{let r=Xm("axis",e,t,n),i=Xm("keepDims",e,t,n);return[a.max(Xm("x",e,t,n),r,i)]}case"Mean":{let r=Xm("axis",e,t,n),i=Xm("keepDims",e,t,n);return[a.mean(Xm("x",e,t,n),r,i)]}case"Min":{let r=Xm("axis",e,t,n),i=Xm("keepDims",e,t,n);return[a.min(Xm("x",e,t,n),r,i)]}case"Sum":{let r=Xm("axis",e,t,n),i=Xm("keepDims",e,t,n);return[a.sum(Xm("x",e,t,n),r,i)]}case"All":{let r=Xm("axis",e,t,n),i=Xm("keepDims",e,t,n);return[a.all(Xm("x",e,t,n),r,i)]}case"Any":{let r=Xm("axis",e,t,n),i=Xm("keepDims",e,t,n);return[a.any(Xm("x",e,t,n),r,i)]}case"ArgMax":{let r=Xm("axis",e,t,n);return[a.argMax(Xm("x",e,t,n),r)]}case"ArgMin":{let r=Xm("axis",e,t,n);return[a.argMin(Xm("x",e,t,n),r)]}case"Prod":{let r=Xm("axis",e,t,n),i=Xm("keepDims",e,t,n);return[a.prod(Xm("x",e,t,n),r,i)]}case"Cumprod":{let r=Xm("axis",e,t,n),i=Xm("exclusive",e,t,n),s=Xm("reverse",e,t,n);return[a.cumprod(Xm("x",e,t,n),r,i,s)]}case"Cumsum":{let r=Xm("axis",e,t,n),i=Xm("exclusive",e,t,n),s=Xm("reverse",e,t,n);return[a.cumsum(Xm("x",e,t,n),r,i,s)]}case"Bincount":let r=Xm("x",e,t,n),i=Xm("weights",e,t,n),s=Xm("size",e,t,n);return[a.bincount(r,i,s)];case"DenseBincount":{let r=Xm("x",e,t,n),i=Xm("weights",e,t,n),s=Xm("size",e,t,n),o=Xm("binaryOutput",e,t,n);return[a.denseBincount(r,i,s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=Xm("n",e,t,n),i=Xm("axis",e,t,n),s=Xm("tensors",e,t,n);return s=s.slice(0,r),[a.concat(s,i)]}case"Gather":{let r=Xm("x",e,t,n),i=Xm("indices",e,t,n);return[a.gather(r,a.cast(i,"int32"),0)]}case"GatherV2":{let r=Xm("axis",e,t,n),i=Xm("batchDims",e,t,n),s=Xm("x",e,t,n),o=Xm("indices",e,t,n);return[a.gather(s,a.cast(o,"int32"),r,i)]}case"Reverse":{let r=Xm("dims",e,t,n),i=[];for(let e=0;e<r.length;e++)r[e]&&i.push(e);let s=Xm("x",e,t,n);return[a.reverse(s,i)]}case"ReverseV2":{let r=Xm("axis",e,t,n),i=Xm("x",e,t,n);return[a.reverse(i,r)]}case"Slice":{let r=Xm("begin",e,t,n),i=Xm("size",e,t,n);return[a.slice(Xm("x",e,t,n),r,i)]}case"StridedSlice":{let r=Xm("begin",e,t,n),i=Xm("end",e,t,n),s=Xm("strides",e,t,n),o=Xm("beginMask",e,t,n),l=Xm("endMask",e,t,n),u=Xm("ellipsisMask",e,t,n),d=Xm("newAxisMask",e,t,n),p=Xm("shrinkAxisMask",e,t,n),c=Xm("x",e,t,n);return[a.stridedSlice(c,r,i,s,o,l,u,d,p)]}case"Pack":return Js((()=>{let r=Xm("axis",e,t,n),i=Xm("tensors",e,t,n),s=i[0].shape,o=a.squeeze(i[0]).shape,l=i.map((e=>{let t=wr.arraysEqual(e.shape,s);if(!t&&!wr.arraysEqual(a.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,s)}));return[a.stack(l,r)]}));case"Unpack":{let r=Xm("axis",e,t,n),i=Xm("tensor",e,t,n);return a.unstack(i,r)}case"Tile":{let r=Xm("reps",e,t,n);return[a.tile(Xm("x",e,t,n),r)]}case"Split":case"SplitV":{let r=Xm("axis",e,t,n),i=Xm("numOrSizeSplits",e,t,n),s=Xm("x",e,t,n);return a.split(s,i,r)}case"ScatterNd":{let r=Xm("indices",e,t,n),i=Xm("values",e,t,n),s=Xm("shape",e,t,n);return[a.scatterND(r,i,s)]}case"GatherNd":{let r=Xm("x",e,t,n),i=Xm("indices",e,t,n);return[a.gatherND(r,i)]}case"SparseToDense":{let r=Xm("sparseIndices",e,t,n),i=Xm("outputShape",e,t,n),s=Xm("sparseValues",e,t,n),o=Xm("defaultValue",e,t,n);return[a.sparseToDense(r,s,i,s.dtype===o.dtype?o:a.cast(o,s.dtype))]}case"TensorScatterUpdate":{let r=Xm("indices",e,t,n),i=Xm("values",e,t,n),s=Xm("tensor",e,t,n);return[a.tensorScatterUpdate(s,r,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:i,emptyRowIndicator:s,reverseIndexMap:o}=a.sparse.sparseFillEmptyRows(Xm("indices",e,t,n),Xm("values",e,t,n),Xm("denseShape",e,t,n),Xm("defaultValue",e,t,n));return[r,i,s,o]}case"SparseReshape":{let{outputIndices:r,outputShape:i}=a.sparse.sparseReshape(Xm("inputIndices",e,t,n),Xm("inputShape",e,t,n),Xm("newShape",e,t,n));return[r,i]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(Xm("data",e,t,n),Xm("indices",e,t,n),Xm("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(Xm("data",e,t,n),Xm("indices",e,t,n),Xm("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"FFT":return[a.fft(Xm("x",e,t,n))];case"IFFT":return[a.ifft(Xm("x",e,t,n))];case"RFFT":return[a.rfft(Xm("x",e,t,n))];case"IRFFT":return[a.irfft(Xm("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(Xm("input",e,t,n),Xm("pattern",e,t,n),Xm("rewrite",e,t,n),Xm("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:r,nGramsSplits:i}=a.string.stringNGrams(Xm("data",e,t,n),Xm("dataSplits",e,t,n),Xm("separator",e,t,n),Xm("nGramWidths",e,t,n),Xm("leftPad",e,t,n),Xm("rightPad",e,t,n),Xm("padWidth",e,t,n),Xm("preserveShortSequences",e,t,n));return[r,i]}case"StringSplit":{let{indices:r,values:i,shape:s}=a.string.stringSplit(Xm("input",e,t,n),Xm("delimiter",e,t,n),Xm("skipEmpty",e,t,n));return[r,i,s]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(Xm("input",e,t,n),Xm("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return r((()=>((e,t,n,a=tg)=>{switch(e.op){case"Cast":return[a.cast(Xm("x",e,t,n),Xm("dtype",e,t,n))];case"ExpandDims":{let r=Xm("axis",e,t,n);return[a.expandDims(Xm("x",e,t,n),r)]}case"Squeeze":{let r=Xm("axis",e,t,n);return[a.squeeze(Xm("x",e,t,n),r)]}case"Reshape":return[a.reshape(Xm("x",e,t,n),Xm("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(Xm("x",e,t,n),Xm("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(Xm("x",e,t,n),Xm("padding",e,t,n),Xm("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(Xm("x",e,t,n),Xm("padding",e,t,n),Xm("constantValue",e,t,n))];case"SpaceToBatchND":{let r=Xm("blockShape",e,t,n),i=Xm("paddings",e,t,n);return[a.spaceToBatchND(Xm("x",e,t,n),r,i)]}case"BatchToSpaceND":{let r=Xm("blockShape",e,t,n),i=Xm("crops",e,t,n);return[a.batchToSpaceND(Xm("x",e,t,n),r,i)]}case"DepthToSpace":{let r=Xm("blockSize",e,t,n),i=Xm("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(Xm("x",e,t,n),r,i)]}case"BroadcastTo":return[a.broadcastTo(Xm("x",e,t,n),Xm("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(Xm("s0",e,t,n),Xm("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return dg(e,t,n,a);case"custom":let i=jm(e.op);if(i&&i.customExecutor)return i.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Km(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return Km(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Gy(this.node.rawAttrs,e,t);if(null!=n.s)return Vy(this.node.rawAttrs,e,t);if(null!=n.b)return Uy(this.node.rawAttrs,e,t);if(null!=n.shape)return Zy(this.node.rawAttrs,e,t);if(null!=n.type)return qy(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Yy(this.node.rawAttrs,e,t);if(null!=n.list.s)return Jy(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Qy(this.node.rawAttrs,e,t);if(null!=n.list.b)return eg(this.node.rawAttrs,e,t);if(null!=n.list.type)return Xy(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return wr.isPromise(i)?i.then((e=>[].concat(e))):[].concat(i)}var cg=class{constructor(e={},t={},n={},a={},r){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function hg(e,t,n,a){let r=new Set,i=[],s=null,o=null,l=new Set,u=new Set(Object.keys(e).map((e=>Qm(e)[0])));a=a||[];let d=new Set(a.map((e=>Qm(e.name)[0]))),p=[...t];for(;p.length>0;){let e=p.pop();if((Ag(e)||xg(e)||bg(e))&&null==s&&(s=e,o=s.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&!u.has(e.name)&&!d.has(e.name)){if(0===e.inputs.length){i.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),p.push(e))}))}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:i,dynamicNode:s,syncInputs:o}}var fg=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}},mg=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),yg=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),gg=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Ag(e){return mg.has(e.op)}function xg(e){return yg.has(e.op)}function bg(e){return gg.has(e.op)}var vg=class{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new vg(e.functions[t],this)}))}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){let n=hg(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:i}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){let n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${a}]`)}let s=function(e,t){let{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>Qm(e)[0])).map((t=>e.nodes[t])),i=e.initNodes||[],s=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}let l=o([...r,...e.weights,...i]).filter(s),u=o([...l,...Object.values(e.nodes)]).filter(s),d=new Map(u.map((e=>[e.name,e]))),p={};for(let e of u){p[e.name]=p[e.name]||0;for(let t of e.children)s(t)||(p[t.name]=Number.POSITIVE_INFINITY),p[t.name]=(p[t.name]||0)+1}let c=Object.entries(p).filter((([,e])=>0===e)).map((([e])=>e)),h=[...c];for(;c.length>0;){let e=c.pop(),t=d.get(e);for(let e of t.children.filter(s))0==--p[e.name]&&(h.push(e.name),c.push(e.name))}let f=function(e,t){let n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){let e=a.pop(),t=n.get(e);for(let e of t.children)!n.has(e.name)||r.has(e.name)||(r.add(e.name),a.push(e.name))}return e.filter((e=>r.has(e.name)))}(h.map((e=>d.get(e))),l);return function(e,t){let n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"==typeof e?e:e.name),i=new Set(e.map((e=>e.name))),s=e=>i.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(s)){if(!n.has(e.name))throw new fg(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new fg(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!r(t))for(let e of t.inputs){if(!n.has(e.name))throw new fg(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new fg(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}(this.graph,n),o=function(e){let t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>Ag(e)?n:t)),r=e=>{let n=a[t.get(e.name)];return null==n?-1:n},i=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),s=new Map;for(let t=0;t<e.length;++t){let a=i[t];if(a===n)continue;let r=e[t],o=e[a];s.has(o.name)||s.set(o.name,[]),s.get(o.name).push(r)}return s}(s);return{orderedNodes:s,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return eo(t),t}cloneTensorList(e){return e?e.map((e=>this.cloneAndKeepTensor(e))):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let a=n.map((e=>this.graph.nodes[Qm(e)[0]])),r=t.map((e=>Qm(e)[0])),i=new Set(r),s=r.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);let o=this.getCompilationKey(a,s),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,s),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Le().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let u={},d={};return Js((()=>{let n=new cg(this.weightMap,u,d,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{let[r,i]=Qm(t,n),s=[];s[i]=e[t],a[r]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(s))}));let r=this.getFrozenTensorIds(a),{orderedNodes:s,nodeLiveUntilMap:o}=l;for(let e of s){if(a[e.name])continue;let t=pg(e,a,n,this._resourceManager);if(wr.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,i,o.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>Km(e,a,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,i,s){if(!Ag(t)&&!i.has(e)){for(let a of n[e])null!=a&&(s[a.id]=(s[a.id]||0)+t.children.length);for(let e of t.inputs){if(Ag(e))continue;let t=Zm(e.name,n,a);if(null!=t)for(let e of t){if(!e||e.kept||r.has(e.id))continue;let t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,i){function s(e){return Ag(e)||r.has(e.name)}if(!Ag(e)&&null!=i)for(let e of i){if(s(e))continue;let r=Zm(e.name,t,n);for(let e of r)!e||e.kept||a.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,a={},r={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Le().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let i=new cg(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let s=await this.executeWithControlFlow(e,i,t,n),o=t.map((e=>Km(e,s,i))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),d=new Set([...l,...u,...this.weightIds]);return Object.values(s).forEach((e=>{e.forEach((e=>{e&&!e.isDisposed&&!d.has(e.id)&&e.dispose()}))})),null==this.parent&&i.dispose(d),o}async executeFunctionAsync(e,t,n){let a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){let r=Object.keys(e),i=r.map((e=>this.graph.nodes[Qm(e)[0]])),s=n.map((e=>Qm(e)[0])),o=new Set(s),l=s.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);let{usedNodes:u,missingInputs:d,dynamicNode:p,syncInputs:c}=hg(e,l,this.weightMap,this._initNodes),h=[...i,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,a]=Qm(t),r=[];r[a]=e[t],f[n]=r}));let m={},y=this.getFrozenTensorIds(f),g={};for(;h.length>0;){let e=this.processStack(i,h,t,f,g,y,o,m,u);await Promise.all(e)}null==p&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let A=l.filter((e=>!Ag(e)&&!Km(e.name,f,t))).map((e=>e.name));if(A.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${A}] from the provided inputs [${r}]. Consider providing the following inputs: [${d}]. ${e}`)}return f}processStack(e,t,n,a,r,i,s,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&Xm("isConstant",e.node,a,n)&&([d]=Ym(e.node.name,n)),null==a[e.node.name]){let p=pg(e.node,a,n,this._resourceManager);d||([d]=Ym(e.node.name,n));let c=n.currentContext;wr.isPromise(p)?u.push(p.then((u=>(a[d]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(u)),n.currentContext=c,this.checkTensorForDisposal(d,e.node,a,n,i,s,o),this.processChildNodes(e.node,t,n,a,r,l),u)))):(a[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,e.node,a,n,i,s,o),this.processChildNodes(e.node,t,n,a,r,l))}else this.processChildNodes(e.node,t,n,a,r,l)}return u}processChildNodes(e,t,n,a,r,i){e.children.forEach((e=>{let[s]=Ym(e.name,n);r[s]||!i.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!Km(e,a,n)))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Km(e,a,n)))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[a]=Qm(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){let e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));wr.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&wr.assert(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;let a={};for(let r in e){let i=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=i?a[i.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=Qm(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;let a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{let[t]=Qm(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},wg="?tfjs-format=file",kg="model.json",Ig=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=Th){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return wr.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let a=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new vg(Wy.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=Wy.Instance.transformGraph(e.modelInitializer);this.initializer=new vg(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof ri?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof ri||Array.isArray(e))){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce(((t,n)=>{var r,i,s;let o=null===(s=null===(i=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===i?void 0:i[n])||void 0===s?void 0:s.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){let r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Qs(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function Sg(e,t={},n=Th){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${kg}${wg}`}(e));let a=new Ig(e,t,n);return await a.load(),a}function Cg(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(a&&a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let r=Th.getWeightSpecs(n.weightsManifest),i=Th.getModelArtifactsForJSONSync(n,r,a);t=Th.fromMemorySync(i)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=Th.fromMemorySync(e)}let n=new Ig(t);return n.load(),n}var Ng="4.7.0";function Tg(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&wr.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var Rg=Um.whereImpl,Eg=class extends W{nextDataId(){return Eg.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new L(this,Ks())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Le().get("IS_NODE")&&Pf.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&wr.isString(n[0])){let r=n.map((e=>wr.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Pf.mergeRealAndImagArrays(e,t)}return wr.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>wr.decodeString(e)));return Ws(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ws(e.shape,e.dtype,t)}makeOutput(e,t,n){return Ks().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=wr.now();return e(),{kernelMs:wr.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Tg([e],"where");let t=this.readSync(e.dataId);return Rg(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Eg.nextDataId=0;var $g={};function Mg(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}g($g,{addImpl:()=>qg,bincountImpl:()=>Yg,bincountReduceImpl:()=>Jg,bitwiseAndImpl:()=>Qg,castImpl:()=>Vg,ceilImpl:()=>iA,concatImpl:()=>lA,equalImpl:()=>uA,expImpl:()=>cA,expm1Impl:()=>mA,floorDivImpl:()=>vA,floorImpl:()=>AA,gatherNdImpl:()=>IA,gatherV2Impl:()=>SA,greaterEqualImpl:()=>RA,greaterImpl:()=>CA,lessEqualImpl:()=>PA,lessImpl:()=>MA,linSpaceImpl:()=>zA,logImpl:()=>LA,maxImpl:()=>VA,maximumImpl:()=>UA,minimumImpl:()=>jA,multiplyImpl:()=>KA,negImpl:()=>QA,notEqualImpl:()=>tx,prodImpl:()=>ox,raggedGatherImpl:()=>dx,raggedRangeImpl:()=>cx,raggedTensorToTensorImpl:()=>gx,rangeImpl:()=>Ax,rsqrtImpl:()=>xx,scatterImpl:()=>wx,sigmoidImpl:()=>kx,simpleAbsImpl:()=>Mg,sliceImpl:()=>Cx,sparseFillEmptyRowsImpl:()=>Rx,sparseReshapeImpl:()=>Ex,sparseSegmentReductionImpl:()=>$x,sqrtImpl:()=>Mx,squaredDifferenceImpl:()=>Px,staticRegexReplaceImpl:()=>zx,stridedSliceImpl:()=>Bx,stringNGramsImpl:()=>Ux,stringSplitImpl:()=>Hx,stringToHashBucketFastImpl:()=>jx,subImpl:()=>qx,tileImpl:()=>Yx,topKImpl:()=>eb,transposeImpl:()=>rx,uniqueImpl:()=>tb});var Fg={kernelName:Ge,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;Tg(t,"abs");let a=new Float32Array(wr.sizeFromShape(t.shape));return a=Mg(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}};function _g(e){return(t,n,a,r,i)=>{let s=Pf.assertAndGetBroadcastShape(t,n),o=s.length,l=wr.computeStrides(s),u=wr.sizeFromShape(s),d=wr.getTypedArrayFromDType(i,u),p=t.length,c=n.length,h=wr.computeStrides(t),f=wr.computeStrides(n),m=Pf.getBroadcastDims(t,s),y=Pf.getBroadcastDims(n,s);if(m.length+y.length===0)for(let t=0;t<d.length;++t)d[t]=e(a[t%a.length],r[t%r.length]);else for(let t=0;t<d.length;++t){let n=wr.indexToLoc(t,o,l),i=n.slice(-p);m.forEach((e=>i[e]=0));let s=wr.locToIndex(i,p,h),u=n.slice(-c);y.forEach((e=>u[e]=0));let g=wr.locToIndex(u,c,f);d[t]=e(a[s],r[g])}return[d,s]}}function Pg(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,i=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",s)},o}var Og={kernelName:gt,backendName:"cpu",kernelFunc:Pg};function Dg(e,t,n="float32"){if("complex64"===n)return Pg({inputs:{real:Dg(e,t,"float32"),imag:Dg(e,t,"float32")},backend:e});let a=wr.makeZerosTypedArray(wr.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function zg(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var Lg={kernelName:on,backendName:"cpu",kernelFunc:zg};function Wg(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}var Bg={kernelName:ia,backendName:"cpu",kernelFunc:Wg};function Vg(e,t,n,a){if("int32"===a)return[t,"int32",Int32Array.from(e)];if("bool"===a){let a=wr.toTypedArray([0],n),[r,i]=_g(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function Ug(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:i}=a;if("complex64"===i){if("complex64"===r.dtype)return zg({inputs:{x:r},backend:n});let e=Dg(n,r.shape,r.dtype),t=Ug({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=Pg({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){let e=Wg({inputs:{input:r},backend:n}),t=Ug({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!wr.hasEncodingLoss(r.dtype,i)){let e=zg({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}let s=n.data.get(r.dataId).values,[o,l,u]=Vg(s,r.shape,r.dtype,i);return n.makeTensorInfo(o,l,u)}var Gg={kernelName:ft,backendName:"cpu",kernelFunc:Ug};function Hg(e,t,n,a){return null==n?({inputs:n,backend:r})=>{let{a:i,b:s}=n,o=r;Tg([i,s],e);let l=o.data.get(i.dataId).values,u=o.data.get(s.dataId).values,d="string"===i.dtype?Pf.fromUint8ToStringArray(l):l,p="string"===i.dtype?Pf.fromUint8ToStringArray(u):u,c=a||i.dtype,[h,f]=t(i.shape,s.shape,d,p,c);return o.makeTensorInfo(f,c,h)}:({inputs:e,backend:r})=>{let{a:i,b:s}=e,o=r;if("complex64"===i.dtype||"complex64"===s.dtype){let e=Ug({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(a.dataId).values,u=o.data.get(r.dataId).values,d=Ug({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(d.dataId),c=p.complexTensorInfos.real,h=p.complexTensorInfos.imag,f=o.data.get(c.dataId).values,m=o.data.get(h.dataId).values,[y,g,A]=n(i.shape,s.shape,l,u,f,m),x=o.makeTensorInfo(A,"float32",y),b=o.makeTensorInfo(A,"float32",g),v=Pg({inputs:{real:x,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(b),v}{let e=o.data.get(i.dataId).values,n=o.data.get(s.dataId).values,r=a||i.dtype,[l,u]=t(i.shape,s.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function jg(e){return(t,n,a,r,i,s)=>{let o=Pf.assertAndGetBroadcastShape(t,n),l=wr.sizeFromShape(o),u=o.length,d=wr.computeStrides(o),p=wr.getTypedArrayFromDType("float32",l),c=wr.getTypedArrayFromDType("float32",l),h=Pf.getBroadcastDims(t,o),f=Pf.getBroadcastDims(n,o),m=Pf.mergeRealAndImagArrays(a,r),y=Pf.mergeRealAndImagArrays(i,s),g=t.length,A=wr.computeStrides(t),x=n.length,b=wr.computeStrides(n);if(h.length+f.length===0)for(let t=0;t<p.length;t++){let n=t%m.length,a=t%y.length,r=e(m[2*n],m[2*n+1],y[2*a],y[2*a+1]);p[t]=r.real,c[t]=r.imag}else for(let t=0;t<p.length;t++){let n=wr.indexToLoc(t,u,d),a=n.slice(-g);h.forEach((e=>a[e]=0));let r=wr.locToIndex(a,g,A),i=n.slice(-x);f.forEach((e=>i[e]=0));let s=wr.locToIndex(i,x,b),o=e(m[2*r],m[2*r+1],y[2*s],y[2*s+1]);p[t]=o.real,c[t]=o.imag}return[p,c,o]}}var qg=_g(((e,t)=>e+t)),Xg=jg(((e,t,n,a)=>({real:e+n,imag:t+a}))),Kg=Hg(qe,qg,Xg),Zg={kernelName:qe,backendName:"cpu",kernelFunc:Kg};function Yg(e,t,n,a,r){let i=wr.sizeFromShape(a),s=wr.makeZerosTypedArray(r,n);for(let n=0;n<e.length;n++){let a=e[n];if(a<0)throw new Error("Input x must be non-negative!");a>=r||(s[a]+=i>0?t[n]:1)}return s}function Jg(e,t,n,a=!1){let r=e.shape[0],i=e.shape[1],s=Ws([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<i;r++){let i=e.get(o,r);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(a?s.set(1,o,i):t.size>0?s.set(s.get(o,i)+t.get(o,r),o,i):s.set(s.get(o,i)+1,o,i))}return s}var Qg=_g(((e,t)=>e&t)),eA=Hg(pt,Qg),tA={kernelName:pt,backendName:"cpu",kernelFunc:eA};function nA(e){return(t,n,a)=>{let r=wr.getArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],a);return r}}function aA(e,t,n){return rA(e,nA(t),n)}function rA(e,t,n){return({inputs:a,attrs:r,backend:i})=>{let{x:s}=a;Tg(s,e);let o,l=i,u=l.data.get(s.dataId).values;if("string"===s.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");o=Pf.fromUint8ToStringArray(u)}else o=u;let d=n||s.dtype,p=t(o,d,r);return l.makeTensorInfo(s.shape,d,p)}}var iA=nA((e=>Math.ceil(e))),sA=rA(mt,iA),oA={kernelName:mt,backendName:"cpu",kernelFunc:sA};function lA(e,t,n,a){let r=wr.getArrayFromDType(n,wr.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{let n=wr.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{let i="string"===n?Pf.fromUint8ToStringArray(e.vals):e.vals,s=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[o+t]=i[s++]}a+=e.shape[1]}))}return r}var uA=_g(((e,t)=>e===t?1:0)),dA=Hg(jt,uA,null,"bool"),pA={kernelName:jt,backendName:"cpu",kernelFunc:dA},cA=nA((e=>Math.exp(e))),hA=rA(qt,cA,"float32"),fA={kernelName:qt,backendName:"cpu",kernelFunc:hA},mA=nA((e=>Math.expm1(e))),yA=rA(Kt,mA),gA={kernelName:Kt,backendName:"cpu",kernelFunc:yA},AA=nA((e=>Math.floor(e))),xA=rA(Qt,AA),bA={kernelName:Qt,backendName:"cpu",kernelFunc:xA},vA=_g(((e,t)=>Math.floor(e/t))),wA=Hg(en,vA,null,"int32"),kA={kernelName:en,backendName:"cpu",kernelFunc:wA};function IA(e,t,n,a,r,i,s,o,l){let u=Ws([a,i],n);for(let n=0;n<a;n++){let a=[],d=0;for(let t=0;t<r;t++){let i=e[n*r+t];d+=i*s[t],a.push(i)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<i;e++)u.values[n*i+e]=t.get(...t.indexToLoc(d*i+e))}return u}function SA(e,t,n){let a=Ws(n,e.dtype);for(let n=0;n<a.size;++n){let r=a.indexToLoc(n).slice(),i=r[0],s=r[2],o=t.locToIndex([i,s]);r[2]=t.values[o];let l=e.locToIndex(r);0<=l&&l<e.values.length&&(a.values[n]=e.values[l])}return a}var CA=_g(((e,t)=>e>t?1:0)),NA=Hg(rn,CA,null,"bool"),TA={kernelName:rn,backendName:"cpu",kernelFunc:NA},RA=_g(((e,t)=>e>=t?1:0)),EA=Hg(sn,RA,null,"bool"),$A={kernelName:sn,backendName:"cpu",kernelFunc:EA},MA=_g(((e,t)=>e<t?1:0)),FA=Hg(fn,MA,null,"bool"),_A={kernelName:fn,backendName:"cpu",kernelFunc:FA},PA=_g(((e,t)=>e<=t?1:0)),OA=Hg(mn,PA,null,"bool"),DA={kernelName:mn,backendName:"cpu",kernelFunc:OA};function zA(e,t,n){let a=(t-e)/(n-1),r=wr.makeZerosTypedArray(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+a;return r}var LA=nA((e=>Math.log(e))),WA=rA(gn,LA),BA={kernelName:gn,backendName:"cpu",kernelFunc:WA};function VA(e,t,n,a){let r=wr.getTypedArrayFromDType(a,wr.sizeFromShape(n));for(let n=0;n<r.length;++n){let a=n*t,i=e[a];for(let n=0;n<t;++n){let t=e[a+n];(Number.isNaN(t)||t>i)&&(i=t)}r[n]=i}return r}var UA=_g(((e,t)=>Math.max(e,t))),GA=Hg(Rn,UA),HA={kernelName:Rn,backendName:"cpu",kernelFunc:GA},jA=_g(((e,t)=>Math.min(e,t))),qA=Hg(Dn,jA),XA={kernelName:Dn,backendName:"cpu",kernelFunc:qA},KA=_g(((e,t)=>e*t)),ZA=jg(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),YA=Hg(Bn,KA,ZA),JA={kernelName:Bn,backendName:"cpu",kernelFunc:YA};function QA(e,t,n){let a=wr.createScalarValue(-1,n);return KA([],t,a,e,n)}var ex={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t;Tg(a,"neg");let r=n.data.get(a.dataId).values,[i,s]=QA(r,a.shape,a.dtype);return n.makeTensorInfo(s,a.dtype,i)}},tx=_g(((e,t)=>e!==t?1:0)),nx=Hg(Un,tx,null,"bool"),ax={kernelName:Un,backendName:"cpu",kernelFunc:nx};function rx(e,t,n,a,r){let i=t.length,s=wr.sizeFromShape(t),o=wr.computeStrides(t),l=wr.computeStrides(r),u=wr.getTypedArrayFromDType(n,wr.sizeFromShape(r));for(let t=0;t<s;++t){let n=wr.indexToLoc(t,i,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[a[e]];u[wr.locToIndex(r,i,l)]=e[t]}return u}function ix(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:i}=n;Tg(r,"transpose");let s=r.shape.length,o=new Array(s);for(let e=0;e<o.length;e++)o[e]=r.shape[i[e]];let l=rx(a.data.get(r.dataId).values,r.shape,r.dtype,i,o);return{dataId:a.write(l,o,r.dtype),shape:o,dtype:r.dtype}}var sx={kernelName:Ya,backendName:"cpu",kernelFunc:ix};function ox(e,t,n,a){let[r,i]=Pf.computeOutAndReduceShapes(e,a),s=fi(t,"int32"),o=wr.makeZerosTypedArray(wr.sizeFromShape(r),s),l=wr.sizeFromShape(i);for(let e=0;e<o.length;++e){let t=e*l,a=1;for(let e=0;e<l;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:r,outDtype:s}}var lx={kernelName:ea,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;Tg(r,"prod");let o=r.shape.length,l=wr.parseAxisParam(i,r.shape),u=Pf.getAxesPermutation(l,o),d=l,p=r,c=[];null!=u&&(p=ix({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(p),d=Pf.getInnerMostAxes(d.length,o));let h=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:y}=ox(p.shape,p.dtype,h,d),g=m;return s&&(g=Pf.expandShapeToKeepDim(m,l)),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(g,y,f)}};function ux(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function dx(e,t,n,a,r,i,s,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){let r=wr.indexToLoc(a,t.length,wr.computeStrides(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(i,s,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");let l=a[0],{outSplits:u,valueSlices:d,numValues:p}=function(e,t,n,a){let r=[],i=0,s=t.length-1+n.length,o=new Array(s).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){let a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];let n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let a=0;a<e.length;++a){let s=e[a],l=e[a]+1;for(let e=0;e<n.length;++e){let a=n[e],r=e+t.length-1;if(r>=0){let e=o[r],t=e[e.length-1]-a[s];for(let e=s;e<l;++e)o[r].push(a[e+1]+t)}s=a[s],l=a[l]}l!==s&&(r.push([s,l]),i+=l-s)}return{outSplits:o,valueSlices:r,numValues:i}}(i,s,e,l),c=function(e){let t=[];for(let n=0;n<e.length;++n){let a=e[n].length,r=wr.getArrayFromDType("int32",a);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),h=function(e,t,n,a,r){let i=t.slice();i[0]=r;let s=wr.getArrayFromDType(n,wr.sizeFromShape(i)),o=e.length;return function(e,t,n,a,r,i){let s=ux(t,2)[1],o=ux(i,2)[1],l=0;for(let t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<a;++t)r[l*o+t]=e[n*s+t];++l}}(e,t,a,0===o?0:o/t[0],s,i),[s,i]}(n,a,r,d,p);return[c,h[0],h[1]]}var px=2147483647;function cx(e,t,n,a,r,i,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===r.length,u=0===s.length,d=[];o||d.push(t[0]),l||d.push(r[0]),u||d.push(s[0]);for(let e=1;e<d.length;++e)if(d[e]!==d[e-1])throw new Error("starts, limits, and deltas must have the same shape");let p=0===d.length?1:d[0],c=wr.getArrayFromDType("int32",p+1);c[0]=0;for(let t=0;t<p;++t){let n,r=o?e[0]:e[t],s=l?a[0]:a[t],d=u?i[0]:i[t];if(0===d)throw new Error("Requires delta != 0");if(d>0&&s<r||d<0&&s>r)n=0;else if(n=Math.ceil(Math.abs((s-r)/d)),n>px)throw new Error(`Requires ((limit - start) / delta) <= ${px}`);c[t+1]=c[t]+n}let h=c[p],f=wr.getArrayFromDType(n,h),m=0;for(let t=0;t<p;++t){let n=c[t+1]-c[t],a=o?e[0]:e[t],r=u?i[0]:i[t];for(let e=0;e<n;++e)f[m++]=a,a+=r}return[c,f]}var hx=Pf.RowPartitionType,fx=class{constructor(e,t,n,a,r,i,s,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=s,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Pf.getRowPartitionTypesHelper(u),this.raggedRank=Pf.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===hx.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===hx.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case hx.VALUE_ROWIDS:return fx.getMaxWidthValueRowID(t);case hx.ROW_SPLITS:return fx.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${hx[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){let t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let i=1;i<t;++i){let t=e[i];t!==a&&(a=t,r=Math.max(i-n,r),n=i)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return yx(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;Pf.validateDefaultValueShape(n,t);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Pf.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){let a=Math.min(e,n),r=[],i=0;for(let e=0;e<a;++e,i+=t)r.push(i);for(let t=a;t<e;++t)r.push(-1);return wr.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){let r=e.length,i=[];for(let s=0;s<r-1;++s){let r=e[s+1]-e[s],o=Math.min(a,r),l=t[s];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<r-o;++e)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,a){let r=e.length,i=[];if(0===r)return[];let s=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<r;++u){let r=e[u];if(r===o)l>=0&&(++s,s<a?l+=n:l=-1);else{if(s=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,a){let r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case hx.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case hx.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error(`Unsupported partition type: ${hx[i]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case hx.FIRST_DIM_SIZE:return e[0];case hx.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case hx.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${hx[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];let a=yx(t,!1),r=wr.getArrayFromDType(this.valuesDType,wr.sizeFromShape(a));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)i=this.calculateOutputIndex(e-1,i,n[e],t[e]);this.setOutput(this.raggedRank,i,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;let r=this.values,i=n,s=a.slice();s=s.slice(e+1);let o=wr.sizeFromShape(s),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;Js((()=>{let t=Go(u,e);u=ll(t,s).dataSync()}))}let d=0,p=0,c=0;for(let e=0;e<=l;++e){let a=e<l?t[e]:-1;if(a!==c){if(p<c){let e=r.subarray(d*o);mx(i.subarray(p*o),e,(c-p)*o)}if(e>=l){let e=n.length;a=Math.floor(e/o)}if(a>c)if(1===this.defaultValue.length)i.subarray(c*o,a*o).fill(this.defaultValue[0]),c=a;else for(;a>c;)mx(i.slice(c*o),u,o),++c;a<0?(d=e+1,p=c):(d=e,p=c,c=p+1)}else++c}}};function mx(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function yx(e,t){let n=[];for(let a of e){if(a<0){if(!t)throw new Error(`Dimension ${a} must be >= 0`);if(a<-1)throw new Error(`Dimension ${a} must be >= -1`);a=-1}n.push(a)}return n}function gx(e,t,n,a,r,i,s,o,l,u){return new fx(e,t,n,a,r,i,s,o,l,u).compute()}function Ax(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return wr.makeZerosTypedArray(0,a);let r=Math.abs(Math.ceil((t-e)/n)),i=wr.makeZerosTypedArray(r,a);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}var xx=nA((e=>1/Math.sqrt(e))),bx=rA(ya,xx),vx={kernelName:ya,backendName:"cpu",kernelFunc:bx};function wx(e,t,n,a,r,i,s,o,l,u){let d=[a/r,r],p=e.values,c=t.values;if(0===a)return Ws(n,t.dtype);let h=l instanceof ti?l:Ws(d,t.dtype);"string"==typeof l||"number"==typeof l?h.values.fill(l):"boolean"==typeof l&&h.values.fill(+l);for(let e=0;e<i;e++){let i=[],l=0;for(let t=0;t<s;t++){let n=p[e*s+t];i.push(n),l+=n*o[t]}if(l<0||l>=a/r)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<r;n++)u?h.values[l*r+n]+=c[e*r+n]:h.values[l*r+n]=0===t.rank?c[0]:c[e*r+n]}return h}var kx=nA((e=>1/(1+Math.exp(-e)))),Ix=aA(Ca,(e=>1/(1+Math.exp(-e)))),Sx={kernelName:Ca,backendName:"cpu",kernelFunc:Ix};function Cx(e,t,n,a,r){let i=uf.isSliceContinous(a,t,n),s=wr.sizeFromShape(n),o=wr.computeStrides(a);if(i){let n=uf.computeFlatOffset(t,o);return"string"===r?e.slice(n,n+s):e.subarray(n,n+s)}let l=Ws(a,r,"string"===r?Pf.fromUint8ToStringArray(e):e),u=Ws(n,r);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),a=n.map(((e,n)=>e+t[n]));u.set(l.get(...a),...n)}return"string"===r?Pf.fromStringArrayToUint8(u.values):u.values}function Nx(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,size:s}=a;Tg(r,"slice");let[o,l]=uf.parseSliceParams(r,i,s);uf.assertParamsValid(r,o,l);let u=Cx(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var Tx={kernelName:wa,backendName:"cpu",kernelFunc:Nx};function Rx(e,t,n,a,r,i,s){let o=t[0],l=i[0],u=new Array(l),d=new Array(o),p=t[1];if(0===l){if(0!==o)throw new Error(Pf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[wr.getArrayFromDType(n,0),[0,p],wr.getArrayFromDType(r,0),u,d]}let c=!0,h=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p];if(n<0)throw new Error(Pf.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(Pf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],c=c&&n>=h,h=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&c){let t=e,n=a;for(let e=0;e<o;++e)d[e]=e;return[t,[o,p],n,u,d]}{let t=f[l-1],i=wr.getArrayFromDType(n,t*p),c=wr.getArrayFromDType(r,t),h=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p],r=h[n],s=(0===n?0:f[n-1])+r;h[n]++;for(let n=0;n<p;++n)i[s*p+n]=e[t*p+n];c[s]=a[t],d[t]=s}for(let e=0;e<l;++e)if(0===h[e]){let t=0===e?0:f[e-1];i[t*p+0]=e;for(let e=1;e<p;++e)i[t*p+e]=0;c[t]=s}return[i,[t,p],c,u,d]}}function Ex(e,t,n,a,r){let i=wr.sizeFromShape(a),s=t[0],o=r.length,l=[],u=1,d=-1;for(let e=0;e<o;++e){let t=r[e];if(-1===t){if(-1!==d)throw new Error(Pf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,l.push(1)}else{if(t<0)throw new Error(Pf.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==d){if(u<=0)throw new Error(Pf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(i/u);if(u*e!==i)throw new Error(Pf.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[d]=e}if(wr.sizeFromShape(l)!==i)throw new Error(Pf.getSparseReshapeInputOutputMismatchErrorMessage(a,l));let p=a.length,c=[];if(p>0){c[p-1]=1;for(let e=p-2;e>=0;--e)c[e]=c[e+1]*a[e+1]}let h=[];if(o>0){h[o-1]=1;for(let e=o-2;e>=0;--e)h[e]=h[e+1]*l[e+1]}let f=wr.getArrayFromDType(n,s*o);for(let t=0;t<s;++t){let n=0;for(let a=0;a<p;++a)n+=e[t*p+a]*c[a];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/h[e]),n%=h[e]}return[f,[s,o],l]}function $x(e,t,n,a,r,i=!1,s=0){let o=a.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?r[o-1]+1:0;if(d<0)throw new Error(Pf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=d;let c=p.reduce(((e,t)=>e*t),1),h=wr.getArrayFromDType(n,c);if(0===o)return d>0&&h.fill(s),[h,p];if(d<=0)throw new Error(Pf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,y=0,g=r[f];for(;;){let t=0;if(m<o){if(t=r[m],g===t){++m;continue}if(g>=t)throw new Error(Pf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(g<0||g>=d)throw new Error(Pf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(g,d));g>y&&h.fill(s,y*u,g*u);for(let t=f;t<m;++t){let n=a[t];if(n<0||n>=l[0])throw new Error(Pf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,a[t],l[0]));for(let t=0;t<u;t++)h[g*u+t]+=e[n*u+t]}if(i)for(let e=0;e<u;e++)h[g*u+e]/=m-f;if(f=m,++m,y=g+1,g=t,m>o)break}return y<d&&h.fill(s,y*u,d*u),[h,p]}var Mx=nA((e=>Math.sqrt(e))),Fx=aA(Ta,(e=>Math.sqrt(e))),_x={kernelName:Ta,backendName:"cpu",kernelFunc:Fx},Px=_g(((e,t)=>{let n=e-t;return n*n})),Ox=Hg(za,Px),Dx={kernelName:za,backendName:"cpu",kernelFunc:Ox},zx=nA(((e,t)=>{let{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),Lx=rA(Wa,zx),Wx={kernelName:Wa,backendName:"cpu",kernelFunc:Lx};function Bx(e,t,n,a){let r=Ws(e,t.dtype);for(let e=0;e<r.size;e++){let i=r.indexToLoc(e),s=new Array(i.length);for(let e=0;e<s.length;e++)s[e]=i[e]*n[e]+a[e];r.set(t.get(...s),...i)}return r}var Vx=class{constructor(e,t,n,a,r,i){this.separator=wr.encodeString(e),this.nGramWidths=t,this.leftPad=wr.encodeString(n),this.rightPad=wr.encodeString(a),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,i){for(let s=0;s<r;++s){let o=this.getPadWidth(i),l=Math.max(0,o-s),u=Math.max(0,o-(r-(s+1))),d=i-(l+u),p=t+(l>0?0:s-o),c=0;c+=l*this.leftPad.length;for(let t=0;t<d;++t)c+=e[p+t].length;c+=u*this.rightPad.length,c+=(l+u+d-1)*this.separator.length,n[a+s]=new Uint8Array(c);let h=n[a+s],f=0,m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<d-1;++t)m(e[p+t]),m(this.separator);if(d>0){m(e[p+d-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let r=a-1,i=wr.getArrayFromDType("int32",a);if(0===n||0===a){let e=new Array(n);for(let e=0;e<=r;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=r;++e){let n=t[e]-t[e-1],a=0;this.nGramWidths.forEach((e=>{a+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===a&&(a=1),i[e]=i[e-1]+a}let s=new Array(i[r]);for(let n=0;n<r;++n){let a=t[n],r=i[n];if(this.nGramWidths.forEach((i=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,i);this.createNGrams(e,a,s,r,l,i),r+=l})),this.preserveShort&&r===i[n]){let i=t[n+1]-t[n];if(0===i)continue;let o=i+2*this.padWidth,l=1;this.createNGrams(e,a,s,r,l,o)}}return[s,i]}};function Ux(e,t,n,a,r,i,s,o){return new Vx(n,a,r,i,s,o).compute(e,t)}function Gx(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){let r=t[0],i=e.indexOf(r);for(;-1!==i;){let t=e.subarray(0,i);(!n||0!==t.length)&&a.push(t),i=(e=e.subarray(i+1)).indexOf(r)}return void((!n||0!==e.length)&&a.push(e))}let r=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){let t=e.subarray(r,i);(!n||0!==t.length)&&a.push(t),r=i+1}}function Hx(e,t,n){let a=e.length,r=[],i=0,s=0,o=new Array(a);for(let l=0;l<a;++l){let a=r.length;Gx(e[l],t,n,r);let u=r.length-a;o[l]=u,i+=u,s=Math.max(s,u)}let l=wr.getArrayFromDType("int32",2*i),u=new Array(i),d=[a,s],p=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)l[2*p]=e,l[2*p+1]=t,u[p]=r[p],++p;return[l,u,d]}function jx(e,t){let n=wr.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=wr.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}var qx=_g(((e,t)=>e-t)),Xx=jg(((e,t,n,a)=>({real:e-n,imag:t-a}))),Kx=Hg(Ha,qx,Xx),Zx={kernelName:Ha,backendName:"cpu",kernelFunc:Kx};function Yx(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let a=Ws(n,e.dtype);for(let t=0;t<a.values.length;++t){let n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];let i=e.locToIndex(r);a.values[t]=e.values[i]}return a}var Jx=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function Qx(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){let r=a-n+1,i=t-n+1,s=Math.log(r),o=.5*Math.exp(2*s/3),l=.5*Math.sqrt(s*o*(r-o)/r)*Math.sign(i-r/2);Qx(e,t,Math.max(n,Math.floor(t-i*o/r+l)),Math.min(a,Math.floor(t+(r-i)*o/r+l)))}let r=e[t],i=n,s=a;for(wr.swap(e,n,t),Jx(e[a],r)>0&&wr.swap(e,n,a);i<s;){for(wr.swap(e,i,s),i++,s--;Jx(e[i],r)<0;)i+=1;for(;Jx(e[s],r)>0;)s-=1}0===Jx(e[n],r)?wr.swap(e,n,s):(s+=1,wr.swap(e,s,a)),s<=t&&(n=s+1),t<=s&&(a=s-1)}}function eb(e,t,n,a,r){let i=t[t.length-1],[s,o]=[e.length/i,i],l=wr.getTypedArrayFromDType(n,s*a),u=wr.getTypedArrayFromDType("int32",s*a);for(let t=0;t<s;t++){let n=t*o,i=e.subarray(n,n+o),s=new Array(i.length);i.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(Qx(s,a),s=s.slice(0,a)),r&&s.sort(Jx);let d=t*a,p=l.subarray(d,d+a),c=u.subarray(d,d+a);for(let e=0;e<a;e++)p[e]=s[e].value,c[e]=s[e].index}let d=t.slice();return d[d.length-1]=a,[Ws(d,n,l),Ws(d,"int32",u)]}function tb(e,t,n,a){let r=wr.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<r;e++)i[0]*=n[e];i[1]=n[r];for(let e=r+1;e<n.length;e++)i[2]*=n[e];let s=new Map,o=new Int32Array(n[r]),l=new ti(i,a,e),u=[],d=1===i[0]&&1===i[2];for(let t=0;t<n[r];t++){let n;if(d)n=e[t].toString();else{let e=[];for(let n=0;n<i[0];n++)for(let a=0;a<i[2];a++)e.push(l.get(n,t,a));n=e.join(",")}let a=s.get(n);if(null!=a)o[t]=a;else{let e=s.size;s.set(n,e),o[t]=e,u.push(t)}}let p=i.slice();p[1]=s.size;let c=new ti(p,a);u.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let a=0;a<i[2];a++)c.set(l.get(n,e,a),n,t,a)}));let h=n.slice();return h[r]=p[1],{outputValues:c.values,outputShape:h,indices:o}}var nb="4.7.0";lo("cpu",(()=>new Eg),1);var ab=aA(Ut,(e=>e>=0?e:Math.exp(e)-1)),rb={kernelName:Ut,backendName:"cpu",kernelFunc:ab};function ib(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:i}=a;Tg([r],"leakyRelu");let s=wr.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,l=wr.getTypedArrayFromDType("float32",s);for(let e=0;e<o.length;e++)l[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}var sb={kernelName:hn,backendName:"cpu",kernelFunc:ib},ob=_g(((e,t)=>e<0?t*e:e));function lb(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t;Tg([a,r],"prelu");let i=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,[o,l]=ob(a.shape,r.shape,i,s,"float32");return n.makeTensorInfo(l,"float32",o)}var ub={kernelName:Qn,backendName:"cpu",kernelFunc:lb},db=aA(oa,(e=>Math.max(0,e))),pb={kernelName:oa,backendName:"cpu",kernelFunc:db},cb=aA(ha,(e=>Math.min(Math.max(0,e),6))),hb={kernelName:ha,backendName:"cpu",kernelFunc:cb};function fb(e,t,n,a,r){if("linear"===n)return zg({inputs:{x:t},backend:e});if("relu"===n)return db({inputs:{x:t},backend:e});if("elu"===n)return ab({inputs:{x:t},backend:e});if("relu6"===n)return cb({inputs:{x:t},backend:e});if("prelu"===n)return lb({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return ib({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Ix({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function mb(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:i}=a,s=wr.sizeFromShape(r.shape),o=wr.inferFromImplicitShape(i,s),l=wr.sizeFromShape(o);wr.assert(s===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var yb={kernelName:la,backendName:"cpu",kernelFunc:mb};function gb(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;Tg([r,i],"matMul");let l=r.shape.length,u=i.shape.length,d=s?r.shape[l-2]:r.shape[l-1],p=o?i.shape[u-1]:i.shape[u-2],c=s?r.shape[l-1]:r.shape[l-2],h=o?i.shape[u-2]:i.shape[u-1],f=r.shape.slice(0,-2),m=i.shape.slice(0,-2),y=wr.sizeFromShape(f),g=wr.sizeFromShape(m),A=Ml.assertAndGetBroadcastShape(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([c,h]);wr.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${s} and transposeB=${o} must match.`));let x=o?[g,h,p]:[g,p,h],b=mb({inputs:{x:r},backend:n,attrs:{shape:s?[y,d,c]:[y,c,d]}}),v=mb({inputs:{x:i},backend:n,attrs:{shape:x}}),w=s?b.shape[1]:b.shape[2],k=s?b.shape[2]:b.shape[1],I=o?v.shape[1]:v.shape[2],S=Math.max(y,g),C=n.data.get(b.dataId).values,N=n.data.get(v.dataId).values,T=wr.computeStrides(b.shape),R=wr.computeStrides(v.shape),[E,$,M]=s?[T[0],1,T[1]]:[T[0],T[1],1],[F,_,P]=o?[1,R[1],R[0]]:[R[1],1,R[0]],O=k*I,D=Ws([S,k,I],b.dtype),z=D.values,L=n.blockSize;for(let e=0;e<S;e++){let t=e%y,n=e%g;for(let a=0;a<k;a+=L){let r=Math.min(a+L,k);for(let i=0;i<I;i+=L){let s=Math.min(i+L,I);for(let o=0;o<w;o+=L){let l=Math.min(o+L,w);for(let u=a;u<r;u++)for(let a=i;a<s;a++){let r=0;for(let e=o;e<l;e++)r+=C[t*E+u*$+e*M]*N[e*F+a*_+n*P];z[e*O+(u*I+a)]+=r}}}}}return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(A,D.dtype,D.values)}var Ab={kernelName:lt,backendName:"cpu",kernelFunc:gb},xb={kernelName:sr,backendName:"cpu",kernelFunc:function(e){let t,n,a,{inputs:r,backend:i,attrs:s}=e,{a:o,b:l,bias:u,preluActivationWeights:d}=r,{transposeA:p,transposeB:c,activation:h,leakyreluAlpha:f}=s,m=[];t=gb({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:c},backend:i}),u&&(n=Kg({inputs:{a:t,b:u},backend:i}),m.push(t),t=n),h&&(a=fb(i,t,h,d,f),m.push(t),t=a);for(let e of m)i.disposeIntermediateTensorInfo(e);return t}},bb=aA(He,(e=>Math.acos(e))),vb={kernelName:He,backendName:"cpu",kernelFunc:bb},wb=aA(je,(e=>Math.acosh(e))),kb={kernelName:je,backendName:"cpu",kernelFunc:wb},Ib={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,a=t;Tg(t,"addN");let r=a.map((e=>n.data.get(e.dataId).values)),i=Ws(a[0].shape,a[0].dtype),s=i.values;for(let e=0;e<a.length;e++){let t=r[e];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}},Sb={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;Tg(r,"all");let o=wr.parseAxisParam(i,r.shape),l=o,u=Pf.getAxesPermutation(l,r.shape.length),d=r;null!=u&&(d=ix({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Pf.getInnerMostAxes(l.length,r.shape.length)),Pf.assertAxesAreInnerMostDims("all",l,d.shape.length);let[p,c]=Pf.computeOutAndReduceShapes(d.shape,l),h=wr.sizeFromShape(c),f=wr.makeZerosTypedArray(wr.sizeFromShape(p),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*h,n=m[t];for(let e=0;e<h;++e){let a=m[t+e];n=n&&a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let y=n.makeTensorInfo(p,d.dtype,f);if(s){let e=mb({inputs:{x:y},backend:n,attrs:{shape:Pf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Cb={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;Tg(r,"any");let o=wr.parseAxisParam(i,r.shape),l=o,u=Pf.getAxesPermutation(l,r.shape.length),d=r;null!=u&&(d=ix({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Pf.getInnerMostAxes(l.length,r.shape.length)),Pf.assertAxesAreInnerMostDims("any",l,d.shape.length);let[p,c]=Pf.computeOutAndReduceShapes(d.shape,l),h=wr.sizeFromShape(c),f=wr.makeZerosTypedArray(wr.sizeFromShape(p),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*h,n=m[t];for(let e=0;e<h;++e){let a=m[t+e];n=n||a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let y=n.makeTensorInfo(p,d.dtype,f);if(s){let e=mb({inputs:{x:y},backend:n,attrs:{shape:Pf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Nb={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a;Tg(r,"argMax");let s=wr.parseAxisParam(i,r.shape),o=Pf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=ix({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Pf.getInnerMostAxes(s.length,l.shape.length)),s=[s[0]],Pf.assertAxesAreInnerMostDims("argMax",s,l.shape.length);let[d,p]=Pf.computeOutAndReduceShapes(l.shape,s),c=wr.sizeFromShape(d),h=wr.makeZerosTypedArray(c,"int32"),f=wr.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<h.length;++e){let t=e*f,n=m[t],a=0;for(let e=0;e<f;++e){let r=m[t+e];r>n&&(n=r,a=e)}h[e]=a}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",h)}},Tb={kernelName:Je,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a;Tg(r,"argMin");let s=wr.parseAxisParam(i,r.shape),o=Pf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=ix({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Pf.getInnerMostAxes(s.length,l.shape.length)),s=[s[0]],Pf.assertAxesAreInnerMostDims("argMin",s,l.shape.length);let[d,p]=Pf.computeOutAndReduceShapes(l.shape,s),c=wr.sizeFromShape(d),h=wr.makeZerosTypedArray(c,"int32"),f=wr.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<h.length;++e){let t=e*f,n=m[t],a=0;for(let e=0;e<f;++e){let r=m[t+e];r<n&&(n=r,a=e)}h[e]=a}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",h)}},Rb=aA(Qe,(e=>Math.asin(e))),Eb={kernelName:Qe,backendName:"cpu",kernelFunc:Rb},$b=aA(et,(e=>Math.asinh(e))),Mb={kernelName:et,backendName:"cpu",kernelFunc:$b},Fb=aA(tt,(e=>Math.atan(e))),_b={kernelName:tt,backendName:"cpu",kernelFunc:Fb},Pb=_g(((e,t)=>Math.atan2(e,t))),Ob=Hg(at,Pb),Db={kernelName:at,backendName:"cpu",kernelFunc:Ob},zb=aA(nt,(e=>Math.atanh(e))),Lb={kernelName:nt,backendName:"cpu",kernelFunc:zb};function Wb(e,t,n,a,r,i){let s=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,c=r.padInfo.top,h=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ws(r.outShape,n),y=m.values,g=r.outShape[1]*r.outShape[2]*r.outShape[3],A=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){let n=t*g,m=t*a[0];for(let t=0;t<r.inChannels;++t)for(let g=0;g<r.outHeight;++g){let b=g*s-c,v=Math.max(0,b),w=Math.min(r.inHeight,d+b),k=n+g*A;for(let n=0;n<r.outWidth;++n){let s=n*o-h,d=Math.max(0,s),c=Math.min(r.inWidth,p+s),g=f,A=0,b=0;for(let n=v;n<w;n+=l){let r=m+n*a[1];for(let n=d;n<c;n+=u){let s=e[r+n*a[2]+t];"max"===i&&s>g?g=s:"avg"===i&&(A+=s,b++)}if(isNaN(g))break}y[k+n*x+t]="avg"===i?A/b:g}}}return m}function Bb(e,t,n,a,r=!1,i=!1){let s=Ws(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterHeight,c=a.effectiveFilterWidth,h=a.padInfo.top,f=a.padInfo.left,m=Ws(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){let y=n*o-h,g=y;for(;g<0;)g+=u;let A=Math.min(a.inHeight,p+y);for(let o=0;o<a.outWidth;++o){let p=o*l-f,h=p;for(;h<0;)h+=d;let x=Math.min(a.inWidth,c+p),b=Number.NEGATIVE_INFINITY,v=-1;for(let n=g;n<A;n+=u){let s=n-y;for(let o=h;o<x;o+=d){let l=o-p,u=m.get(e,n,o,t);u>b&&(b=u,v=r?i?((e*a.inHeight+n)*a.inWidth+o)*a.inChannels+t:(n*a.inWidth+o)*a.inChannels+t:s*c+l)}}s.set(v,e,n,o,t)}}return s}function Vb(e,t,n,a,r,i){let s=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,d=r.dilationHeight,p=r.dilationWidth,c=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,y=r.padInfo.top,g=r.padInfo.left,A="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ws(r.outShape,n),b=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],w=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let t=0;t<r.batchSize;++t){let n=t*v,x=t*a[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outDepth;++v){let S=v*s-m,C=S;for(;C<0;)C+=u;let N=Math.min(r.inDepth,c+S),T=n+v*w;for(let n=0;n<r.outHeight;++n){let s=n*o-y,c=s;for(;c<0;)c+=d;let m=Math.min(r.inHeight,h+s),v=T+n*k;for(let n=0;n<r.outWidth;++n){let s=n*l-g,o=s;for(;o<0;)o+=p;let h=Math.min(r.inWidth,f+s),y=v+n*I,w=A,k=0,S=0;for(let n=C;n<N;n+=u){let r=x+n*a[1];for(let n=c;n<m;n+=d){let s=r+n*a[2];for(let n=o;n<h;n+=p){let r=e[s+n*a[3]+t];if("max"===i&&r>w?w=r:"avg"===i&&(k+=r,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}b[y+t]="avg"===i?k/Math.max(S,1):w}}}}return x}var Ub={kernelName:rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Tg(r,"avgPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;wr.assert(Pf.eitherStridesOrDilationsAreOne(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));let u,d=Pf.computePool2DInfo(r.shape,i,s,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&wr.arraysEqual(d.inShape,d.outShape))u=zg({inputs:{x:r},backend:n});else{let e=n.data.get(r.dataId).values,t=wr.computeStrides(r.shape),a=Wb(e,r.shape,r.dtype,t,d,"avg");u=n.makeTensorInfo(d.outShape,r.dtype,a.values)}return u}},Gb={kernelName:st,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a;Tg(r,"avgPool3d");let d=Pf.computePool3DInfo(r.shape,i,s,1,o,l,u),p=Vb(n.data.get(r.dataId).values,r.shape,r.dtype,wr.computeStrides(r.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},Hb={kernelName:ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a;Tg([r,i],"avgPool3DGrad");let d=Pf.computePool3DInfo(i.shape,s,o,1,l,u),p=d.strideDepth,c=d.strideHeight,h=d.strideWidth,f=d.filterDepth,m=d.filterHeight,y=d.filterWidth,g=d.dilationDepth,A=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterDepth,v=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=b-1-d.padInfo.front,I=w-1-d.padInfo.left,S=v-1-d.padInfo.top,C=Ws(i.shape,"float32"),N=1/(f*m*y),T=n.bufferSync(r);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let a=0;a<d.inHeight;++a)for(let r=0;r<d.inWidth;++r){let i=n-k,s=a-S,o=r-I,l=0;for(let n=0;n<b;n+=g){let a=(i+n)/p;if(!(a<0||a>=d.outDepth||Math.floor(a)!==a))for(let n=0;n<v;n+=A){let r=(s+n)/c;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<w;n+=x){let i=(o+n)/h;i<0||i>=d.outWidth||Math.floor(i)!==i||(l+=T.get(e,a,r,i,t))}}}C.set(l*N,e,n,a,r,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},jb={kernelName:it,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i;Tg([r,i],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,d=Pf.computePool2DInfo(s.shape,o,l,1,u),p=d.strideHeight,c=d.strideWidth,h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,y=d.dilationWidth,g=d.effectiveFilterHeight,A=d.effectiveFilterWidth,x=A-1-d.padInfo.left,b=g-1-d.padInfo.top,v=Ws(s.shape,"float32"),w=1/(h*f),k=n.data.get(r.dataId).values,I=Ws(r.shape,"float32",k);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){let r=n-b,i=a-x,s=0;for(let n=0;n<g;n+=m){let a=(r+n)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<A;n+=y){let r=(i+n)/c;r<0||r>=d.outWidth||Math.floor(r)!==r||(s+=I.get(e,a,r,t))}}v.set(s*w,e,n,a,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},qb={kernelName:tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,scale:i,offset:s,mean:o,variance:l}=t;wr.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),wr.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),wr.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Tg([r,o,l,i,s],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);let d=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,c=n.data.get(l.dataId).values,h=i?n.data.get(i.dataId).values:new Float32Array([1]),f=s?n.data.get(s.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),y=f.length,g=h.length,A=c.length,x=p.length,b=0,v=0,w=0,k=0;for(let e=0;e<d.length;++e)m[e]=f[b++]+(d[e]-p[v++])*h[w++]/Math.sqrt(c[k++]+u),b>=y&&(b=0),v>=x&&(v=0),w>=g&&(w=0),k>=A&&(k=0);return n.makeTensorInfo(r.shape,r.dtype,m)}},Xb={kernelName:ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a;Tg([r],"batchToSpaceND");let o=i.reduce(((e,t)=>e*t)),l=Pf.getReshaped(r.shape,i,o),u=Pf.getPermuted(l.length,i.length),d=Pf.getReshapedPermuted(r.shape,i,o),p=Pf.getSliceBeginCoords(s,i.length),c=Pf.getSliceSize(d,s,i.length),h=mb({inputs:{x:r},backend:n,attrs:{shape:l}}),f=ix({inputs:{x:h},backend:n,attrs:{perm:u}}),m=mb({inputs:{x:f},backend:n,attrs:{shape:d}}),y=Nx({inputs:{x:m},backend:n,attrs:{begin:p,size:c}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}},Kb={kernelName:dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s}=a,o=Yg(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,o)}},Zb={kernelName:ht,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,i=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,o=Pf.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Yb=aA(yt,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Jb={kernelName:yt,backendName:"cpu",kernelFunc:Yb},Qb={kernelName:At,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,a=new Float32Array(wr.sizeFromShape(t.shape)),r=n.data.get(t.dataId),i=r.complexTensorInfos.real,s=r.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};function ev(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}var tv={kernelName:un,backendName:"cpu",kernelFunc:ev};function nv(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,i=wr.parseAxisParam(r,t[0].shape)[0],s=t.map((e=>e.shape));Pf.assertParamsConsistent(s,i);let o=Pf.computeOutShape(t.map((e=>e.shape)),i);if(0===wr.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>wr.sizeFromShape(e.shape)>0));if(1===l.length)return zg({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map((e=>Wg({inputs:{input:e},backend:n}))),t=l.map((e=>ev({inputs:{input:e},backend:n}))),a=nv({inputs:e,backend:n,attrs:{axis:i}}),r=nv({inputs:t,backend:n,attrs:{axis:i}}),s=Pg({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),s}let u=l.map((e=>{let t=[-1,wr.sizeFromShape(e.shape.slice(i))];return mb({inputs:{x:e},backend:n,attrs:{shape:t}})})),d=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=Pf.computeOutShape(u.map((e=>e.shape)),1);let p=1===u[0].shape[0],c=lA(d,o,t[0].dtype,p),h=Pf.computeOutShape(l.map((e=>e.shape)),i),f=n.makeTensorInfo(h,t[0].dtype,c);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var av={kernelName:xt,backendName:"cpu",kernelFunc:nv};function rv(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=a;Tg([r,i],"conv2d");let p=Pf.convertConv2DDataFormat(l),c=Pf.computeConv2DInfo(r.shape,i.shape,s,u,o,d,!1,p),h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,y=c.dilationWidth,g=c.padInfo.left,A=c.padInfo.top,x="channelsLast"===c.dataFormat,b=new ti(c.outShape,r.dtype),v=wr.computeStrides(r.shape),w=wr.computeStrides(i.shape),k=v[0],I=x?v[1]:v[2],S=x?v[2]:1,C=x?1:v[1],N=b.strides[0],T=x?b.strides[1]:b.strides[2],R=x?b.strides[2]:1,E=x?1:b.strides[1],$=n.data.get(r.dataId).values,M=n.data.get(i.dataId).values,F=b.values;for(let e=0;e<c.batchSize;++e){let t=e*k,n=e*N;for(let e=0;e<c.outHeight;++e){let a=n+e*T,r=e*c.strideHeight-A;for(let e=0;e<h;++e){let n=r+e*m;if(n<0||n>=c.inHeight)continue;let i=e*w[0],s=t+n*I;for(let e=0;e<c.outWidth;++e){let t=a+e*R,n=e*c.strideWidth-g;for(let e=0;e<f;++e){let a=n+e*y;if(a<0||a>=c.inWidth)continue;let r=s+a*S,o=i+e*w[1];for(let e=0;e<c.inChannels;++e){let n=$[r+e*C];for(let e=0;e<c.outChannels;++e)F[t+e*E]+=n*M[o+e];o+=c.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,F)}var iv={kernelName:bt,backendName:"cpu",kernelFunc:rv},sv={kernelName:vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=a;Tg([r,i],"conv2dBackpropFilter");let p=Pf.convertConv2DDataFormat(l),c=Pf.computeConv2DInfo(r.shape,d,s,1,o,u,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:y}=c,g="channelsLast"===c.dataFormat,A=new ti(c.filterShape,"float32"),x=c.padInfo.left,b=c.padInfo.top,v=n.data.get(r.dataId).values,w=n.data.get(i.dataId).values,k=new ti(r.shape,r.dtype,v),I=new ti(i.shape,i.dtype,w);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(c.outHeight,(c.inHeight+b-e)/h);for(let a=0;a<y;++a){let r=Math.max(0,Math.ceil((x-a)/f)),i=Math.min(c.outWidth,(c.inWidth+x-a)/f);for(let s=0;s<c.inChannels;++s)for(let o=0;o<c.outChannels;++o){let l=0;for(let u=0;u<c.batchSize;++u)for(let d=t;d<n;++d){let t=e+d*h-b;for(let e=r;e<i;++e){let n=a+e*f-x;l+=g?k.get(u,t,n,s)*I.get(u,d,e,o):k.get(u,s,t,n)*I.get(u,o,d,e)}}A.set(l,e,a,s,o)}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},ov={kernelName:wt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{inputShape:s,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=a;Tg([r,i],"conv2dBackpropInput");let p=wr.computeStrides(i.shape),c=wr.computeStrides(r.shape),h=Pf.convertConv2DDataFormat(u),f=Pf.computeConv2DInfo(s,i.shape,o,1,l,d,!1,h),m=new ti(f.inShape,"float32"),y=m.values,g=n.data.get(r.dataId).values,A=n.data.get(i.dataId).values,[x,b,v]=p,{batchSize:w,filterHeight:k,filterWidth:I,inChannels:S,inHeight:C,inWidth:N,outChannels:T,outHeight:R,outWidth:E,strideHeight:$,strideWidth:M}=f;h=f.dataFormat;let F=k-1-f.padInfo.top,_=I-1-f.padInfo.left,P="channelsLast"===h,O=m.strides[0],D=P?m.strides[1]:m.strides[2],z=P?m.strides[2]:1,L=P?1:m.strides[1],W=c[0],B=P?c[1]:c[2],V=P?c[2]:1,U=P?1:c[1];for(let e=0;e<w;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){let a=n-F,r=Math.max(0,Math.ceil(a/$)),i=Math.min(R,(k+a)/$);for(let s=0;s<N;++s){let o=s-_,l=Math.max(0,Math.ceil(o/M)),u=Math.min(E,(I+o)/M),d=0;for(let n=r;n<i;++n){let r=n*$-a;for(let a=l;a<u;++a){let i=W*e+B*n+V*a,s=x*(k-1-r)+b*(I-1-(a*M-o))+v*t;for(let e=0;e<T;++e)d+=g[i+U*e]*A[s+e]}}y[O*e+D*n+z*s+L*t]=d}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},lv={kernelName:kt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a;Tg([r,i],"conv3d");let u=Pf.computeConv3DInfo(r.shape,i.shape,s,l,o),{filterDepth:d,filterHeight:p,filterWidth:c,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:y}=u,g=y.front,A=y.left,x=y.top,b=new ti(u.outShape,r.dtype),v=n.data.get(r.dataId).values,w=n.data.get(i.dataId).values,k=b.values,I=wr.computeStrides(r.shape),S=wr.computeStrides(i.shape);for(let e=0;e<u.batchSize;++e){let t=e*I[0],n=e*b.strides[0];for(let e=0;e<u.outDepth;++e){let a=n+e*b.strides[1],r=e*u.strideDepth-g;for(let e=0;e<d;++e){let n=r+e*h;if(n<0||n>=u.inDepth)continue;let i=e*S[0],s=t+n*I[1];for(let e=0;e<u.outHeight;++e){let t=a+e*b.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let a=n+e*f;if(a<0||a>=u.inHeight)continue;let r=i+e*S[1],o=s+a*I[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,a=e*u.strideWidth-A;for(let e=0;e<c;++e){let t=a+e*m;if(t<0||t>=u.inWidth)continue;let i=r+e*S[2],s=o+t*u.inChannels,l=i;for(let e=0;e<u.inChannels;++e){let t=v[s+e];for(let e=0;e<u.outChannels;++e)k[n+e]+=t*w[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},uv={kernelName:It,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a;Tg([r,i],"conv3dBackpropFilterV2");let u=wr.computeStrides(r.shape),d=wr.computeStrides(i.shape),p=Pf.computeConv3DInfo(r.shape,l,s,1,o),c=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,y=p.filterHeight,g=p.filterWidth,A=new ti(p.filterShape,"float32"),x=A.values,[b,v,w,k]=A.strides,I=n.data.get(i.dataId).values,[S,C,N,T]=d,R=n.data.get(r.dataId).values,[E,$,M,F]=u,_=p.padInfo.front,P=p.padInfo.left,O=p.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((_-e)/c)),n=Math.min(p.outDepth,(p.inDepth+_-e)/c),a=e*b;for(let r=0;r<y;++r){let i=Math.max(0,Math.ceil((O-r)/h)),s=Math.min(p.outHeight,(p.inHeight+O-r)/h),o=r*v+a;for(let a=0;a<g;++a){let l=Math.max(0,Math.ceil((P-a)/f)),u=Math.min(p.outWidth,(p.inWidth+P-a)/f),d=a*w+o;for(let o=0;o<p.inChannels;++o){let m=o*k+d;for(let d=0;d<p.outChannels;++d){let y=0;for(let m=0;m<p.batchSize;++m){let p=m*E,g=m*S;for(let m=t;m<n;++m){let t=(e+m*c-_)*$+p,n=m*C+g;for(let e=i;e<s;++e){let i=(r+e*h-O)*M+t,s=e*N+n;for(let e=l;e<u;++e){let t=e*T+s;y+=R[(a+e*f-P)*F+i+o]*I[t+d]}}}}x[m+d]=y}}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},dv={kernelName:St,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{pad:s,strides:o,inputShape:l}=a;Tg([r],"conv3dBackpropInputV2");let u=wr.computeStrides(r.shape),d=wr.computeStrides(i.shape),p=Pf.computeConv3DInfo(l,i.shape,o,1,s),c=new ti(p.inShape,"float32"),h=c.values,[f,m,y,g]=c.strides,A=n.data.get(r.dataId).values,[x,b,v,w]=u,k=n.data.get(i.dataId).values,[I,S,C,N]=d,{batchSize:T,filterDepth:R,filterHeight:E,filterWidth:$,inChannels:M,inDepth:F,inHeight:_,inWidth:P,outChannels:O,outDepth:D,outHeight:z,outWidth:L,strideDepth:W,strideHeight:B,strideWidth:V}=p,U=R-1-p.padInfo.front,G=E-1-p.padInfo.top,H=$-1-p.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<M;++t)for(let n=0;n<F;++n){let a=n-U,r=Math.max(0,Math.ceil(a/W)),i=Math.min(D,(R+a)/W);for(let s=0;s<_;++s){let o=s-G,l=Math.max(0,Math.ceil(o/B)),u=Math.min(z,(E+o)/B);for(let d=0;d<P;++d){let p=d-H,c=Math.max(0,Math.ceil(p/V)),T=Math.min(L,($+p)/V),M=0;for(let n=r;n<i;++n){let r=n*W-a;for(let a=l;a<u;++a){let i=a*B-o;for(let s=c;s<T;++s){let o=x*e+b*n+v*a+w*s,l=I*(R-1-r)+S*(E-1-i)+C*($-1-(s*V-p))+N*t;for(let e=0;e<O;++e)M+=A[o+e]*k[l+e]}}}h[f*e+m*n+y*s+g*d+t]=M}}}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},pv=aA(Ct,(e=>Math.cos(e))),cv={kernelName:Ct,backendName:"cpu",kernelFunc:pv},hv=aA(Nt,(e=>Math.cosh(e))),fv={kernelName:Nt,backendName:"cpu",kernelFunc:hv},mv={kernelName:Et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:o,method:l,extrapolationValue:u}=a,[d,p,c,h]=r.shape,f=i.shape[0],[m,y]=o,g=Ws([f,m,y,h],"float32"),A=n.data.get(i.dataId).values,x=n.data.get(s.dataId).values,b=n.data.get(r.dataId).values,v=wr.computeStrides(r.shape),w=wr.computeStrides(g.shape);for(let e=0;e<f;e++){let t=4*e,n=A[t],a=A[t+1],r=A[t+2],i=A[t+3],s=x[e];if(s>=d)continue;let o=m>1?(r-n)*(p-1)/(m-1):0,f=y>1?(i-a)*(c-1)/(y-1):0;for(let t=0;t<m;t++){let d=m>1?n*(p-1)+t*o:.5*(n+r)*(p-1);if(d<0||d>p-1)for(let n=0;n<y;n++)for(let a=0;a<h;a++){let r=a+n*w[2]+t*w[1]+e*w[0];g.values[r]=u}else if("bilinear"===l){let n=Math.floor(d),r=Math.ceil(d),o=d-n;for(let l=0;l<y;l++){let d=y>1?a*(c-1)+l*f:.5*(a+i)*(c-1);if(d<0||d>c-1){for(let n=0;n<h;n++){let a=n+l*w[2]+t*w[1]+e*w[0];g.values[a]=u}continue}let p=Math.floor(d),m=Math.ceil(d),A=d-p;for(let a=0;a<h;a++){let i=a+p*v[2]+n*v[1]+s*v[0],u=b[i];i=a+m*v[2]+n*v[1]+s*v[0];let d=b[i];i=a+p*v[2]+r*v[1]+s*v[0];let c=b[i];i=a+m*v[2]+r*v[1]+s*v[0];let h=u+(d-u)*A,f=c+(b[i]-c)*A;i=a+l*w[2]+t*w[1]+e*w[0],g.values[i]=h+(f-h)*o}}}else for(let n=0;n<y;++n){let r=y>1?a*(c-1)+n*f:.5*(a+i)*(c-1);if(r<0||r>c-1){for(let a=0;a<h;a++){let r=a+n*w[2]+t*w[1]+e*w[0];g.values[r]=u}continue}let o=Math.round(r),l=Math.round(d);for(let a=0;a<h;a++){let r=a+o*v[2]+l*v[1]+s*v[0],i=a+n*w[2]+t*w[1]+e*w[0];g.values[i]=b[r]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},yv={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;Tg(r,"cumprod");let l=Pf.getAxesPermutation([i],r.shape.length),u=r;null!=l&&(u=ix({inputs:{x:r},backend:n,attrs:{perm:l}}));let d=Pf.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=fi(u.dtype,"int32"),c=wr.makeOnesTypedArray(wr.sizeFromShape(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)c[n]=s?1:h[n];else{let a=m(e,t-1);c[n]=s?h[a]*c[a]:h[n]*c[a]}}let y=n.makeTensorInfo(u.shape,p,c);if(null!=l){let e=ix({inputs:{x:y},backend:n,attrs:{perm:Pf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),e}return y}},gv={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;Tg(r,"cumsum");let l=Pf.getAxesPermutation([i],r.shape.length),u=r;null!=l&&(u=ix({inputs:{x:r},backend:n,attrs:{perm:l}}));let d=Pf.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=fi(u.dtype,"int32"),c=wr.makeZerosTypedArray(wr.sizeFromShape(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)c[n]=s?0:h[n];else{let a=m(e,t-1);c[n]=s?h[a]+c[a]:h[n]+c[a]}}let y=n.makeTensorInfo(u.shape,p,c);if(null!=l){let e=ix({inputs:{x:y},backend:n,attrs:{perm:Pf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),e}return y}},Av={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s,binaryOutput:o}=a;if(1===r.shape.length){let e=Yg(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,e)}if(2===r.shape.length){let e=Jg(n.bufferSync(r),n.bufferSync(i),s,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},xv={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:i,dataFormat:s}=a;wr.assert("NHWC"===s,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${s}`));let o=r.shape[0],l=r.shape[1],u=r.shape[2],d=r.shape[3],p=l*i,c=u*i,h=d/(i*i),f=n.data.get(r.dataId).values,m=new Float32Array(o*p*c*h),y=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){let n=Math.floor(t/i),a=t%i;for(let t=0;t<c;++t){let r=Math.floor(t/i),s=(a*i+t%i)*h;for(let t=0;t<h;++t){let a=t+s+d*(r+u*(n+l*e));m[y++]=f[a]}}}return n.makeTensorInfo([o,p,c,h],r.dtype,m)}};function bv(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l,dimRoundingMode:u}=a;Tg([r,i],"depthwiseConv2DNative");let d=wr.computeStrides(r.shape),p=wr.computeStrides(i.shape),c=l;null==c&&(c=[1,1]),wr.assert(Pf.eitherStridesOrDilationsAreOne(s,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));let h=Pf.computeConv2DInfo(r.shape,i.shape,s,c,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:y,dilationWidth:g,padInfo:A}=h,x=A.left,b=A.top,v=h.outChannels/h.inChannels,w=new ti(h.outShape,r.dtype),k=n.data.get(r.dataId).values,I=n.data.get(i.dataId).values,S=w.values;for(let e=0;e<h.batchSize;++e){let t=e*d[0],n=e*w.strides[0];for(let e=0;e<h.outHeight;++e){let a=n+e*w.strides[1],r=e*h.strideHeight-b;for(let e=0;e<f;++e){let n=r+e*y;if(n<0||n>=h.inHeight)continue;let i=e*p[0],s=t+n*d[1];for(let e=0;e<h.outWidth;++e){let t=a+e*w.strides[2],n=e*h.strideWidth-x;for(let e=0;e<m;++e){let a=n+e*g;if(a<0||a>=h.inWidth)continue;let r=i+e*p[1],o=s+a*h.inChannels,l=t,u=r;for(let e=0;e<h.inChannels;++e){let t=k[o+e];for(let e=0;e<v;++e)S[l+e]+=t*I[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var vv={kernelName:Ft,backendName:"cpu",kernelFunc:bv},wv={kernelName:_t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=a;Tg([r,i],"depthwiseConv2dNativeBackpropFilter");let p=Pf.computeConv2DInfo(r.shape,d,s,o,l,u,!0),{strideHeight:c,strideWidth:h,filterHeight:f,filterWidth:m}=p,y=new ti(p.filterShape,"float32"),g=p.padInfo.left,A=p.padInfo.top,x=p.outChannels/p.inChannels,b=n.data.get(r.dataId).values,v=new ti(r.shape,r.dtype,b),w=n.data.get(i.dataId).values,k=new ti(i.shape,i.dtype,w);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((A-e)/c)),n=Math.min(p.outHeight,(p.inHeight+A-e)/c);for(let a=0;a<m;++a){let r=Math.max(0,Math.ceil((g-a)/h)),i=Math.min(p.outWidth,(p.inWidth+g-a)/h);for(let s=0;s<p.outChannels;++s){let o=Math.trunc(s/x),l=s%x,u=0;for(let l=0;l<p.batchSize;++l)for(let d=t;d<n;++d){let t=e+d*c-A;for(let e=r;e<i;++e){let n=a+e*h-g;u+=v.get(l,t,n,o)*k.get(l,d,e,s)}}y.set(u,e,a,o,l)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},kv={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=a;Tg([r,i],"depthwiseConv2DNativeBackpropInput");let p=wr.computeStrides(r.shape),c=wr.computeStrides(i.shape),h=Pf.computeConv2DInfo(d,i.shape,s,o,l,u,!0),f=new ti(h.inShape,"float32"),m=f.values,[y,g,A]=f.strides,x=n.data.get(r.dataId).values,[b,v,w]=p,k=n.data.get(i.dataId).values,[I,S,C]=c,{batchSize:N,filterHeight:T,filterWidth:R,inChannels:E,inHeight:$,inWidth:M,outChannels:F,outHeight:_,outWidth:P,strideHeight:O,strideWidth:D}=h,z=T-1-h.padInfo.top,L=R-1-h.padInfo.left,W=F/E;for(let e=0;e<N;++e)for(let t=0;t<E;++t)for(let n=0;n<$;++n){let a=n-z,r=Math.max(0,Math.ceil(a/O)),i=Math.min(_,(T+a)/O);for(let s=0;s<M;++s){let o=s-L,l=Math.max(0,Math.ceil(o/D)),u=Math.min(P,(R+o)/D),d=0;for(let n=r;n<i;++n){let r=n*O-a;for(let a=l;a<u;++a){let i=b*e+v*n+w*a,s=I*(T-1-r)+S*(R-1-(a*D-o))+C*t;for(let e=0;e<W;++e)d+=x[i+(t*W+e)]*k[s+e]}}m[y*e+g*n+A*s+t]=d}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Iv={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=wr.sizeFromShape(a.shape),i=n.data.get(a.dataId).values,s=Ws([r,r],a.dtype),o=s.values;for(let e=0;e<i.length;e++)o[e*r+e]=i[e];let l=[...a.shape,...a.shape];return n.makeTensorInfo(l,s.dtype,s.values)}},Sv={kernelName:Dt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r}=e,{strides:i,pad:s,dilations:o}=n,l=t,u=l.data.get(a.dataId).values,d=a.shape.length,p=l.data.get(r.dataId).values,c=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:y,outHeight:g,outWidth:A,padInfo:x,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:C}=Pf.computeDilation2DInfo(a.shape,r.shape,i,s,"NHWC",o),N=wr.sizeFromShape(C),T=C.length,R=wr.getArrayFromDType(a.dtype,N);for(let e=0;e<h;++e)for(let t=0;t<g;++t){let n=t*b-x.top;for(let i=0;i<A;++i){let s=i*v-x.left;for(let o=0;o<y;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<w;++t){let i=n+t*I;if(i>=0&&i<f)for(let n=0;n<k;++n){let h=s+n*S;if(h>=0&&h<m){let s=wr.locToIndex([e,i,h,o],d,wr.computeStrides(a.shape)),f=wr.locToIndex([t,n,o],c,wr.computeStrides(r.shape)),m=u[s]+p[f];m>l&&(l=m)}}}R[wr.locToIndex([e,t,i,o],T,wr.computeStrides(C))]=l}}}return{dataId:l.write(wr.toTypedArray(R,a.dtype),C,a.dtype),shape:C,dtype:a.dtype}}},Cv={kernelName:Lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:i}=e,{strides:s,pad:o,dilations:l}=n,u=t,d=wr.toNestedArray(a.shape,u.data.get(a.dataId).values),p=wr.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:c,inHeight:h,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:v,filterWidth:w,dilationHeight:k,dilationWidth:I,outShape:S}=Pf.computeDilation2DInfo(a.shape,r.shape,s,o,"NHWC",l);wr.assert(i.rank===S.length,(()=>`Error in ${Lt}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));let C=wr.toNestedArray(S,u.data.get(i.dataId).values),N=wr.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*x-A.top;for(let a=0;a<g;++a){let r=a*b-A.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){let a=n+t*k;if(a>=0&&a<h)for(let n=0;n<w;++n){let u=r+n*I;if(u>=0&&u<f){let r=d[e][a][u][i]+p[t][n][i];r>s&&(s=r,o=t,l=n)}}}N[o][l][i]+=C[e][t][a][i]}}}return{dataId:u.write(wr.toTypedArray(N,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Nv={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:i}=e,{strides:s,pad:o,dilations:l}=n,u=t,d=wr.toNestedArray(a.shape,u.data.get(a.dataId).values),p=wr.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:c,inHeight:h,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:v,filterWidth:w,dilationHeight:k,dilationWidth:I,outShape:S}=Pf.computeDilation2DInfo(a.shape,r.shape,s,o,"NHWC",l);wr.assert(i.rank===S.length,(()=>`Error in ${zt}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));let C=wr.toNestedArray(S,u.data.get(i.dataId).values),N=wr.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*x-A.top;for(let a=0;a<g;++a){let r=a*b-A.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<v;++t){let a=n+t*k;if(a>=0&&a<h)for(let n=0;n<w;++n){let u=r+n*I;if(u>=0&&u<f){let r=d[e][a][u][i]+p[t][n][i];r>s&&(s=r,o=a,l=u)}}}N[e][o][l][i]+=C[e][t][a][i]}}}return{dataId:u.write(wr.toTypedArray(N,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Tv={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:i,options:s}=a,{contextOptions:o,imageOptions:l}=s||{},u=(null==l?void 0:l.alpha)||1,d=(null==o?void 0:o.contextType)||"2d";if("2d"!==d)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let p=i.getContext(d,(null==o?void 0:o.contextAttributes)||{});if(null==p)throw new Error(`Could not get the context with ${d} type.`);let[c,h]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,y="float32"===r.dtype?255:1,g=new Uint8ClampedArray(h*c*4);for(let e=0;e<c*h;++e){let t=[0,0,0,255*u];for(let n=0;n<f;n++){let a=m[e*f+n];if("float32"===r.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===r.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===f?(t[0]=a*y,t[1]=a*y,t[2]=a*y):t[n]=a*y}let n=4*e;g[n+0]=Math.round(t[0]),g[n+1]=Math.round(t[1]),g[n+2]=Math.round(t[2]),g[n+3]=Math.round(t[3])}i.width=h,i.height=c;let A=new ImageData(g,h,c);return p.putImageData(A,0,0),r}};function Rv(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{axis:s,keepDims:o}=r;Tg(i,"sum"),t="bool"===i.dtype?Ug({inputs:{x:i},backend:a,attrs:{dtype:"int32"}}):zg({inputs:{x:i},backend:a});let l=t.shape.length,u=wr.parseAxisParam(s,t.shape),d=Pf.getAxesPermutation(u,l),p=u,c=t;null!=d&&(c=ix({inputs:{x:t},backend:a,attrs:{perm:d}}),p=Pf.getInnerMostAxes(p.length,l)),Pf.assertAxesAreInnerMostDims("sum",p,c.shape.length);let[h,f]=Pf.computeOutAndReduceShapes(c.shape,p),m=Dg(a,h,Pf.upcastType(c.dtype,"int32")),y=wr.sizeFromShape(f),g=a.data.get(m.dataId).values,A=a.data.get(c.dataId).values;for(let e=0;e<g.length;++e){let t=e*y,n=0;for(let e=0;e<y;++e)n+=A[t+e];g[e]=n}if(o){let e=m;m=mb({inputs:{x:m},backend:a,attrs:{shape:Pf.expandShapeToKeepDim(m.shape,u)}}),a.disposeIntermediateTensorInfo(e)}return a.disposeIntermediateTensorInfo(t),null!=d&&a.disposeIntermediateTensorInfo(c),m}var Ev={kernelName:Ra,backendName:"cpu",kernelFunc:Rv},$v={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,i=t,{allDims:s,summedDims:o,idDims:l}=Pf.decodeEinsumEquation(r,i.length);Pf.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:d}=Pf.getEinsumComputePath(o,l),p=d.length,c=null,h=s.length,f=[];for(let e=0;e<p;++e){for(let t of d[e]){let e,{permutationIndices:a,expandDims:r}=Pf.getEinsumPermutation(h,l[t]);Pf.isIdentityPermutation(a)?e=i[t]:(e=ix({inputs:{x:i[t]},backend:n,attrs:{perm:a}}),f.push(e));let s=e.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);wr.arraysEqual(e.shape,s)||(e=mb({inputs:{x:e},backend:n,attrs:{shape:s}}),f.push(e)),null===c?c=e:(c=YA({inputs:{a:e,b:c},backend:n}),f.push(c))}e<p-1&&(u[e]>=0&&(c=Rv({inputs:{x:c},backend:n,attrs:{axis:u[e]-(s.length-h),keepDims:!1}}),f.push(c)),h--)}for(let e of f)e!==c&&n.disposeIntermediateTensorInfo(e);return c}},Mv={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t;Tg([a,r],"eluGrad");let i=new Float32Array(wr.sizeFromShape(r.shape)),s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<s.length;++e){let t=s[e];i[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",i)}},Fv=Pf.ERF_P,_v=Pf.ERF_A1,Pv=Pf.ERF_A2,Ov=Pf.ERF_A3,Dv=Pf.ERF_A4,zv=Pf.ERF_A5,Lv=aA(Ht,(e=>{let t=Math.sign(e),n=Math.abs(e),a=1/(1+Fv*n);return t*(1-((((zv*a+Dv)*a+Ov)*a+Pv)*a+_v)*a*Math.exp(-n*n))})),Wv={kernelName:Ht,backendName:"cpu",kernelFunc:Lv};function Bv(e){let{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:i}=a,s=r.shape.length,o=r.shape.slice(),l=i;return i<0&&(wr.assert(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),l=s+i+1),o.splice(l,0,1),mb({inputs:{x:r},backend:n,attrs:{shape:o}})}var Vv={kernelName:Xt,backendName:"cpu",kernelFunc:Bv},Uv=_g(((e,t)=>e/t)),Gv=Hg(Bt,Uv),Hv={kernelName:Bt,backendName:"cpu",kernelFunc:Gv};function jv(e,t,n){let a=e.shape,r=a[0],i=a[1],s=n.data.get(e.dataId),o=s.complexTensorInfos.real,l=s.complexTensorInfos.imag,u=[r,i],d=wr.sizeFromShape(u),p=wr.getTypedArrayFromDType("float32",d),c=wr.getTypedArrayFromDType("float32",d);for(let e=0;e<r;e++){let a=Nx({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),r=Nx({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=Pg({inputs:{real:a,imag:r},backend:n}),{real:u,imag:d}=qv(s,t,n),h=Pf.mergeRealAndImagArrays(u,d);for(let t=0;t<i;t++){let n=Pf.getComplexWithIndex(h,t);p[e*i+t]=n.real,c[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}let h=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",c),m=Pg({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function qv(e,t,n){let a=wr.sizeFromShape(e.shape),r=n.data.get(e.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,s=n.data.get(r.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(a)){let r=Xv(i,s,a,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),i=n.makeTensorInfo([],"float32",wr.createScalarValue(a,"float32")),s=zg({inputs:{x:i},backend:n}),l=Hv.kernelFunc({inputs:{a:e,b:i},backend:n}),u=Hv.kernelFunc({inputs:{a:t,b:s},backend:n}),d=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:p}}return r}{let e=function(e,t,n){let a=new Float32Array(2*t);for(let r=0;r<t;r++){let i=0,s=0;for(let a=0;a<t;a++){let o=Pf.exponent(r*a,t,n),l=Pf.getComplexWithIndex(e,a);i+=l.real*o.real-l.imag*o.imag,s+=l.real*o.imag+l.imag*o.real}n&&(i/=t,s/=t),Pf.assignToTypedArray(a,i,s,r)}return a}(Pf.mergeRealAndImagArrays(i,s),a,t);return Pf.splitRealAndImagArrays(e)}}function Xv(e,t,n,a,r){if(1===n)return{real:e,imag:t};let i=Pf.mergeRealAndImagArrays(e,t),s=n/2,o=Pf.complexWithEvenIndex(i),l=o.real,u=o.imag,d=[l.length],p=r.makeTensorInfo(d,"float32",l),c=r.makeTensorInfo(d,"float32",u),h=Pg({inputs:{real:p,imag:c},backend:r}),f=Pf.complexWithOddIndex(i),m=f.real,y=f.imag,g=[m.length],A=r.makeTensorInfo(g,"float32",m),x=r.makeTensorInfo(g,"float32",y),b=Pg({inputs:{real:A,imag:x},backend:r}),v=Xv(l,u,s,a,r),w=v.real,k=v.imag,I=[w.length],S=r.makeTensorInfo(I,"float32",w),C=r.makeTensorInfo(I,"float32",k),N=Pg({inputs:{real:S,imag:C},backend:r}),T=Xv(m,y,s,a,r),R=T.real,E=T.imag,$=[R.length],M=r.makeTensorInfo($,"float32",R),F=r.makeTensorInfo($,"float32",E),_=Pg({inputs:{real:M,imag:F},backend:r}),P=Pf.exponents(n,a),O=[P.real.length],D=r.makeTensorInfo(O,"float32",P.real),z=r.makeTensorInfo(O,"float32",P.imag),L=Pg({inputs:{real:D,imag:z},backend:r}),W=YA({inputs:{a:L,b:_},backend:r}),B=Kg({inputs:{a:N,b:W},backend:r}),V=Kx({inputs:{a:N,b:W},backend:r}),U=Wg({inputs:{input:B},backend:r}),G=Wg({inputs:{input:V},backend:r}),H=ev({inputs:{input:B},backend:r}),j=ev({inputs:{input:V},backend:r}),q=nv({inputs:[U,G],backend:r,attrs:{axis:0}}),X=nv({inputs:[H,j],backend:r,attrs:{axis:0}}),K=r.data.get(q.dataId).values,Z=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),{real:K,imag:Z}}var Kv={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t,r=wr.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],s=mb({inputs:{x:a},backend:n,attrs:{shape:[r/i,i]}}),o=jv(s,!1,n),l=mb({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),l}};function Zv(e){let{backend:t,attrs:n}=e,{shape:a,value:r,dtype:i}=n,s=i||wr.inferDtype(r),o=wr.getArrayFromDType(s,wr.sizeFromShape(a));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(a,s,o)}var Yv={kernelName:Yt,backendName:"cpu",kernelFunc:Zv},Jv={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,r=n,i=wr.getTypedArrayFromDType(a.dtype,wr.sizeFromShape(a.shape)),[s,o,l,u]=a.shape,d=r.data.get(a.dataId).values;for(let e=0;e<s;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let e=0;e<l;e++){let a=e*u;for(let r=0;r<u;r++){let s=Math.round(l-e-1),o=t+n+a+r,p=d[o];s>=0&&s<l&&(p=d[t+n+s*u+r]),i[o]=p}}}}return{dataId:r.write(i,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Qv={kernelName:or,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=a,m=rv({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:c}});if(s){let e=m;if("NCHW"===d&&1===s.shape.length&&1!==s.shape[0]){let e=mb({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}});m=Kg({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Kg({inputs:{a:m,b:s},backend:n});n.disposeIntermediateTensorInfo(e)}if(h){let e=m;if("NCHW"===d&&"prelu"===h&&1===o.shape.length&&1!==o.shape[0]){let e=mb({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=fb(n,m,h,e,f),n.disposeIntermediateTensorInfo(e)}else m=fb(n,m,h,o,f);n.disposeIntermediateTensorInfo(e)}return m}},ew={kernelName:lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=a,m=bv({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:c}});if(s){let e=m;m=Kg({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){let e=m;m=fb(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}},tw={kernelName:an,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,i=wr.sizeFromShape(a.shape),s=r.shape,o=s[s.length-1],[l,u,d,p]=Pf.prepareAndValidate(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);let c=IA(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,o,d,p,a.shape,i);return n.makeTensorInfo(l,a.dtype,c.values)}},nw={kernelName:nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:i}=t,{axis:s,batchDims:o}=a;Tg([r,i],"gatherV2");let l=wr.parseAxisParam(s,r.shape)[0],u=n.data.get(i.dataId).values,d=r.shape[l];for(let e=0;e<u.length;++e){let t=u[e];wr.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let p=o;null==o&&(p=0);let c=wr.sizeFromShape(i.shape),h=Pf.segment_util.collectGatherOpShapeInfo(r,i,l,p),f=mb({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=mb({inputs:{x:i},backend:n,attrs:{shape:[h.batchSize,c/h.batchSize]}}),y=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=n.bufferSync(m),A=SA(n.bufferSync(f),g,y);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,A.dtype,A.values)}},aw={kernelName:ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t,r=wr.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],s=mb({inputs:{x:a},backend:n,attrs:{shape:[r/i,i]}}),o=jv(s,!0,n),l=mb({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),l}},rw=aA(dn,(e=>Number.isFinite(e)?1:0),"bool"),iw={kernelName:dn,backendName:"cpu",kernelFunc:rw},sw=aA(pn,(e=>Math.abs(e)===1/0?1:0),"bool"),ow={kernelName:pn,backendName:"cpu",kernelFunc:sw},lw=aA(cn,(e=>Number.isNaN(e)?1:0),"bool"),uw={kernelName:cn,backendName:"cpu",kernelFunc:lw},dw={kernelName:yn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:i}=n,s=zA(a,r,i);return t.makeTensorInfo([s.length],"float32",s)}},pw=aA(An,(e=>Math.log1p(e))),cw={kernelName:An,backendName:"cpu",kernelFunc:pw},hw=_g(((e,t)=>e&&t)),fw=Hg(xn,hw,null,"bool"),mw={kernelName:xn,backendName:"cpu",kernelFunc:fw},yw=aA(bn,(e=>e?0:1),"bool"),gw={kernelName:bn,backendName:"cpu",kernelFunc:yw},Aw=_g(((e,t)=>e||t)),xw=Hg(vn,Aw,null,"bool"),bw={kernelName:vn,backendName:"cpu",kernelFunc:xw},vw={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:o,beta:l}=a;Tg(r,"LRN");let u=r.shape[3],d=u-1,p=n.data.get(r.dataId).values,c=wr.sizeFromShape(r.shape),h=new Float32Array(c);function f(e){let t=e%u,n=e-t+Math.max(0,t-i),a=e-t+Math.min(t+i,d),r=0;for(;n<=a;n++){let e=p[n];r+=e*e}return r}for(let e=0;e<c;e++){let t=f(e),n=p[e]*Math.pow(s+o*t,-l);h[e]=n}return n.makeTensorInfo(r.shape,r.dtype,h)}},ww={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a;Tg(s,"LRNGrad");let p=wr.sizeFromShape(s.shape),c=s.shape[3],h=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(i.dataId).values,y=new Float32Array(p),g=p;for(let e=0;e<g;e++){let t=e%c,n=e-t+Math.max(0,t-o),a=e-t+Math.min(c,t+o+1),r=0;for(let e=n;e<a;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<a;t++){let n=-2*u*d*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-d)),n*=h[e],y[t]+=n}}return n.makeTensorInfo(s.shape,r.dtype,y)}};function kw(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:i,keepDims:s}=a,o=n,l=r.shape,u=l.length,d=wr.parseAxisParam(i,l),p=d,c=Pf.getAxesPermutation(p,u),h=o.data.get(r.dataId).values;if(null!=c){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[c[t]];h=rx(h,l,r.dtype,c,e),p=Pf.getInnerMostAxes(p.length,u),l=e}Tg(r,"max"),Pf.assertAxesAreInnerMostDims("max",p,u);let[f,m]=Pf.computeOutAndReduceShapes(l,p),y=VA(h,wr.sizeFromShape(m),f,r.dtype),g=o.write(y,f,r.dtype),A=f;return s&&(A=Pf.expandShapeToKeepDim(f,d)),{dataId:g,shape:A,dtype:r.dtype}}var Iw={kernelName:Tn,backendName:"cpu",kernelFunc:kw},Sw={kernelName:En,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Tg(r,"maxPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;wr.assert(Pf.eitherStridesOrDilationsAreOne(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));let u,d=Pf.computePool2DInfo(r.shape,i,s,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&wr.arraysEqual(d.inShape,d.outShape))u=zg({inputs:{x:r},backend:n});else{let e=n.data.get(r.dataId).values,t=wr.computeStrides(r.shape),a=Wb(e,r.shape,r.dtype,t,d,"max");u=n.makeTensorInfo(d.outShape,r.dtype,a.values)}return u}},Cw={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a;Tg(r,"maxPool3d");let d=Pf.computePool3DInfo(r.shape,i,s,1,o,l,u),p=Vb(n.data.get(r.dataId).values,r.shape,r.dtype,wr.computeStrides(r.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},Nw={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a;Tg([r,i],"maxPool3DGrad");let d=Pf.computePool3DInfo(i.shape,s,o,1,l,u),p=function(e,t){let n=Ws(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,c=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let y=0;y<t.inChannels;++y)for(let g=0;g<t.outDepth;++g){let A=g*a-c,x=A;for(;x<0;)x+=s;let b=Math.min(t.inDepth,u+A);for(let a=0;a<t.outHeight;++a){let u=a*r-h,c=u;for(;c<0;)c+=o;let v=Math.min(t.inHeight,d+u);for(let r=0;r<t.outWidth;++r){let h=r*i-f,w=h;for(;w<0;)w+=l;let k=Math.min(t.inWidth,p+h),I=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<b;t+=s){let n=t-A;for(let a=c;a<v;a+=o){let r=a-u;for(let i=w;i<k;i+=l){let s=i-h,o=e.get(m,t,a,i,y);o>=I&&(I=o,S=n*d*p+r*d+s)}}}n.set(S,m,g,a,r,y)}}}return n}(n.bufferSync(i),d),c=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.dilationDepth,y=d.dilationHeight,g=d.dilationWidth,A=d.effectiveFilterDepth,x=d.effectiveFilterHeight,b=d.effectiveFilterWidth,v=A-1-d.padInfo.front,w=b-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ws(i.shape,"float32"),S=n.bufferSync(r);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let a=0;a<d.inHeight;++a)for(let r=0;r<d.inWidth;++r){let i=n-v,s=a-k,o=r-w,l=0;for(let n=0;n<A;n+=m){let a=(i+n)/c;if(!(a<0||a>=d.outDepth||Math.floor(a)!==a))for(let r=0;r<x;r+=y){let i=(s+r)/h;if(!(i<0||i>=d.outHeight||Math.floor(i)!==i))for(let s=0;s<b;s+=g){let u=(o+s)/f;if(u<0||u>=d.outWidth||Math.floor(u)!==u)continue;let c=A*x*b-1-p.get(e,a,i,u,t)===n*x*b+r*b+s?1:0;0!==c&&(l+=S.get(e,a,i,u,t)*c)}}}I.set(l,e,n,a,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},Tw={kernelName:$n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i,output:s}=t,o=i;Tg([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=a,c=Pf.computePool2DInfo(o.shape,l,u,1,d,p),h=n.data.get(o.dataId).values,f=Ws(c.outShape,o.dtype,Bb(h,o.shape,o.dtype,c).values),m=c.strideHeight,y=c.strideWidth,g=c.dilationHeight,A=c.dilationWidth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,v=b-1-c.padInfo.left,w=x-1-c.padInfo.top,k=Ws(o.shape,"float32"),I=n.data.get(r.dataId).values,S=Ws(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){let r=n-w,i=a-v,s=0;for(let n=0;n<x;n+=g){let a=(r+n)/m;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let r=0;r<b;r+=A){let o=(i+r)/y;if(o<0||o>=c.outWidth||Math.floor(o)!==o)continue;let l=x*b-1-f.get(e,a,o,t)===n*b+r?1:0;0!==l&&(s+=S.get(e,a,o,t)*l)}}k.set(s,e,n,a,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},Rw={kernelName:_n,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:i,pad:s,includeBatchInIndex:o}=t,l=n;Tg(a,"MaxPoolWithArgmax");let u=l.data.get(a.dataId).values,d=Pf.computePool2DInfo(a.shape,r,i,[1,1],s),[p,c]=function(e,t,n,a,r){let i=Wb(e,0,n,wr.computeStrides(t),r,"max"),s=Bb(e,t,n,r,!0,a);return[i.values,s.values]}(u,a.shape,a.dtype,o,d),h=l.write(p,d.outShape,a.dtype),f=l.write(c,d.outShape,a.dtype);return[{dataId:h,shape:d.outShape,dtype:a.dtype},{dataId:f,shape:d.outShape,dtype:"int32"}]}},Ew={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a,o=wr.parseAxisParam(i,r.shape),l=Pf.computeOutAndReduceShapes(r.shape,o)[1],u=wr.sizeFromShape(l),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let c=Ug({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(c);let h=Gv({inputs:{a:c,b:p},backend:n});d.push(h);let f=Rv({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:s}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},$w={kernelName:On,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;Tg(r,"min");let o=wr.parseAxisParam(i,r.shape),l=o,u=Pf.getAxesPermutation(l,r.shape.length),d=r;null!=u&&(d=ix({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Pf.getInnerMostAxes(l.length,r.shape.length)),Pf.assertAxesAreInnerMostDims("min",l,d.shape.length);let[p,c]=Pf.computeOutAndReduceShapes(d.shape,l),h=wr.sizeFromShape(c),f=wr.makeZerosTypedArray(wr.sizeFromShape(p),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*h,n=m[t];for(let e=0;e<h;++e){let a=m[t+e];(Number.isNaN(a)||a<n)&&(n=a)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let y=n.makeTensorInfo(p,d.dtype,f);if(s){let e=mb({inputs:{x:y},backend:n,attrs:{shape:Pf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Mw={kernelName:zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,mode:s}=a;Tg(r,"mirrorPad");let o=i.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=i.map((e=>e[0])),u=i.map(((e,t)=>e[0]+r.shape[t])),d="reflect"===s?0:1,p=n.data.get(r.dataId).values,c=r.shape.length,h=wr.computeStrides(r.shape),f=wr.sizeFromShape(o),m=o.length,y=wr.computeStrides(o),g=wr.getTypedArrayFromDType(r.dtype,f);for(let e=0;e<f;e++){let t=wr.indexToLoc(e,m,y);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-d:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+d);t=t.map(((e,t)=>e-l[t]));let n=wr.locToIndex(t,c,h);g[e]=p[n]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},Fw=_g(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),_w=Hg(Ln,Fw),Pw={kernelName:Ln,backendName:"cpu",kernelFunc:_w},Ow=A(E());function Dw(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:i}=a,s=r.shape.length,o=i;if(-1===o&&(o=s-1),o!==s-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s} and dim was ${o}`);let l=wr.parseAxisParam([o],r.shape),u=kw({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=Pf.expandShapeToKeepDim(u.shape,l),p=mb({inputs:{x:u},backend:n,attrs:{shape:d}}),c=Kx({inputs:{a:r,b:p},backend:n}),h=hA({inputs:{x:c},backend:n}),f=Rv({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=mb({inputs:{x:f},backend:n,attrs:{shape:d}}),y=Gv({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}var zw={kernelName:Ma,backendName:"cpu",kernelFunc:Dw},Lw={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a;Tg(r,"multinomial");let l=o?r:Dw({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],p=n.data.get(l.dataId).values,c=[u,i],h=wr.makeZerosTypedArray(wr.sizeFromShape(c),"int32");for(let e=0;e<u;++e){let t=e*d,n=new Float32Array(d-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];let a=Ow.alea(s.toString()),r=e*i;for(let e=0;e<i;++e){let t=a();h[r+e]=n.length;for(let a=0;a<n.length;a++)if(t<n[a]){h[r+e]=a;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(c,"int32",h)}},Ww=Um.nonMaxSuppressionV3Impl,Bw={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=a;Tg(r,"NonMaxSuppression");let u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,{selectedIndices:p}=Ww(u,d,s,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Vw=Um.nonMaxSuppressionV4Impl,Uw={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a;Tg(r,"NonMaxSuppressionPadded");let d=n.data.get(r.dataId).values,p=n.data.get(i.dataId).values,{selectedIndices:c,validOutputs:h}=Vw(d,p,s,o,l,u);return[n.makeTensorInfo([c.length],"int32",new Int32Array(c)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},Gw=Um.nonMaxSuppressionV5Impl,Hw={kernelName:jn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a;Tg(r,"NonMaxSuppressionWithScore");let d=n.data.get(r.dataId).values,p=n.data.get(i.dataId).values,c=s,h=o,f=l,m=u,{selectedIndices:y,selectedScores:g}=Gw(d,p,c,h,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},jw={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a;Tg(r,"oneHot");let u=wr.sizeFromShape(r.shape),d=new Float32Array(u*s);d.fill(l);let p=n.data.get(r.dataId).values;for(let e=0;e<u;++e)p[e]>=0&&p[e]<s&&(d[e*s+p[e]]=o);return n.makeTensorInfo([...r.shape,s],i,d)}};function qw(e){let{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){let e=Wg({inputs:{input:a},backend:n}),t=qw({inputs:{x:e},backend:n}),r=ev({inputs:{input:a},backend:n}),i=qw({inputs:{x:r},backend:n}),s=Pg({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),s}return Zv({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}var Xw={kernelName:nr,backendName:"cpu",kernelFunc:qw},Kw={kernelName:qn,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){let t=Wg({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),i=ev({inputs:{input:r},backend:a}),s=qw({inputs:{x:i},backend:a}),o=Pg({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}return Zv({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function Zw(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return Bv({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach((e=>{wr.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),wr.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=nv({inputs:t.map((e=>{let t=Bv({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var Yw={kernelName:Kn,backendName:"cpu",kernelFunc:Zw},Jw={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,constantValue:s}=a;Tg(r,"pad");let o=i.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=i.map((e=>e[0])),u=n.data.get(r.dataId).values,d=wr.sizeFromShape(r.shape),p=r.shape.length,c=wr.computeStrides(r.shape),h=wr.sizeFromShape(o),f=o.length,m=wr.computeStrides(o),y=wr.getTypedArrayFromDType(r.dtype,h);0!==s&&y.fill(s);for(let e=0;e<d;e++){let t=wr.indexToLoc(e,p,c).map(((e,t)=>e+l[t]));y[wr.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},Qw=_g(((e,t)=>Math.pow(e,t))),ek=Hg(Jn,Qw),tk={kernelName:Jn,backendName:"cpu",kernelFunc:ek},nk={kernelName:ta,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:o}=a,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),d=n.data.get(i.dataId).values,p=n.data.get(s.dataId).values,[c,h,f]=dx(l,u,d,i.shape,i.dtype,p,s.shape),m=c.map((e=>n.makeTensorInfo([e.length],"int32",e))),y=n.makeTensorInfo(f,i.dtype,h);return m.concat([y])}},ak={kernelName:na,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:i}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,d]=cx(s,a.shape,a.dtype,o,r.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([d.length],a.dtype,d)]}},rk={kernelName:aa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(s.dataId).values,c=o.map((e=>n.data.get(e.dataId).values)),h=o.map((e=>e.shape)),[f,m]=gx(u,r.shape,d,i.shape,i.dtype,p,s.shape,c,h,l);return n.makeTensorInfo(f,i.dtype,m)}},ik={kernelName:ra,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,dtype:i,step:s}=n,o=Ax(a,r,s,i);return t.makeTensorInfo([o.length],i,o)}},sk=aA(sa,(e=>1/e)),ok={kernelName:sa,backendName:"cpu",kernelFunc:sk},lk={kernelName:pa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a;Tg(r,"resizeBilinear");let l=wr.computeStrides(r.shape),[u,d]=o,[p,c,h,f]=r.shape,m=n.data.get(r.dataId).values,y=new Float32Array(wr.sizeFromShape([p,u,d,f])),g=[i&&u>1?c-1:c,i&&d>1?h-1:h],A=[i&&u>1?u-1:u,i&&d>1?d-1:d],x=0,b=g[0]/A[0],v=g[1]/A[1];for(let e=0;e<p;e++)for(let t=0;t<u;t++){let n;n=s?b*(t+.5)-.5:b*t;let a=Math.max(0,Math.floor(n)),r=n-a,i=Math.min(c-1,Math.ceil(n)),o=e*l[0]+a*l[1],u=e*l[0]+i*l[1];for(let e=0;e<d;e++){let t;t=s?v*(e+.5)-.5:v*e;let n=Math.max(0,Math.floor(t)),a=t-n,i=Math.min(h-1,Math.ceil(t)),d=o+n*l[2],p=u+n*l[2],c=o+i*l[2],g=u+i*l[2];for(let e=0;e<f;e++){let t=m[d+e],n=m[p+e],i=t+(m[c+e]-t)*a,s=i+(n+(m[g+e]-n)*a-i)*r;y[x++]=s}}}return n.makeTensorInfo([p,u,d,f],"float32",y)}},uk={kernelName:ca,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a;Tg([i,r],"resizeBilinearGrad");let o=wr.computeStrides(r.shape),[l,u,d,p]=r.shape,[,c,h]=i.shape,f=new Float32Array(l*u*d*p),m=[s&&c>1?u-1:u,s&&h>1?d-1:d],y=[s&&c>1?c-1:c,s&&h>1?h-1:h],g=m[0]/y[0],A=m[1]/y[1],x=n.data.get(i.dataId).values,b=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<c;e++){let n=e*g,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),i=t+a*o[1],s=t+r*o[1],l=n-a,c=1-l;for(let e=0;e<h;e++){let t=e*A,n=Math.floor(t),a=Math.min(Math.ceil(t),d-1),r=t-n,u=1-r,h=i+n*o[2],m=i+a*o[2],y=s+n*o[2],g=s+a*o[2],v=c*u,w=c*r,k=l*u,I=l*r;for(let e=0;e<p;e++){let t=x[b++];f[h+e]+=t*v,f[m+e]+=t*w,f[y+e]+=t*k,f[g+e]+=t*I}}}}return n.makeTensorInfo([l,d,u,p],"float32",f)}},dk={kernelName:ua,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a;Tg(r,"resizeNearestNeighbor");let l=wr.computeStrides(r.shape),[u,d]=o,[p,c,h,f]=r.shape,m=n.data.get(r.dataId).values,y=new Float32Array(p*u*d*f),g=[i&&u>1?c-1:c,i&&d>1?h-1:h],A=[i&&u>1?u-1:u,i&&d>1?d-1:d],x=g[0]/A[0],b=g[1]/A[1],v=0;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=s?x*(e+.5):x*e,a=Math.min(c-1,i?Math.round(n):Math.floor(n));s&&(a=Math.max(0,a));let r=t+a*l[1];for(let e=0;e<d;e++){let t=s?b*(e+.5):b*e,n=Math.min(h-1,i?Math.round(t):Math.floor(t));s&&(n=Math.max(0,n));let a=r+n*l[2];for(let e=0;e<f;e++){let t=m[a+e];y[v++]=t}}}}return n.makeTensorInfo([p,u,d,f],r.dtype,y)}},pk={kernelName:da,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a;Tg([i,r],"resizeNearestNeighborGrad");let o=wr.computeStrides(r.shape),l=wr.computeStrides(i.shape),[u,d,p,c]=r.shape,[,h,f]=i.shape,m=new Float32Array(u*d*p*c),y=n.data.get(i.dataId).values,g=[s&&h>1?d-1:d,s&&f>1?p-1:p],A=[s&&h>1?h-1:h,s&&f>1?f-1:f],x=g[0]/A[0],b=g[1]/A[1],v=1/x,w=1/b,k=2*Math.ceil(v)+2,I=2*Math.ceil(w)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=t+e*o[1],a=Math.floor(e*v),r=Math.floor(a-k/2);for(let a=0;a<p;a++){let i=n+a*o[2],u=Math.floor(a*w),g=Math.floor(u-I/2);for(let n=0;n<c;n++){let o=0;for(let i=0;i<k;i++){let u=i+r;if(u<0||u>=h)continue;let c=t+u*l[1],m=u*x;if(e===Math.min(d-1,s?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){let t=e+g;if(t<0||t>=f)continue;let r=c+t*l[2],i=t*b;a===Math.min(p-1,s?Math.round(i):Math.floor(i))&&(o+=y[r+n])}}m[i+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},ck={kernelName:fa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a;Tg(r,"reverse");let s=r.shape.length,o=wr.parseAxisParam(i,r.shape);if(0===s)return zg({inputs:{x:r},backend:n});let l=new ti(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},hk={kernelName:ir,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:i,center:s}=t,o=n,l=wr.getTypedArrayFromDType(a.dtype,wr.sizeFromShape(a.shape)),[u,d,p,c]=a.shape,[h,f]=Pf.getImageCenter(s,d,p),m=Math.sin(r),y=Math.cos(r),g=o.data.get(a.dataId).values;for(let e=0;e<u;e++){let t=e*p*d*c;for(let e=0;e<d;e++){let n=e*(p*c);for(let a=0;a<p;a++){let r=a*c;for(let s=0;s<c;s++){let o=[u,e,a,s],A=o[2],x=o[1],b=(A-h)*y-(x-f)*m,v=(A-h)*m+(x-f)*y;b=Math.round(b+h),v=Math.round(v+f);let w=i;"number"!=typeof i&&(w=3===s?255:i[s]),b>=0&&b<p&&v>=0&&v<d&&(w=g[t+v*(p*c)+b*c+s]),l[t+n+r+s]=w}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},fk=aA(ma,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),mk={kernelName:ma,backendName:"cpu",kernelFunc:fk},yk={kernelName:ga,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:i}=t,{shape:s}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Pf.calculateShapes(i,r,s),c=wx(n.bufferSync(r),n.bufferSync(i),s,p,u,l,o,d,0,!0);return n.makeTensorInfo(s,c.dtype,c.values)}};function gk(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function Ak(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}var xk={kernelName:xa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a,o=function(e,t,n,a,r,i){let s=wr.getArrayFromDType("int32",n*r);for(let o=0;o<n;++o){let n=e.slice(o*a,(o+1)*a),l=o*r;for(let e=0;e<r;++e)s[l+e]="left"===i?gk(n,t[e+l]):Ak(n,t[e+l])}return s}(n.data.get(r.dataId).values,n.data.get(i.dataId).values,r.shape[0],r.shape[1],i.shape[1],s);return n.makeTensorInfo(i.shape,"int32",o)}},bk={kernelName:ba,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t;Tg([a,r,i],"select");let s=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,d=fi(r.dtype,i.dtype),p=wr.makeZerosTypedArray(wr.sizeFromShape(r.shape),d),c=0,h=0===s||s>1||1===r.shape.length?1:wr.sizeFromShape(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<h;t++)1===o[e]?p[c++]=l[e]:p[c++]=u[e];return n.makeTensorInfo(r.shape,d,p)}},vk=Pf.SELU_SCALEALPHA,wk=Pf.SELU_SCALE,kk=aA(va,(e=>e>=0?wk*e:vk*(Math.exp(e)-1))),Ik={kernelName:va,backendName:"cpu",kernelFunc:kk},Sk=aA(Sa,(e=>e<0?-1:e>0?1:0)),Ck={kernelName:Sa,backendName:"cpu",kernelFunc:Sk},Nk=aA(ka,(e=>Math.sin(e))),Tk={kernelName:ka,backendName:"cpu",kernelFunc:Nk},Rk=aA(Ia,(e=>Math.sinh(e))),Ek={kernelName:Ia,backendName:"cpu",kernelFunc:Rk},$k=Math.log(1.1920928955078125e-7)+2,Mk=aA(Na,(e=>{let t,n=e>-$k,a=e<$k,r=Math.exp(e);return t=a?r:n?e:Math.log(1+r),t})),Fk={kernelName:Na,backendName:"cpu",kernelFunc:Mk},_k={kernelName:Ea,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a;Tg([r],"spaceToBatchND");let o=wr.sizeFromShape(i),l=[[0,0]];l.push(...s);for(let e=1+i.length;e<r.shape.length;++e)l.push([0,0]);let u=Jw.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=Pf.getReshaped(u.shape,i,o,!1),p=Pf.getPermuted(d.length,i.length,!1),c=Pf.getReshapedPermuted(u.shape,i,o,!1),h=mb({inputs:{x:u},backend:n,attrs:{shape:d}}),f=ix({inputs:{x:h},backend:n,attrs:{perm:p}}),m=mb({inputs:{x:f},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}},Pk={kernelName:Fa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);let o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,d=n.data.get(s.dataId).values[0],[p,c,h,f,m]=Rx(o,a.shape,a.dtype,l,r.dtype,u,d);return[n.makeTensorInfo(c,a.dtype,p),n.makeTensorInfo([c[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},Ok={kernelName:_a,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:i}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(n.data.get(r.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,d,p]=Ex(o,a.shape,a.dtype,s,l);return[n.makeTensorInfo(d,a.dtype,u),n.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}},Dk={kernelName:Pa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");let s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,d]=$x(s,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(d,a.dtype,u)}},zk={kernelName:Oa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");let s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,d]=$x(s,a.shape,a.dtype,o,l);return n.makeTensorInfo(d,a.dtype,u)}},Lk={kernelName:Da,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{sparseIndices:i,sparseValues:s,defaultValue:o}=n,{outputShape:l}=r,{sliceRank:u,numUpdates:d,sliceSize:p,strides:c,outputSize:h}=Pf.calculateShapes(s,i,l),f=!1,m=a.bufferSync(i);switch(s.dtype){case"bool":t=wx(m,a.bufferSync(s),l,h,p,d,u,c,!!a.data.get(o.dataId).values[0],f);break;case"float32":case"int32":t=wx(m,a.bufferSync(s),l,h,p,d,u,c,a.data.get(o.dataId).values[0],f);break;case"string":t=wx(m,a.bufferSync(s),l,h,p,d,u,c,wr.decodeString(a.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${s.dtype}`)}return a.makeTensorInfo(l,t.dtype,t.values)}},Wk={kernelName:$a,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=a,o=wr.parseAxisParam(s,r.shape)[0],l=Pf.prepareSplitSize(r,i,o),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let a=Nx({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a}))}},Bk={kernelName:La,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,a=t;Tg(n,"square");let r=a.data.get(n.dataId).values,i=new Float32Array(r.length);for(let e=0;e<r.length;++e){let t=r[e];i[e]=t*t}return{dataId:a.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Vk=aA(ar,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Uk={kernelName:ar,backendName:"cpu",kernelFunc:Vk},Gk={kernelName:Ba,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,end:s,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:c}=a;Tg(r,"stridedSlice");let h,{finalShapeSparse:f,finalShape:m,isIdentity:y,sliceDim0:g,isSimpleSlice:A,begin:x,end:b,strides:v}=uf.sliceInfo(r.shape,i,s,o,l,u,d,p,c);if(y)h=mb({inputs:{x:r},backend:n,attrs:{shape:m}});else if(g||A){wr.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));let e=uf.computeOutShape(x,b,v),t=Nx({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});h=mb({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=Bx(f,n.bufferSync(r),v,x);h=n.makeTensorInfo(m,e.dtype,e.values)}return h}},Hk={kernelName:Va,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:d,dataSplits:p}=t,c=n.data.get(d.dataId).values,h=n.data.get(p.dataId).values,[f,m]=Ux(c,h,r,i,s,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},jk={kernelName:Ua,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values[0],[u,d,p]=Hx(o,l,r),c=d.length;return[n.makeTensorInfo([c,2],"int32",u),n.makeTensorInfo([c],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(p))]}},qk={kernelName:Ga,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let s=jx(n.data.get(i.dataId).values,r);return n.makeTensorInfo(i.shape,"int32",s)}},Xk=aA(ja,(e=>Math.tan(e))),Kk={kernelName:ja,backendName:"cpu",kernelFunc:Xk},Zk=aA(qa,(e=>Math.tanh(e))),Yk={kernelName:Aa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:i}=t,{sliceRank:s,numUpdates:o,sliceSize:l,strides:u,outputSize:d}=Pf.calculateShapes(i,r,a.shape),p=n.bufferSync(r),c=n.bufferSync(i),h=n.bufferSync(a),f=wx(p,c,a.shape,d,l,o,s,u,h,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}},Jk={kernelName:Xa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:i}=a;Tg(r,"tile");let s=Yx(n.bufferSync(r),i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}},Qk={kernelName:Ka,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:i,sorted:s}=a;Tg(r,"topk");let o=n.data.get(r.dataId).values,[l,u]=eb(o,r.shape,r.dtype,i,s);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},eI={kernelName:Za,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:l,outputShape:u}=n,[d,p,c,h]=r.shape,[f,m]=null!=u?u:[p,c],y=[d,f,m,h],g=wr.computeStrides(r.shape),A=g[0],x=g[1],b=g[2],v=wr.computeStrides(y),w=v[0],k=v[1],I=v[2],S=wr.getTypedArrayFromDType(r.dtype,wr.sizeFromShape(y));S.fill(l);let C=a.data.get(r.dataId).values,N=a.data.get(i.dataId).values;for(let e=0;e<d;++e){let t=1===i.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let a=0;a<m;++a)for(let r=0;r<h;++r){let i,u=t[6]*a+t[7]*n+1;if(0===u)continue;let d=(t[0]*a+t[1]*n+t[2])/u,h=(t[3]*a+t[4]*n+t[5])/u,f=tI(d,c,o),m=tI(h,p,o);switch(s){case"nearest":i=aI(C,p,c,A,x,b,e,m,f,r,l);break;case"bilinear":i=rI(C,p,c,A,x,b,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${s}`)}S[e*w+n*k+a*I+r]=i}return a.makeTensorInfo(y,r.dtype,S)}return{dataId:a.write(S,y,r.dtype),shape:r.shape,dtype:r.dtype}}};function tI(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return wr.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return wr.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return wr.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function nI(e,t,n,a,r,i,s,o,l,u,d){return 0<=o&&o<t&&0<=l&&l<n?e[s*a+o*r+l*i+u]:d}function aI(e,t,n,a,r,i,s,o,l,u,d){return nI(e,t,n,a,r,i,s,Math.round(o),Math.round(l),u,d)}function rI(e,t,n,a,r,i,s,o,l,u,d){let p=Math.floor(o),c=Math.floor(l),h=p+1,f=c+1;return(h-o)*((f-l)*nI(e,t,n,a,r,i,s,p,c,u,d)+(l-c)*nI(e,t,n,a,r,i,s,p,f,u,d))+(o-p)*((f-l)*nI(e,t,n,a,r,i,s,h,c,u,d)+(l-c)*nI(e,t,n,a,r,i,s,h,f,u,d))}var iI={kernelName:Ja,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:i}=t;Tg(i,"unique");let s=a.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=tb(s,r,i.shape,i.dtype);return[a.makeTensorInfo(l,i.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}},sI={kernelName:Qa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r.shape.length,o=r.shape[i],l=new Array(s-1),u=0;for(let e=0;e<s;e++)e!==i&&(l[u++]=r.shape[e]);let d=new Array(s).fill(0),p=r.shape.slice();p[i]=1;let c=new Array(o);for(let e=0;e<c.length;e++){d[i]=e;let t=Nx({inputs:{x:r},backend:n,attrs:{begin:d,size:p}});c[e]=mb({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return c}},oI={kernelName:er,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:i}=t,{numSegments:s}=a;Tg(r,"unsortedSegmentSum");let o=[],l=[],u=r.shape.length-i.shape.length,d=i;for(let e=0;e<u;++e){let t=Bv({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,l.push(t)}for(let e=0;e<s;++e){let t=wr.createScalarValue(e,"int32"),a=n.makeTensorInfo([],"int32",t),i=dA({inputs:{a,b:d},backend:n}),s=Ug({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=YA({inputs:{a:s,b:r},backend:n}),p=Rv({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),l.push(a),l.push(i),l.push(s),l.push(u),l.push(p)}let p=Zw({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},lI=[xb,Fg,vb,kb,Zg,Ib,Sb,Cb,Nb,Tb,Eb,Mb,_b,Db,Lb,Ub,Gb,Hb,jb,Ab,qb,Xb,Kb,tA,Zb,Gg,oA,Jb,Og,Qb,av,iv,sv,ov,lv,uv,dv,cv,fv,mv,yv,gv,Av,xv,vv,wv,kv,Iv,Sv,Cv,Nv,Tv,$v,rb,Mv,pA,Wv,fA,Vv,gA,Kv,Yv,Jv,bA,kA,Qv,ew,tw,nw,TA,$A,Lg,aw,tv,iw,ow,uw,sb,_A,DA,dw,BA,cw,mw,gw,bw,vw,ww,Iw,HA,Sw,Cw,Nw,Tw,Rw,Ew,$w,XA,Mw,Pw,Lw,JA,ex,Bw,Uw,Hw,ax,jw,Kw,Yw,Jw,tk,ub,lx,nk,ak,rk,ik,Bg,Hv,ok,pb,hb,yb,lk,uk,dk,pk,ck,hk,mk,vx,yk,xk,bk,Ik,Sx,Ck,Tk,Ek,Tx,zw,Fk,_k,Pk,Ok,Dk,zk,Lk,Wk,_x,Bk,Dx,Wx,Uk,Gk,Hk,jk,qk,Zx,Ev,Kk,{kernelName:qa,backendName:"cpu",kernelFunc:Zk},Yk,Jk,Qk,eI,sx,iI,sI,oI,Xw];for(let e of lI)yr(e);var uI={};g(uI,{assertNotComplex:()=>AS,bindCanvasToFramebuffer:()=>XI,bindColorTextureToFramebuffer:()=>KI,bindTextureToProgramUniformSampler:()=>qI,bindTextureUnit:()=>UI,bindVertexBufferToProgramAttribute:()=>VI,callAndCheck:()=>vI,canBeRepresented:()=>II,createFragmentShader:()=>TI,createFramebuffer:()=>BI,createProgram:()=>FI,createStaticIndexBuffer:()=>DI,createStaticVertexBuffer:()=>OI,createTexture:()=>LI,createVertexShader:()=>NI,getBatchDim:()=>tS,getExtensionOrThrow:()=>CI,getFramebufferErrorMessage:()=>JI,getMaxTexturesInShader:()=>dS,getNumChannels:()=>zI,getProgramUniformLocation:()=>jI,getProgramUniformLocationOrThrow:()=>HI,getRowsCols:()=>nS,getShapeAs3D:()=>aS,getTextureShapeFromLogicalShape:()=>rS,getWebGLDisjointQueryTimerVersion:()=>pS,getWebGLErrorMessage:()=>SI,getWebGLMaxTextureSize:()=>oS,hasExtension:()=>cS,isCapableOfRenderingToFloatTexture:()=>fS,isDownloadFloatTextureEnabled:()=>mS,isReshapeFree:()=>sS,isWebGLFenceEnabled:()=>gS,isWebGLVersionEnabled:()=>hS,linkProgram:()=>_I,logShaderSourceAndInfoLog:()=>MI,resetMaxTextureSize:()=>lS,resetMaxTexturesInShader:()=>uS,unbindColorTextureFromFramebuffer:()=>ZI,unbindTextureUnit:()=>GI,validateFramebuffer:()=>YI,validateProgram:()=>PI,validateTextureSize:()=>WI});var dI,pI,cI,hI={},fI={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function mI(e,t){hI[e]=t}function yI(e,t){if(!(e in hI)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if(!Le().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete hI[e]}),!1),Le().getBool("SOFTWARE_WEBGL_ENABLED")&&(fI.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",fI)||n.getContext("experimental-webgl",fI):n.getContext("webgl2",fI)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;hI[e]=n}let n=hI[e];return null==n||n.isContextLost()?(delete hI[e],yI(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),hI[e])}function gI(e,t){return[t,e]}function AI(e){let t=wr.sizeFromShape(e),n=Math.ceil(t/4);return wr.sizeToSquarishShape(n)}function xI(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function bI(e,t){let n,a,r,i,s,o,l,u,d,p,c=e;return 2===Le().getNumber("WEBGL_VERSION")?(n=c.R32F,a=c.R16F,r=c.RGBA16F,i=c.RGBA32F,s=c.RED,l=4,u=1,d=c.HALF_FLOAT,p=c.FLOAT,o=c.RGBA8):(n=e.RGBA,a=e.RGBA,r=e.RGBA,i=c.RGBA,s=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:s,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function vI(e,t){let n=t();return Le().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+SI(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(dI||(dI={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(pI||(pI={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(cI||(cI={}));var wI=5.96e-8,kI=65504;function II(e){return!!(Le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||wI<Math.abs(e)&&Math.abs(e)<kI)}function SI(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function CI(e,t){return QI(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function NI(e,t){let n=QI(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(vI(e,(()=>e.shaderSource(n,t))),vI(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function TI(e,t){let n=QI(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(vI(e,(()=>e.shaderSource(n,t))),vI(e,(()=>e.compileShader(n))),Le().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw MI(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var RI,EI,$I=/ERROR: [0-9]+:([0-9]+):/g;function MI(e,t){let n=$I.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let a=+n[1],r=e.split("\n"),i=r.length.toString().length+2,s=r.map(((e,t)=>wr.rightPad((t+1).toString(),i)+e)),o=0;for(let e=0;e<s.length;e++)o=Math.max(s[e].length,o);let l=s.slice(0,a-1),u=s.slice(a-1,a),d=s.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${wr.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function FI(e){return QI(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function _I(e,t){if(vI(e,(()=>e.linkProgram(t))),!Le().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function PI(e,t){if(vI(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function OI(e,t){let n=QI(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return vI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),vI(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function DI(e,t){let n=QI(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return vI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),vI(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function zI(){return 2===Le().getNumber("WEBGL_VERSION")?1:4}function LI(e){return QI(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function WI(e,t){let n=Le().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function BI(e){return QI(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function VI(e,t,n,a,r,i,s){let o=e.getAttribLocation(t,n);return-1!==o&&(vI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),vI(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,i,s))),vI(e,(()=>e.enableVertexAttribArray(o))),!0)}function UI(e,t,n){eS(e,n),vI(e,(()=>e.activeTexture(e.TEXTURE0+n))),vI(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function GI(e,t){eS(e,t),vI(e,(()=>e.activeTexture(e.TEXTURE0+t))),vI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function HI(e,t,n){return QI(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function jI(e,t,n){return e.getUniformLocation(t,n)}function qI(e,t,n,a){vI(e,(()=>UI(e,t,a))),vI(e,(()=>e.uniform1i(n,a)))}function XI(e){vI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),vI(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),vI(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function KI(e,t,n){vI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),vI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function ZI(e,t){vI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),vI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function YI(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+JI(e,t))}function JI(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function QI(e,t,n){let a=vI(e,(()=>t()));if(null==a)throw new Error(n);return a}function eS(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function tS(e,t=2){return wr.sizeFromShape(e.slice(0,e.length-t))}function nS(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function aS(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[tS(e),...nS(e)]),t}function rS(e,t=!1){let n=Le().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=Le().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");a===1/0&&Le().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?wr.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=wr.squeezeShape(e).newShape);let r=wr.sizeFromShape(e),i=null;e.length<=1&&r<=n?i=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);let s=null!=i&&Math.max(...i)>a&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||s)if(t){let t=tS(e),n=2,a=2;e.length&&([n,a]=nS(e)),r=t*(n/2)*(a/2),i=wr.sizeToSquarishShape(r).map((e=>2*e))}else i=wr.sizeToSquarishShape(r);return i}function iS(e){return e%2==0}function sS(e,t){if(e=e.slice(-2),t=t.slice(-2),wr.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],a=t[t.length-1];if(n===a||iS(n)&&iS(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&iS(e[0])&&iS(t[0])}function oS(e){if(null==RI){let t=yI(e);RI=t.getParameter(t.MAX_TEXTURE_SIZE)}return RI}function lS(){RI=null}function uS(){EI=null}function dS(e){if(null==EI){let t=yI(e);EI=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,EI)}function pS(e){if(0===e)return 0;let t,n=yI(e);return t=cS(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:cS(n,"EXT_disjoint_timer_query")?1:0,t}function cS(e,t){return null!=e.getExtension(t)}function hS(e){try{if(null!=yI(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function fS(e){if(0===e)return!1;let t=yI(e);if(1===e){if(!cS(t,"OES_texture_float"))return!1}else if(!cS(t,"EXT_color_buffer_float"))return!1;return yS(t)}function mS(e){if(0===e)return!1;let t=yI(e);if(1!==e){if(cS(t,"EXT_color_buffer_float"))return yS(t);let e="EXT_color_buffer_half_float";if(cS(t,e)){let n=t.getExtension(e);return function(e,t){let n=bI(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(r),i}(t,n)}return!1}return!(!cS(t,"OES_texture_float")||!cS(t,"WEBGL_color_buffer_float"))&&yS(t)}function yS(e){let t=bI(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function gS(e){return 2===e&&null!=yI(e).fenceSync}function AS(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&wr.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var xS=Le();function bS(){let e,t,n,a,r,i,s,o,l,u;return 2===Le().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",i="outputColor",s="out vec4 outputColor;",o=Le().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",i="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function vS(e,t,n="index"){let a=wr.computeStrides(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function wS(e,t,n="index"){let a=wr.computeStrides(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function kS(e){let t=wr.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}xS.registerFlag("HAS_WEBGL",(()=>xS.getNumber("WEBGL_VERSION")>0)),xS.registerFlag("WEBGL_VERSION",(()=>hS(2)?2:hS(1)?1:0)),xS.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),xS.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===xS.get("WEBGL_VERSION"))),xS.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),xS.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),xS.registerFlag("WEBGL_PACK",(()=>xS.getBool("HAS_WEBGL"))),xS.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_PACK_CLIP",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_PACK_REDUCE",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_LAZILY_UNPACK",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_CONV_IM2COL",(()=>xS.getBool("WEBGL_PACK"))),xS.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>oS(xS.getNumber("WEBGL_VERSION")))),xS.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>dS(xS.getNumber("WEBGL_VERSION")))),xS.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=xS.getNumber("WEBGL_VERSION");return 0===e?0:pS(e)})),xS.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>xS.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ei.isMobile())),xS.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>fS(xS.getNumber("WEBGL_VERSION")))),xS.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!xS.getBool("WEBGL_FORCE_F16_TEXTURES")&&xS.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),xS.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>mS(xS.getNumber("WEBGL_VERSION")))),xS.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>gS(xS.getNumber("WEBGL_VERSION")))),xS.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>xS.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),xS.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),xS.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Ei.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),xS.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),xS.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),xS.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),xS.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),xS.registerFlag("WEBGL_EXP_CONV",(()=>!1)),xS.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>xS.getBool("IS_TEST"))),xS.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),xS.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),xS.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),xS.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var IS="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:SS}=Pf;function CS(e,t,n){let a=[];if(e.forEach((e=>{let t=wr.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=OS(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let r,i,s=a.join("\n"),o=e.map((e=>function(e,t,n=!1,a){let r="";r+=n?TS(e,a):NS(e,a);let i=e.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(r+=n?function(e,t){let n,a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),i="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=SS(e.shapeInfo.logicalShape,t.logicalShape),u=PS(o),d=o-s,p=["x","y","z","w","u","v"];n=0===s?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+d]} = 0;`)).join("\n");let c="";c=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+d]}`)).join(", ");let h="return outputValue;",f=1===wr.sizeFromShape(e.shapeInfo.logicalShape),m=1===wr.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)h=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=s-2,t=s-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?h="return vec4(outputValue.x);":l.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${r}(${c});\n      ${h}\n    }\n  `}(e,t):function(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",i=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&wr.arraysEqual(s,i))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,d=PS(l),p=SS(e.shapeInfo.logicalShape,t.logicalShape),c=l-o,h=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${h[e+c]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+c]}`)).join(", "),`\n    float ${r}() {\n      ${d} coords = getOutputCoords();\n      ${u}\n      return get${a}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=bS(),d=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${RS}\n    ${ES}\n    ${$S}\n  `}(u);return t.isPacked?(r=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(wr.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;let r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),i=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2),s=i,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),i=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(r=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return wr.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${wS(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let a=vS(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${wS(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let a=vS(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=vS(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=vS(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),i=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=MS),[p,d,i,s,r,o,n.userCode].join("\n")}function NS(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;let[r,i]=e.shapeInfo.texShape;if(1===r&&1===i)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let s=FS(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${_S(e)}\n      }\n    `;let r=e.shapeInfo.texShape,i=r[0],s=r[1];if(1===s&&1===i)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=FS(n);return 1===s?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${s}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape;if(null!=i&&wr.arraysEqual(n,i)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;let e=i[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}let{newShape:s,keptDims:o}=wr.squeezeShape(n),l=s;if(l.length<n.length){let n=["row","col"];return`\n      ${NS(DS(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${zS(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${_S(e)}\n      }\n    `;let u=i[0],d=i[1],p=FS(a);return 1===d?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${u}, ${d}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[1]*n[2],s=n[2],{newShape:o,keptDims:l}=wr.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${NS(DS(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${zS(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${s}, 1)));\n        ${_S(e)}\n      }\n    `;let d=e.shapeInfo.texShape,p=d[0],c=d[1],h=e.shapeInfo.flatOffset;if(c===i&&null==h)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${c}.0, ${p}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(c===s&&null==h)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${p}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;let f=FS(a);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${c}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[3],s=n[2]*i,o=n[1]*s,{newShape:l,keptDims:u}=wr.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${NS(DS(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${zS(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${s}, ${i}, 1)));\n        ${_S(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],h=p[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,y=`int stride0 = ${a}Shape[1] * stride1;`;if(h===o&&null==d)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${c}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(h===i&&null==d)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${c}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;let g=FS(a);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${g});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${c}, ${h}, index + ${g});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],i=t[3]*r,s=t[2]*i,o=t[1]*s,{newShape:l,keptDims:u}=wr.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${NS(DS(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${zS(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${s}, ${i}, ${r})) +\n          depth3;\n        ${_S(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],h=p[1];return h===o&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${s}, ${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:h===r&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} + depth * ${i} +\n          depth2 * ${r} + depth3 + ${FS(n)};\n      vec2 uv = uvFromFlat(${c}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=wr.squeezeShape(t);if(r.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${NS(DS(e,r))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${zS(t,i)});\n      }\n    `}let s=t[5],o=t[4]*s,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${s}, 1)));\n        ${_S(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],f=c[1];return f===d&&null==p?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${s})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===s&&null==p?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${s} + depth4 + ${FS(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function TS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${bS().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,i=bS();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;let s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,s=i[0],o=i[1],l=bS();if(null!=i&&wr.arraysEqual(n,i))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;let u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){let a=[1,2],i=["b","row","col"];return`\n        ${TS(DS(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${zS(i,a)});\n        }\n      `}let o=bS();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;let l=s[0],u=s[1],d=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d*Math.ceil(n[1]/2)}, ${d}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=bS();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;let i=e.shapeInfo.logicalShape,s=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],p=Math.ceil(i[s-1]/2),c=p*Math.ceil(i[s-2]/2),h="int b, int row, int col",f=`b * ${c} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<s-1;e++)h=`int b${e}, `+h,c*=i[s-e-1],f=`b${e} * ${c} + `+f;return`\n    vec4 ${a}(${h}) {\n      int index = ${f};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var RS="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ES="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$S="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",MS="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function FS(e){return`offset${e}`}function _S(e){let t=e.name,n=wr.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function PS(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function OS(e,t,n){let{newShape:a,keptDims:r}=wr.squeezeShape(t),i=t.length,s=e&&3===i&&1===t[0],o=s?t.slice(1):a,l=!e&&i>1&&!wr.arraysEqual(t,n)&&a.length<i||s;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function DS(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function zS(e,t){return t.map((t=>e[t])).join(", ")}function LS(e,t,n){let a,r,i,s=[],o=[],l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Le().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let a of t.variableNames){let r={name:a,uniform:e.getUniformLocation(n,a,d),offset:e.getUniformLocation(n,`offset${a}`,d)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,`${a}Shape`,d),r.texShape=e.getUniformLocation(n,`${a}TexShape`,d)),s.push(r)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",d),i=e.getUniformLocation(n,"outShapeStrides",d),r=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(let a of t.customUniforms)o.push(e.getUniformLocation(n,a.name,d));return{variablesLocations:s,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:r}}function WS(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let a=e.logicalShape,r=t[n],i=r.shape;if(!wr.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&r.isUniform)return;let s=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!wr.arraysEqual(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)}))}function BS(e){return Le().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var VS={R:0,G:1,B:2,A:3},US=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=bS();this.outputShape=e,this.enableShapeUniforms=BS(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let e=0;e<n.length;e++){let t=n[e];i+=`\n          if(offset == ${e}) {\n            result = values[${VS[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":kS(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${a.texture2D}(A, uv);\n          ${i}\n        }\n        ${a.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}},GS={};function HS(e){let t=bS();return NI(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function jS(e){return OI(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function qS(e){return DI(e,new Uint16Array([0,1,2,2,1,3]))}function XS(e,t,n,a,r,i){WI(t,n);let s=LI(e),o=e.TEXTURE_2D;return vI(e,(()=>e.bindTexture(o,s))),vI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),vI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),vI(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),vI(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Le().getNumber("WEBGL_VERSION")?vI(e,(()=>e.texImage2D(o,0,a,t,n,0,r,i,null))):vI(e,(()=>e.texStorage2D(o,1,a,t,n))),vI(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:s,texShape:[n,t]}}function KS(e){return e.internalFormatFloat}function ZS(e,t,n,a){let[r,i]=gI(t,n);return XS(e,r,i,KS(a),a.textureFormatFloat,e.FLOAT)}function YS(e){return e.internalFormatHalfFloat}function JS(e,t,n,a){let[r,i]=gI(t,n);return XS(e,r,i,YS(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function QS(e){return e.downloadTextureFormat}function eC(e,t,n,a){let[r,i]=gI(t,n);return XS(e,r,i,QS(a),e.RGBA,e.UNSIGNED_BYTE)}function tC(e){return e.internalFormatPackedFloat}function nC(e,t,n,a){let[r,i]=xI(t,n);return XS(e,r,i,tC(a),e.RGBA,e.FLOAT)}function aC(e){return e.internalFormatPackedHalfFloat}function rC(e,t,n,a){let[r,i]=xI(t,n);return XS(e,r,i,aC(a),e.RGBA,a.textureTypeHalfFloat)}function iC(e,t,n){return vI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),VI(e,t,"clipSpacePos",n,3,20,0)&&VI(e,t,"uv",n,2,20,12)}function sC(e,t,n,a,r,i){let s,o,l;vI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(s=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(s=new Float32Array(n*a*4),o=e.FLOAT,l=i.internalFormatPackedFloat),s.set(r),2===Le().getNumber("WEBGL_VERSION")?vI(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,s))):vI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,s))),vI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function oC(e,t,n){vI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Le().getNumber("WEBGL_VERSION")?vI(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):vI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Le().getNumber("WEBGL_VERSION")?vI(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):vI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),vI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function lC(e,t,n,a){let r=e.createBuffer();vI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));let i=16*t*n;return vI(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),vI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),vI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}function uC(e,t,n){let a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}function dC(e,t,n,a){let[r,i]=gI(t,n),s=new Uint8Array(function(e,t){return 4*e}(t*n));return vI(e,(()=>e.readPixels(0,0,r,i,a.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}function pC(e,t,n,a,r,i,s,o){let l=e,u=new Float32Array(function(e,t){let[n,a]=xI(e,t);return n*a*4}(i,s));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function cC(e,t,n){let a=new Float32Array(t*n*4);return vI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}g(GS,{bindVertexProgramAttributeStreams:()=>iC,createBufferFromOutputTexture:()=>lC,createFloat16MatrixTexture:()=>JS,createFloat16PackedMatrixTexture:()=>rC,createFloat32MatrixTexture:()=>ZS,createIndexBuffer:()=>qS,createPackedMatrixTexture:()=>nC,createUnsignedBytesMatrixTexture:()=>eC,createVertexBuffer:()=>jS,createVertexShader:()=>HS,downloadByteEncodedFloatMatrixFromOutputTexture:()=>dC,downloadFloat32MatrixFromBuffer:()=>uC,downloadMatrixFromPackedOutputTexture:()=>cC,downloadPackedMatrixFromBuffer:()=>pC,getInternalFormatForFloat16MatrixTexture:()=>YS,getInternalFormatForFloat16PackedMatrixTexture:()=>aC,getInternalFormatForFloat32MatrixTexture:()=>KS,getInternalFormatForPackedMatrixTexture:()=>tC,getInternalFormatForUnsignedBytesMatrixTexture:()=>QS,uploadDenseMatrixToTexture:()=>sC,uploadPixelDataToTexture:()=>oC});var hC=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=Le().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,mI(t,e)):this.gl=yI(t),e=this.gl,2===Le().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>vI(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>vI(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>vI(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>vI(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>vI(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>vI(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>vI(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>vI(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Le().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=CI(this.gl,e),cS(this.gl,t))this.textureHalfFloatExtension=CI(this.gl,t);else if(Le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),cS(this.gl,a))this.colorBufferHalfFloatExtension=CI(this.gl,a);else if(Le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",cS(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!cS(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=jS(this.gl),this.indexBuffer=qS(this.gl),this.framebuffer=BI(this.gl),this.textureConfig=bI(this.gl,this.textureHalfFloatExtension)}get debug(){return Le().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;vI(e,(()=>e.finish())),vI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),vI(e,(()=>e.deleteFramebuffer(this.framebuffer))),vI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),vI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),vI(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),ZS(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),JS(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),eC(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),oC(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),sC(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),rC(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),nC(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(ZI(this.gl,this.framebuffer),this.outputTexture=null),vI(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>dC(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,i){return pC(this.gl,e,0,0,0,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return uC(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let a=lC(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Le().getBool("WEBGL_FENCE_API_ENABLED")){let a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>cC(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=HS(t));let n=FI(t);vI(t,(()=>t.attachShader(n,this.vertexShader))),vI(t,(()=>t.attachShader(n,e))),_I(t,n);let a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&PI(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;vI(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),iC(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(vI(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&PI(this.gl,this.program),vI(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?HI(this.gl,e,t):jI(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),vI(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),qI(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[a,r]=xI(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&PI(this.gl,this.program),YI(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}vI(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),vI(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=CI(this.gl,2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await wr.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Le().platform&&(n=Le().platform.setTimeoutCustom.bind(Le().platform)),wr.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),KI(this.gl,e,this.framebuffer),this.debug&&YI(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(KI(this.gl,this.outputTexture,this.framebuffer),this.debug&&YI(this.gl)):ZI(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let a=this.gl;KI(a,e,this.framebuffer),this.debug&&YI(a),this.outputTexture=e,vI(a,(()=>a.viewport(0,0,t,n))),vI(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),vI(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}},{addImpl:fC,bincountImpl:mC,bincountReduceImpl:yC,bitwiseAndImpl:gC,castImpl:AC,ceilImpl:xC,concatImpl:bC,equalImpl:vC,expImpl:wC,expm1Impl:kC,floorImpl:IC,gatherNdImpl:SC,gatherV2Impl:CC,greaterImpl:NC,greaterEqualImpl:TC,lessImpl:RC,lessEqualImpl:EC,linSpaceImpl:$C,logImpl:MC,maxImpl:FC,maximumImpl:_C,minimumImpl:PC,multiplyImpl:OC,negImpl:DC,notEqualImpl:zC,prodImpl:LC,raggedGatherImpl:WC,raggedRangeImpl:BC,raggedTensorToTensorImpl:VC,rangeImpl:UC,rsqrtImpl:GC,scatterImpl:HC,sigmoidImpl:jC,simpleAbsImpl:qC,sliceImpl:XC,sparseFillEmptyRowsImpl:KC,sparseReshapeImpl:ZC,sparseSegmentReductionImpl:YC,sqrtImpl:JC,staticRegexReplaceImpl:QC,stridedSliceImpl:eN,stringNGramsImpl:tN,stringSplitImpl:nN,stringToHashBucketFastImpl:aN,subImpl:rN,tileImpl:iN,topKImpl:sN,transposeImpl:oN,uniqueImpl:lN}=$g;function uN(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function dN(e,t){return 1===t?[e]:uN(e,t)}var pN=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=BS(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function(e,t,n="index"){let a=function(e,t){let n=e.length,a=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=a[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${a[e+1]})`;return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${a[r]}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}(["r","c","d"],"inputShape"):vS(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":kS(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function cN(e,t,n,a,r){let i,s=function(e,t){switch(e){case cI.PACKED_2X2_FLOAT32:return tC(t);case cI.PACKED_2X2_FLOAT16:return aC(t);case cI.UNPACKED_FLOAT32:return KS(t);case cI.UNPACKED_FLOAT16:return YS(t);case cI.PACKED_4X1_UNSIGNED_BYTE:return QS(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);if(r){let[t,n]=xI(e[0],e[1]);i=t*n}else{let[t,n]=gI(e[0],e[1]);i=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function hN(e,t){if(e===pI.UPLOAD)return cI.PACKED_2X2_FLOAT32;if(e===pI.RENDER||null==e)return function(e){return Le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?cI.PACKED_2X2_FLOAT32:cI.UNPACKED_FLOAT32:e?cI.PACKED_2X2_FLOAT16:cI.UNPACKED_FLOAT16}(t);if(e===pI.DOWNLOAD||e===pI.PIXELS)return cI.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function fN(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var mN=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=BS(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},yN="if (isnan(x)) return x;",gN="return x;",AN="return abs(x);",xN="return (x >= 0.0) ? x : (exp(x) - 1.0);",bN=yN+"\n  return (x < 0.0) ? 0.0 : x;\n",vN=yN+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",wN="return x;",kN="return 1.0 / (1.0 + exp(-1.0 * x));",IN="return x;",SN="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",CN="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",NN="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",TN="return 1.0 / (1.0 + exp(-1.0 * x));",RN=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=BS(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},EN=Um.whereImpl,$N={},MN=Le().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),FN=class extends W{nextDataId(){return FN.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Le().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof hC)t=e;else{let n=yI(Le().getNumber("WEBGL_VERSION"),e);t=new hC(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=yI(Le().getNumber("WEBGL_VERSION"));t=new hC(e),this.binaryCache=function(e){return e in $N||($N[e]={}),$N[e]}(Le().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let a=hN(t,n),r=fN(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let i,s=cN(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}return a===cI.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===cI.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===cI.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===cI.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===cI.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;let r=hN(n,a),i=fN(t,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);let s=cN(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=Le().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;let l=this.usedTextures[i],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Le().global.screen?1024:Le().global.screen.height*Le().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new L(this,Ks())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,i){let s=this.makeTensorInfo(t,n),o=this.texData.get(s.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[a,r]},o.texShape=[a,r];let l=aS(t),u=new US(l,!1,i),d=this.runWebGLProgram(u,[s],n,[[a,r]]);return d.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(s),d.dataId}write(e,t,n){if((Le().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Le().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:pI.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,r){if(Le().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:pI.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:i,shape:s,isPacked:o}=t;if(null!=i){let t;t=o?new RN(s,wN):new mN(s,wN);let n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;let l,u,d=null!=this.activeTimers;if(d&&(l=wr.now()),"complex64"===a){let e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);u=Pf.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=wr.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:i,complexTensorInfos:s,isPacked:o}=t;if(null!=r){let t;t=o?new RN(a,wN):new mN(a,wN);let n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Le().getBool("DEBUG")&&!Le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Le().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==i&&Le().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...AI(a))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){let e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]),t=e[0],n=e[1];u=Pf.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{let e=wr.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){let e=this.gpgpu.gl;vI(e,(()=>e.deleteBuffer(d)))}let p=this.convertAndCacheOnCPU(e,u),c=this.pendingRead.get(e);return this.pendingRead.delete(e),c.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ks().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:a,shape:r,slice:i,dtype:s,isPacked:o,texture:l}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new RN(r,wN):new mN(r,wN);let a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:s}],s),i=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),i}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),d=Ks().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>wr.decodeString(e)));return Ws(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ws(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!II(n))throw Le().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=wr.sizeFromShape(t);if(Le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),a=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...AI(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),i}let i=Le().getBool("WEBGL_PACK")&&!0===a,s=i?aS(t):t,o=i?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=pI.DOWNLOAD;let t=bS();this.outputShape=e,this.userCode=`\n      ${IS}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(s):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=pI.DOWNLOAD;let t=bS();this.outputShape=e,this.userCode=`\n      ${IS}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(s),l=this.runWebGLProgram(o,[{shape:s,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=wr.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=wr.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);let s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(r);s.kernelMs=wr.sum(e),s.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:wr.now(),endMs:null}}endTimer(e){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=wr.now(),e)}async getQueryTime(e){if(Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:a,usage:r,isPacked:i,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,i)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=MN){return Le().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&wr.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Pf.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return EN(e.shape,t)}packedUnaryOp(e,t,n){let a=new RN(e.shape,t),r=this.compileAndRun(a,[e],n);return Ks().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=qC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,AN,e.dtype);let t=new mN(e.shape,AN),n=this.compileAndRun(t,[e]);return Ks().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&wr.isString(n[0])){let r=n.map((e=>wr.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return Ks().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=BS(this.outputShape.length);let t=e.length,n=dN("rc",t),a=PS(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=BS(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=dN("rc",this.rank),t=PS(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[tS(e.shape),...nS(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[tS(t),...nS(t)],i=new pN(r,n),s=[n],o=this.runWebGLProgram(i,[a],e.dtype,s,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:a,shape:r,dtype:i}=n;if(null!=t){let e=wr.sizeFromShape(r),n=t[0]*t[1]*4;wr.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let s,o=aS(r);s=a?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=dI.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=bS();this.outputShape=e,this.enableShapeUniforms=BS(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?wS(["r","c","d"],e):vS(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=dI.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=bS();this.outputShape=e,this.enableShapeUniforms=BS(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?wS(["r","c","d"],e):vS(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o);let l=[null!=t?t:AI(o)];return{dtype:i,shape:r,dataId:this.runWebGLProgram(s,[{shape:o,dtype:i,dataId:e}],i,l,!0,t).dataId}}runWebGLProgram(e,t,n,a,r=!1,i){let s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===dI.DENSE){let t=null!=i?i:AI(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===wr.sizeFromShape(s.shape))return o.values=wr.getTypedArrayFromDType(s.dtype,0),s;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&wr.sizeFromShape(t.shape)<=Le().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!sS(n.shape,t.shape)){let e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);let d,p={shape:s.shape,texData:o,isUniform:!1},c=function(e,t,n){let a="";t.concat(n).forEach((t=>{let r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let i=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:l}=OS(e.packedInputs,t.shape,i),u="",d="",p="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=wr.computeStrides(o);p=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;let c=t.shape.length,h=2===o.length&&wr.arraysEqual(t.shape,i),f=1===wr.sizeFromShape(t.shape),m=Pf.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&c===n.shape.length&&wr.arraysEqual(i,n.texData.texShape),g=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;a+=`${c}_${y}_${s?l:""}_${o.length}_${f}_${m}_${h}_${u}_${d}_${p}_${g}_${r}`}else{let e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${r}`}}));let r=e.userCode,i=e.constructor.name;return i+="_"+a+"_"+r+`${Le().getNumber("WEBGL_VERSION")}`,i}(e,u,p),h=this.getAndSaveBinary(c,(()=>function(e,t,n,a){let r=n.map(((e,n)=>{let a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),i=r.map((e=>e.shapeInfo)),s={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=CS(r,s,t),l=TI(e.gl,o),u=e.createProgram(l);return Le().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:s},LS(e,t,u)))}(this.gpgpu,e,u,p))),f=null!=this.activeTimers;f&&(d=this.startTimer()),Le().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(WS(t.inShapeInfos,n),WS([t.outShapeInfo],[a]));let i=a.texData.texture,s=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):e.setOutputMatrixTexture(i.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Le().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let a=0;a<n.length;++a){let r=n[a],{uniform:i,offset:s,shape:o,texShape:l}=t.variablesLocations[a];if(o){let{uniformShape:n}=OS(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,r.texData.texShape[0],r.texData.texShape[1]),null!=i){if(r.isUniform){if(wr.sizeFromShape(r.shape)<2)e.gl.uniform1f(i,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}continue}null!=r.texData.slice&&null!=s&&e.gl.uniform1i(s,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,i,a)}}let o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){let n=wr.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let n=0;n<t.program.customUniforms.length;++n){let a=t.program.customUniforms[n],i=t.customUniformLocations[n],s=r[n];if("float"===a.type)e.gl.uniform1fv(i,s);else if("vec2"===a.type)e.gl.uniform2fv(i,s);else if("vec3"===a.type)e.gl.uniform3fv(i,s);else if("vec4"===a.type)e.gl.uniform4fv(i,s);else if("int"===a.type)e.gl.uniform1iv(i,s);else if("ivec2"===a.type)e.gl.uniform2iv(i,s);else if("ivec3"===a.type)e.gl.uniform3iv(i,s);else{if("ivec4"!==a.type)throw Error(`uniform type ${a.type} is not supported yet.`);e.gl.uniform4iv(i,s)}}e.executeProgram()}(this.gpgpu,h,u,p,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let m=Le().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=wr.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Le().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){let e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,a,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Le().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Js((()=>{if(!Le().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Le().getBool("DEBUG");Le().set("DEBUG",!1);let t=this.abs(nu(1e-8)).dataSync()[0];if(Le().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:i,usage:s,isPacked:o}=t;if(null!=i)return;let l,u=null!=this.activeTimers;u&&(l=wr.now());let d=t.texShape;if(null==d&&(d=rS(n,o),t.texShape=d),null!=r){let e,i=aS(n),s=d[1],p=d[0],c=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(o||!c)&&([s,p]=xI(d[0],d[1])),e=o?new class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=bS();this.outputShape=e,this.enableShapeUniforms=BS(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){let i=2*t+r;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":kS(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${r};\n        }\n    `}}(i,c):new US(i,c);let h=c?[p,s]:d,f=this.makeTensorInfo(h,a),m=this.texData.get(f.dataId);m.usage=c?pI.PIXELS:pI.UPLOAD,m.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),s,p,r);let y=[[p,s]],g=!0,A=this.runWebGLProgram(e,[f],a,y,g),x=this.texData.get(A.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Le().get("ENGINE_COMPILE_ONLY")?this.disposeData(A.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(A.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=wr.now()-l)}else{let e=this.acquireTexture(d,s,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*wr.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Ff(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(MI(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:s,outTexShapeLocation:o}=LS(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=s,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:a,height:r,width:i,channels:s}=e,o=Ks().backend;if(!o.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(a,t,n,r,i,s);return Ks().makeTensorFromDataId(l,t,n,o)}};FN.nextDataId=0;var _N="4.7.0";function PN(){Le().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ei.isBrowser()&&lo("webgl",(()=>new FN),2);var ON={forceHalfFloat:PN},DN="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",zN=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Pf.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=BS(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},LN="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",WN=class{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Pf.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=BS(r);let i="";if(a)if(0===r||1===wr.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${PS(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=dN("coords",r);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}};function BN(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var VN={kernelName:on,backendName:"webgl",kernelFunc:BN};function UN(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,i=n.makeTensorInfo(a.shape,"complex64"),s=n.texData.get(i.dataId),o=BN({inputs:{x:a},backend:n}),l=BN({inputs:{x:r},backend:n});return s.complexTensorInfos={real:o,imag:l},i}var GN={kernelName:gt,backendName:"webgl",kernelFunc:UN},HN="return (a < 0.) ? b * a : a;",jN="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",qN={kernelName:hn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:i}=a,s=n.makeTensorInfo([],"float32",wr.createScalarValue(i,"float32")),o=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new WN(jN,r.shape,s.shape):new zN(HN,r.shape,s.shape),l=n.runWebGLProgram(o,[r,s],"float32");return n.disposeIntermediateTensorInfo(s),l}},XN="return (a < 0.) ? b * a : a;",KN="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",ZN={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,i=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new WN(KN,a.shape,r.shape):new zN(XN,a.shape,r.shape);return n.runWebGLProgram(i,[a,r],"float32")}},YN="if (isnan(x)) return x;";function JN({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:i})=>{let s,{x:o}=r,l=i,u=a||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return s=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new RN(o.shape,t):new mN(o.shape,e),l.runWebGLProgram(s,[o],u)}}function QN({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:i}){return({inputs:s,backend:o})=>{let{a:l,b:u}=s,d=o;if(a&&"complex64"===l.dtype){let t=d.texData.get(l.dataId),n=d.texData.get(u.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:a.dataId,dtype:a.dtype,shape:u.shape},s=new zN(e,l.shape,u.shape);return d.runWebGLProgram(s,[r,i],fi(n.dtype,a.dtype))})),i=UN({inputs:{real:a,imag:r},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(r),i}let p,c=i||fi(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||d.shouldExecuteOnCPU([l,u]))&&null!=r){let e=d.texData.get(l.dataId).values,t=d.texData.get(u.dataId).values,n="string"===l.dtype?Pf.fromUint8ToStringArray(e):e,a="string"===l.dtype?Pf.fromUint8ToStringArray(t):t,[i,s]=r(l.shape,u.shape,n,a,c),o=d.makeTensorInfo(s,c);return d.texData.get(o.dataId).values=i,o}return p=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new WN(t,l.shape,u.shape,n):new zN(e,l.shape,u.shape),d.runWebGLProgram(p,[l,u],c)}}function eT(e,t=!1){if("linear"===e)return t?IN:gN;if("relu"===e)return t?CN:bN;if("elu"===e)return t?SN:xN;if("relu6"===e)return t?NN:vN;if("prelu"===e)return t?KN:XN;if("leakyrelu"===e)return t?jN:HN;if("sigmoid"===e)return t?TN:kN;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var tT=class{constructor(e,t,n,a=!1,r=!1,i=!1,s=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=BS(this.outputShape.length);let u=a?e[1]:e[2],d=Math.ceil(u/2),p=a?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",y="";s&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,y="result = activation(result);");let g=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",x="rc.x";e[0]<t[0]?A=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${A};\n        int batchB = ${x};\n        for (int i = 0; i < ${d}; i++) {\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${c});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${y}\n\n        setOutput(result);\n      }\n    `}},nT={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},aT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Pf.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},rT="return a * b;";function iT(e){let t,{inputs:n,backend:a}=e,{a:r,b:i}=n,s=Pf.upcastType(r.dtype,i.dtype);if("complex64"===r.dtype){let e=a.texData.get(r.dataId),t=a.texData.get(i.dataId),n=new aT(nT.REAL,r.shape,i.shape),s=new aT(nT.IMAG,r.shape,i.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape}],l=a.runWebGLProgram(n,o,"float32"),u=a.runWebGLProgram(s,o,"float32"),d=UN({inputs:{real:l,imag:u},backend:a});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(u),d}if(a.shouldExecuteOnCPU([r,i])){let e=a.texData.get(r.dataId),t=a.texData.get(i.dataId),[n,o]=OC(r.shape,i.shape,e.values,t.values,s),l=a.makeTensorInfo(o,s);return a.texData.get(l.dataId).values=n,l}return t=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new WN(rT,r.shape,i.shape):new zN(rT,r.shape,i.shape),a.runWebGLProgram(t,[r,i],s)}var sT={kernelName:Bn,backendName:"webgl",kernelFunc:iT};function oT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:i}=a,s=n,o=wr.sizeFromShape(r.shape),l=wr.inferFromImplicitShape(i,o),u=wr.sizeFromShape(l);wr.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let d=s.texData.get(r.dataId);return!d.isPacked||sS(r.shape,l)||null!==d.texture&&sS(d.shape,l)?(s.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){let a=[tS(e.shape),...nS(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},i=[tS(t),...nS(t)],s=new pN(i,a),o=[a],l=n.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,s)}var lT={kernelName:la,backendName:"webgl",kernelFunc:oT},uT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];let s=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${wr.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${s}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${s};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},dT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),d=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,c="vec4";"all"===t?(s="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",c="bvec4"):"any"===t&&(s="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",c="bvec4");let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===d}) {\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===d}) {\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===d}) {\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function pT(e,t,n,a){let r=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],a=Pf.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape),i=e;for(let s=0;s<r.length;s++){let o,l,{inSize:u,windowSize:d,outSize:p}=r[s];o="mean"===n?0===s?new uT({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:p},u):new uT({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:p}):new dT({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:p},n),l=i,i=a.runWebGLProgram(o,[i],t),l.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(l)}return i}var cT=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let a=PS(this.rank),r=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}},hT=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let a=PS(this.rank),r=uN("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=r[e];let s=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function fT(e,t,n){let a=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hT(e.shape,t):new cT(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function mT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;return function(e,t,n,a){let r=t,i=e.shape.length,s=wr.parseAxisParam(r,e.shape),o=s,l=Pf.getAxesPermutation(o,i),u=null!=l,d=e;u&&(d=fT(e,l,a),o=Pf.getInnerMostAxes(o.length,i)),Pf.assertAxesAreInnerMostDims("sum",o,i);let[p,c]=Pf.computeOutAndReduceShapes(d.shape,o),h=p;n&&(h=Pf.expandShapeToKeepDim(p,s));let f=wr.sizeFromShape(c),m=oT({inputs:{x:d},attrs:{shape:[wr.sizeFromShape(e.shape)/f,f]},backend:a}),y=pT(m,mi(e.dtype),"sum",a),g=oT({inputs:{x:y},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(y),u&&a.disposeIntermediateTensorInfo(d),g}(r,i,s,n)}var yT={kernelName:Ra,backendName:"webgl",kernelFunc:mT};function gT(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{perm:s}=r,o=a,l=i.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=i.shape[s[e]];if(o.shouldExecuteOnCPU([i])){let e=o.texData.get(i.dataId).values,n=oN(e,i.shape,i.dtype,s,u);t=o.makeTensorInfo(u,i.dtype),o.texData.get(t.dataId).values=n}else t=fT(i,s,o);return t}var AT={kernelName:Ya,backendName:"webgl",kernelFunc:gT},xT=1e3;function bT({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],c=a?t.shape[d-1]:t.shape[d-2],h=n?e.shape[u-1]:e.shape[u-2],f=a?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),y=t.shape.slice(0,-2),g=wr.sizeFromShape(m),A=wr.sizeFromShape(y),x=Ml.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);wr.assert(p===c,(()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));let b,v=n?[g,p,h]:[g,h,p],w=a?[A,f,c]:[A,c,f],k=oT({inputs:{x:e},backend:r,attrs:{shape:v}}),I=oT({inputs:{x:t},backend:r,attrs:{shape:w}}),S=[k,I],C=Math.max(g,A),N=n?k.shape[1]:k.shape[2],T=null!=i,R=null!=s,E="leakyrelu"===l,$=null!=l?eT(l,!0):null;if((1===h||1===f)&&N>xT&&!1===(T||R||E||null!=$)){let e=k,t=I;n&&(e=gT({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),S.push(e)),a&&(t=gT({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),S.push(t));let i=1===f,s=e;1!==f&&(s=oT({inputs:{x:e},backend:r,attrs:{shape:[C,N,1]}}),S.push(s));let o=1===f?2:1,l=t;i&&(l=oT({inputs:{x:t},backend:r,attrs:{shape:[C,1,N]}}),S.push(l));let u=iT({inputs:{a:s,b:l},backend:r});b=mT({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),S.push(u)}else{let l=fi(e.dtype,t.dtype),u=new tT(v,w,[C,h,f],n,a,T,$,R,E),d=[k,I];if(null!=i&&d.push(i),R&&d.push(s),E){let e=r.makeTensorInfo([],"float32",wr.createScalarValue(o,"float32"));d.push(e),S.push(e)}b=r.runWebGLProgram(u,d,l)}let M=oT({inputs:{x:b},backend:r,attrs:{shape:x}});S.push(b);for(let e of S)r.disposeIntermediateTensorInfo(e);return M}var vT={kernelName:sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=a;return bT({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}},wT="return abs(x);",kT={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){let e=a.texData.get(r.dataId),t=qC(e.values);return a.makeTensorInfo(r.shape,r.dtype,t)}return t=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new RN(r.shape,wT):new mN(r.shape,wT),a.runWebGLProgram(t,[r],r.dtype)}},IT=JN({opSnippet:yN+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ST={kernelName:He,backendName:"webgl",kernelFunc:IT},CT=JN({opSnippet:yN+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),NT={kernelName:je,backendName:"webgl",kernelFunc:CT},TT="return a + b;",RT=QN({opSnippet:TT,packedOpSnippet:TT,supportsComplex:!0,cpuKernelImpl:fC}),ET={kernelName:qe,backendName:"webgl",kernelFunc:RT},$T={kernelName:Xe,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a}=t,r=n;if(1===r.length)return BN({inputs:{x:r[0]},backend:a});if(r.length>Le().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),i=e({inputs:r.slice(t),backend:a});return e({inputs:[n,i],backend:a})}let i=r.map((e=>e.dtype)).reduce(((e,t)=>fi(e,t))),s=r.map((e=>e.shape)),o=Le().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}}(r[0].shape,s):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}}(r[0].shape,s);return a.runWebGLProgram(o,r,i)}},MT={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a,o=r.shape.length,l=wr.parseAxisParam(i,r.shape),u=l,d=Pf.getAxesPermutation(u,o),p=r;null!=d&&(p=gT({inputs:{x:r},backend:n,attrs:{perm:d}}),u=Pf.getInnerMostAxes(u.length,o)),Pf.assertAxesAreInnerMostDims("all",u,o);let c,[h,f]=Pf.computeOutAndReduceShapes(p.shape,u),m=oT({inputs:{x:p},backend:n,attrs:{shape:[-1,wr.sizeFromShape(f)]}}),y=pT(m,m.dtype,"all",n);return c=oT(s?{inputs:{x:y},backend:n,attrs:{shape:Pf.expandShapeToKeepDim(h,l)}}:{inputs:{x:y},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),null!=d&&n.disposeIntermediateTensorInfo(p),c}},FT={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a,o=r.shape.length,l=wr.parseAxisParam(i,r.shape),u=l,d=Pf.getAxesPermutation(u,o),p=r;null!=d&&(p=gT({inputs:{x:r},backend:n,attrs:{perm:d}}),u=Pf.getInnerMostAxes(u.length,o)),Pf.assertAxesAreInnerMostDims("any",u,o);let c,[h,f]=Pf.computeOutAndReduceShapes(p.shape,u),m=oT({inputs:{x:p},backend:n,attrs:{shape:[-1,wr.sizeFromShape(f)]}}),y=pT(m,m.dtype,"any",n);return c=oT(s?{inputs:{x:y},backend:n,attrs:{shape:Pf.expandShapeToKeepDim(h,l)}}:{inputs:{x:y},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),null!=d&&n.disposeIntermediateTensorInfo(p),c}},_T=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:a,batchSize:r,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];let s="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},PT=class{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,wr.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let r=e[e.length-1],i=Math.ceil(r/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");let s,o,l=this.outputShape,u=l.length,d=PS(u),p=dN("coords",u);if(1===i){o=u+1;let e=PS(o);s=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,s=`\n        ${d} sourceLocR = coords;\n        ++${p[u-1]};\n        ${d} sourceLocG = coords;\n        ++${p[u-2]};\n        ${d} sourceLocA = coords;\n        --${p[u-1]};\n        ${d} sourceLocB = coords;\n        --${p[u-2]};`;let c=["x","y","z","w","u","v"].slice(0,o),h="."+c[o-1],f=c.map((e=>"int "+e)),m=dN("sourceLocR",o-1).concat("inIdx.r"),y=dN("sourceLocG",o-1).concat("inIdx.g"),g=dN("sourceLocB",o-1).concat("inIdx.b"),A=dN("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",b=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${A.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${g.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,w=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${c.join()}),\n                                          vec2(${c.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${c.join()}),\n                               vec2(${c.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${d} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${s}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function OT(e,t,n,a=null){let r=t.shape[0],i=t.shape[1];null!=a&&(r=a.shape[0],i=a.shape[1]);let s=Pf.computeOptimalWindowSize(i),o={windowSize:s,inSize:i,batchSize:r,outSize:Math.ceil(i/s)},l=new _T(o,n,null==a),u=[t];null!=a&&u.push(a);let d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;let p=OT(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function DT(e,t,n,a=null){let r=null!=a?a.shape:t.shape,i=r[r.length-1],s=Pf.computeOptimalWindowSize(i),o=new PT(r,s,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let a=DT(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function zT(e,t,n,a){let r=[n];if(Pf.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!Le().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],i=e.texData.get(t.dataId),s=t;null!==i&&i.isPacked&&(s=e.unpackTensor(t),n.push(s));let[o,l]=Pf.computeOutAndReduceShapes(s.shape,r),u=wr.sizeFromShape(l),d=oT({inputs:{x:s},backend:e,attrs:{shape:[-1,u]}});n.push(d);let p=OT(e,d,a);n.push(p);let c=oT({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return DT(e,t,a)}var LT={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=wr.parseAxisParam(i,r.shape),o=Pf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=gT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Pf.getInnerMostAxes(s.length,l.shape.length)),Pf.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let d=zT(n,l,s[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},WT={kernelName:Je,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=wr.parseAxisParam(i,r.shape),o=Pf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=gT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Pf.getInnerMostAxes(s.length,l.shape.length)),Pf.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let d=zT(n,l,s[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},BT=JN({opSnippet:yN+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),VT={kernelName:Qe,backendName:"webgl",kernelFunc:BT},UT=JN({opSnippet:yN+"return log(x + sqrt(x * x + 1.0));"}),GT={kernelName:et,backendName:"webgl",kernelFunc:UT},HT=JN({opSnippet:yN+"\n  return atan(x);\n"}),jT={kernelName:tt,backendName:"webgl",kernelFunc:HT},qT=QN({opSnippet:DN+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+LN+"\n  return result;\n"}),XT={kernelName:at,backendName:"webgl",kernelFunc:qT},KT=JN({opSnippet:yN+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),ZT={kernelName:nt,backendName:"webgl",kernelFunc:KT},YT=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,g="0.0";if(f||(g="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${o});\n        const ivec2 pads = ivec2(${c}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?r?m:y:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(A="avgValue / max(count, 1.0)");let x=4*Math.floor(i/4),b=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${d};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${A});\n      }\n    `}},JT=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,p=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,y=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;let A="avg"===t,x="0.0";if(A||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${y}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${c};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${d}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let v=4*Math.floor(i/4),w=i%4,k=`\n      if (${A}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${y}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n        }\n        setOutput(${b});\n      }\n    `}},QT={kernelName:rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;AS(r,"avgPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;wr.assert(Pf.eitherStridesOrDilationsAreOne(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));let u=Pf.computePool2DInfo(r.shape,i,s,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&wr.arraysEqual(u.inShape,u.outShape))return BN({inputs:{x:r},backend:n});let d=new YT(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}},eR={kernelName:st,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a,d=Pf.computePool3DInfo(r.shape,i,s,[1,1,1],o,l,u),p=new JT(d,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}},tR={kernelName:ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=Pf.computePool3DInfo(s.shape,o,l,[1,1,1],u,d),c=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=d-1-e.padInfo.front,f=p-1-e.padInfo.top,m=c-1-e.padInfo.left,y=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${y});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(c,[r],s.dtype)}},nR={kernelName:it,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i;AS([r,i],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,d=Pf.computePool2DInfo(s.shape,o,l,1,u),p=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${d});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[r],s.dtype)}},aR={kernelName:lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;return bT({a:r,b:i,transposeA:s,transposeB:o,backend:n})}},rR={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,mean:r,variance:i,offset:s,scale:o}=e;wr.assert(r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),wr.assert(null==s||r.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),wr.assert(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[a,r,i],d=null;null!=s&&(d=s.shape,u.push(s));let p=null;null!=o&&(p=o.shape,u.push(o));let c=Le().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Pf.assertAndGetBroadcastShape(e,t),Pf.assertAndGetBroadcastShape(e,n);let s="vec4(0.0)";null!=a&&(Pf.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(Pf.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(a.shape,r.shape,i.shape,d,p,l):new class{constructor(e,t,n,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Pf.assertAndGetBroadcastShape(e,t),Pf.assertAndGetBroadcastShape(e,n);let s="0.0";null!=a&&(Pf.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=r&&(Pf.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(a.shape,r.shape,i.shape,d,p,l);return t.runWebGLProgram(c,u,u[0].dtype)}},iR=["x","y","z","w","u","v"];function sR(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,size:s}=a,[o,l]=uf.parseSliceParams(r,i,s);if(uf.assertParamsValid(r,o,l),0===wr.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){let e=n.texData.get(r.dataId),t=XC(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}let{isPacked:u}=n.texData.get(r.dataId),d=uf.isSliceContinous(r.shape,o,l);if(u||!d){let e=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=PS(this.rank),n=dN("coords",this.rank),a=dN("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,s=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${i};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${s}\n        ${o}\n        setOutput(result);\n      }\n    `}}(l):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=PS(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,a=function(e){if(1===e)return"sourceLoc";if(e<=6)return iR.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${iR[t]} = start[${t}] + coords.${iR[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${a}));\n      }\n    `}}(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){let r=a.texData.get(e.dataId),i=a.makeTensorInfo(n,e.dtype),s=a.texData.get(i.dataId);Object.assign(s,r),s.refCount=1,s.shape=n,s.dtype=e.dtype;let o=uf.computeFlatOffset(t,wr.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),s.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=a.dataRefCount.get(s.slice.origDataId)||1;return a.dataRefCount.set(s.slice.origDataId,l+1),i}(r,o,l,n)}var oR={kernelName:wa,backendName:"webgl",kernelFunc:sR},lR={kernelName:ut,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a;wr.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=i.reduce(((e,t)=>e*t)),l=Pf.getReshaped(r.shape,i,o),u=Pf.getPermuted(l.length,i.length),d=Pf.getReshapedPermuted(r.shape,i,o),p=Pf.getSliceBeginCoords(s,i.length),c=Pf.getSliceSize(d,s,i.length),h=[],f=oT({inputs:{x:r},backend:n,attrs:{shape:l}}),m=gT({inputs:{x:f},backend:n,attrs:{perm:u}}),y=oT({inputs:{x:m},backend:n,attrs:{shape:d}}),g=sR({inputs:{x:y},backend:n,attrs:{begin:p,size:c}});return h.push(f),h.push(m),h.push(y),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},uR={kernelName:dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s}=a,o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=mC(o,l,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,u)}},dR={kernelName:pt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a}=e,{a:r,b:i}=n,s=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Le().getNumber("WEBGL_VERSION");if(a.shouldExecuteOnCPU([r,i])||1===o){let e=a.texData.get(r.dataId).values,t=a.texData.get(i.dataId).values,[n,s]=gC(r.shape,i.shape,e,t,r.dtype),o=a.makeTensorInfo(s,r.dtype);return a.texData.get(o.dataId).values=n,o}return t=s?new WN("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,i.shape,!1):new zN("\n  return float(int(a.r) & int(b.r));\n",r.shape,i.shape),a.runWebGLProgram(t,[r,i],r.dtype)}},pR={kernelName:ht,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,i=n.readSync(a.dataId),s=n.readSync(r.dataId),o=Pf.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},cR=QN({opSnippet:"return float(a != b);",cpuKernelImpl:zC,dtype:"bool"}),hR={kernelName:Un,backendName:"webgl",kernelFunc:cR};function fR(e){let{inputs:t,backend:n}=e,{input:a}=t;return BN({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}var mR={kernelName:ia,backendName:"webgl",kernelFunc:fR},yR={kernelName:ft,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a,attrs:r}=t,{x:i}=n,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return BN({inputs:{x:i},backend:a});let t=ed(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),r=UN({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){let t=fR({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(t),n}if(!wr.hasEncodingLoss(i.dtype,s)){let e=BN({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(a.shouldExecuteOnCPU([i])){let e=a.texData.get(i.dataId).values,[t,n,r]=AC(e,i.shape,i.dtype,s);return a.makeTensorInfo(t,n,r)}if("int32"===s)return function(e,t){let n=new mN(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(i,a);if("bool"===s){let e=a.makeTensorInfo([],"bool",wr.getTypedArrayFromDType("bool",1)),t=cR({inputs:{a:i,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},gR="return ceil(x);",AR=JN({opSnippet:gR,packedOpSnippet:gR,cpuKernelImpl:xC}),xR={kernelName:mt,backendName:"webgl",kernelFunc:AR},bR={kernelName:yt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{clipValueMin:s,clipValueMax:o}=r;t=Le().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(i.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(i.shape);let l=[[s],[o]];return a.runWebGLProgram(t,[i],i.dtype,l)}};function vR(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var wR={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),i=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(a.shape),s=[vR(a,r.complexTensorInfos.real),vR(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,s,s[0].dtype)}},kR=class{constructor(e){this.outputShape=[],this.outputShape=Pf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}let a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},IR=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Pf.computeOutShape(e,t);let n=this.outputShape,a=n.length,r=PS(a),i=dN("coords",a),s=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=s[t],u=s.slice(-2),d=s.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];p+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${SR(s,l,t)}),\n            vec2(${SR(u,l,t)}));\n        }`}let c=o.length,h=o[o.length-1];p+=`\n        return getChannel(\n          getT${c}(${SR(s,l,h)}),\n          vec2(${SR(u,l,h)}));`,this.userCode=`\n      float getValue(${s.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[a-1]} = ${i[a-1]} + 1;\n        if (${i[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[a-2]} = ${i[a-2]} + 1;\n        if (${i[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[a-1]} = ${i[a-1]} - 1;\n        if (${i[a-2]} < ${n[a-2]} &&\n            ${i[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}};function SR(e,t,n){let a=e.indexOf(t);return e.map(((e,t)=>t===a?`${e} - ${n}`:e)).join()}function CR(e){let{inputs:t,backend:n}=e,{input:a}=t;return BN({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}var NR={kernelName:un,backendName:"webgl",kernelFunc:CR};function TR(e,t,n){let a=e[0].dtype;if("complex64"===a){let a=e.map((e=>fR({inputs:{input:e},backend:n}))),r=e.map((e=>CR({inputs:{input:e},backend:n}))),i=TR(a,t,n),s=TR(r,t,n),o=UN({inputs:{real:i,imag:s},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){let r=e.map((e=>{let a=[-1,wr.sizeFromShape(e.shape.slice(t))];return oT({inputs:{x:e},backend:n,attrs:{shape:a}})})),i=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=Pf.computeOutShape(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=bC(i,s,a,o),u=Pf.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}let i=e.filter((e=>wr.sizeFromShape(e.shape)>0)),s=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){let t=s?new mN(e[0].shape,wN):new RN(e[0].shape,wN);return n.runWebGLProgram(t,e,a)}let o=Le().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){let e=[];for(let a=0;a<i.length;a+=o){let r=i.slice(a,a+o);e.push(TR(r,t,n))}let a=TR(e,t,n);for(let t of e)n.disposeIntermediateTensorInfo(t);return a}if(s){let e=new IR(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,a)}let{tensors2D:l,outShape:u}=function(e,t,n){let a=Pf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>oT({inputs:{x:e},attrs:{shape:[-1,wr.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:a}}(i,t,n),d=new kR(l.map((e=>e.shape))),p=n.runWebGLProgram(d,l,a);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));let c=oT({inputs:{x:p},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(p),c}function RR(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,i=wr.parseAxisParam(r,t[0].shape)[0],s=t.map((e=>e.shape));Pf.assertParamsConsistent(s,i);let o=Pf.computeOutShape(t.map((e=>e.shape)),i);if(0===wr.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>wr.sizeFromShape(e.shape)>0));return 1===l.length?BN({inputs:{x:l[0]},backend:n}):TR(l,i,n)}var ER={kernelName:xt,backendName:"webgl",kernelFunc:RR},$R=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let i=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,c=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,y=m?1:2,g=m?2:3,A=m?3:1,x="",b="";n&&(x=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${A}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${y}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${c}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${b}\n        setOutput(result);\n      }\n    `}},MR=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=BS(this.outputShape.length);let i=e.padInfo.left,s=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u,p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)p+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;p+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)p+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(d+1)/2;t++){let n=2*t;if(p+=`\n           xC = xCCorner + ${n*o};\n           `,1===s){if(n<u&&(i%2==1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,p+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){let e=i%2==0?wr.nearestLargerEven(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,p+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):p+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(i%2==1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(p+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(p+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(p+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let c="",h="";n&&(c=a?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,h="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${c}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${h}\n         setOutput(result);\n       }\n     `}};function FR(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function _R({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let l,u=e.shape,d=a.texData.get(e.dataId),p=n.inChannels,c=u[0]*u[1]*u[2],h=n.outChannels,f="channelsLast"===n.dataFormat,m=[];if(null!=i){let e=FR(i.shape,f);null!=e&&(i=oT({inputs:{x:i},backend:a,attrs:{shape:e}}),m.push(i))}if(null!=r){let e=FR(r.shape,f);null!=e&&(r=oT({inputs:{x:r},backend:a,attrs:{shape:e}}),m.push(r))}if((1!==c&&1!==h||!(p>xT))&&d.isPacked&&f&&null!=d.texture&&u[2]%2!=0&&wr.arraysEqual(d.shape.slice(-3),u.slice(-3))){let p=u[0]*u[1]*(u[2]+1),c={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},h=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,wr.assert(sS(d.shape,c.shape),(()=>`packed reshape ${d.shape} to ${c.shape} isn't free`));let f=oT({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(f);let y=bT({a:c,b:f,backend:a,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),g=a.texData.get(y.dataId);wr.assert(g.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=h,g.shape=n.outShape,l=BN({inputs:{x:y},backend:a}),l.shape=n.outShape,m.push(y)}else{let u=n.outHeight*n.outWidth,d=oT({inputs:{x:e},backend:a,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),p=oT({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),c=bT({a:f?d:p,b:f?p:d,transposeA:!f,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:s});l=oT({inputs:{x:c},backend:a,attrs:{shape:n.outShape}}),m.push(d),m.push(p),m.push(c)}for(let e of m)a.disposeIntermediateTensorInfo(e);return l}function PR({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,outWidth:p,outHeight:c,dataFormat:h}=n,f="channelsLast"===h,m=l*u*d,y=c*p,g=[n.batchSize,m,y],A=[];if(null!=i){let e=FR(i.shape,f);null!=e&&(i=oT({inputs:{x:i},backend:a,attrs:{shape:e}}),A.push(i))}if(null!=r){let e=FR(r.shape,f);null!=e&&(r=oT({inputs:{x:r},backend:a,attrs:{shape:e}}),A.push(r))}let x=oT({inputs:{x:t},backend:a,attrs:{shape:[1,m,wr.sizeFromShape(t.shape)/m]}});A.push(x);let b=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=BS(this.outputShape.length);let{dataFormat:n}=t,a=bS(),r="channelsLast"===n,i=r?1:2,s=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${s}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${a.output} = result;\n      }\n    `}}(g,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],w=a.runWebGLProgram(b,[e],"float32",v),k=oT({inputs:{x:w},backend:a,attrs:{shape:g}});A.push(w),A.push(k);let I=null!=r,S=null!=i,C="leakyrelu"===o,N=o?eT(o,!0):null,T=new tT(f?k.shape:x.shape,f?x.shape:k.shape,f?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],!0,!1,I,N,S,C),R=f?[k,x]:[x,k];if(r&&R.push(r),S&&R.push(i),C){let e=a.makeTensorInfo([],"float32",wr.createScalarValue(s,"float32"));R.push(e),A.push(e)}let E=a.runWebGLProgram(T,R,"float32"),$=oT({inputs:{x:E},backend:a,attrs:{shape:n.outShape}});A.push(E);for(let e of A)a.disposeIntermediateTensorInfo(e);return $}var OR,DR={kernelName:bt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s}=n,{strides:o,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}=r,c=Pf.convertConv2DDataFormat(u),h=Pf.computeConv2DInfo(i.shape,s.shape,o,d,l,p,!1,c);if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(h.strideWidth<=2&&"channelsLast"===c&&Le().getBool("WEBGL_EXP_CONV")){let e=new MR(h),n=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];t=a.runWebGLProgram(e,[i,s],"float32",n)}else if(Le().getBool("WEBGL_CONV_IM2COL"))t=PR({x:i,filter:s,convInfo:h,backend:a});else{let e=new $R(h);t=a.runWebGLProgram(e,[i,s],"float32")}else t=_R({x:i,filter:s,convInfo:h,backend:a});let f=oT({inputs:{x:t},backend:a,attrs:{shape:h.outShape}});return a.disposeIntermediateTensorInfo(t),f}},zR={kernelName:vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,p=Pf.convertConv2DDataFormat(l),c=Pf.computeConv2DInfo(r.shape,d,s,1,o,u,!1,p),h=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c);return n.runWebGLProgram(h,[r,i],"float32")}},LR={kernelName:wt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{inputShape:s,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=a,p=Pf.convertConv2DDataFormat(u),c=Pf.computeConv2DInfo(s,i.shape,o,1,l,d,!1,p);if(Le().getBool("WEBGL_PACK")&&"channelsLast"===p){let e=[[c.strideHeight,c.strideWidth]],t=new class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=BS(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}(c);return n.runWebGLProgram(t,[r,i],"float32",e)}{let e=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,d=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${d}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c);return n.runWebGLProgram(e,[r,i],"float32")}}},WR={kernelName:kt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a,u=Pf.computeConv3DInfo(r.shape,i.shape,s,l,o),d=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,p=e.filterHeight,c=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${i}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${d}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${c}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(d,[r,i],"float32")}},BR={kernelName:It,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a,u=Pf.computeConv3DInfo(r.shape,l,s,1,o),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(d,[r,i],"float32")}},VR={kernelName:St,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{pad:s,strides:o,inputShape:l}=a,u=Pf.computeConv3DInfo(l,i.shape,o,1,s),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(d,[r,i],"float32")}},UR=JN({opSnippet:YN+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${LN}\n  return result;\n`}),GR={kernelName:Ct,backendName:"webgl",kernelFunc:UR},HR=JN({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),jR={kernelName:Nt,backendName:"webgl",kernelFunc:HR},qR={kernelName:Et,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:o,method:l,extrapolationValue:u}=a,d=new class{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,s,o,l]=e,[u]=t,[d,p]=n;this.outputShape=[u,d,p,l];let c="bilinear"===a?1:0,[h,f]=[s-1+".0",o-1+".0"],[m,y,g]=d>1?[""+(s-1)/(d-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[A,x,b]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${A});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${y};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${c} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(r.shape,i.shape,o,l,u);return n.runWebGLProgram(d,[r,i,s],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(OR||(OR={}));var XR=class{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,i=this.op===OR.Prod?"1.0":"0.0",s=n?i:`getX(${KR(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=a?"end != "+(o-1):"end != 0",u=a?"end + 1":"end - 1"):(l=a?`end + pow2 < ${o}`:"end >= pow2",u=a?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${PS(r)} coords = getOutputCoords();\n        int end = ${ZR(r,"coords",this.op)};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${ZR(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${KR(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function KR(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function ZR(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function YR(e,t,n,a,r,i){let s=t.shape.length,o=Pf.getAxesPermutation([a],s),l=t;null!=o&&(l=gT({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=Pf.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);let d=l.shape[u],p=BN({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){let a=new XR(e,l.shape,!1,i),r=[[t]],s=p;p=n.runWebGLProgram(a,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(r){let t=new XR(e,l.shape,r,i),a=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=o){let e=gT({inputs:{x:p},backend:n,attrs:{perm:Pf.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}var JR={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return YR(OR.Prod,r,n,i,s,o)}},QR={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return YR(OR.Sum,r,n,i,s,o)}},eE={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s,binaryOutput:o}=a;if(1===r.shape.length){let e=n.readSync(r.dataId),t=n.readSync(i.dataId),a=mC(e,t,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,a)}if(2===r.shape.length){let e=n.bufferSync(r),t=n.bufferSync(i),a=yC(e,t,s,o);return n.makeTensorInfo(a.shape,i.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},tE={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:i,dataFormat:s}=a,o=r.shape[0],l=("NHWC"===s?r.shape[1]:r.shape[2])*i,u=("NHWC"===s?r.shape[2]:r.shape[3])*i,d=("NHWC"===s?r.shape[3]:r.shape[1])/(i*i),p="NHWC"===s?[o,l,u,d]:[o,d,l,u],c=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(p,i,s);return n.runWebGLProgram(c,[r],r.dtype)}},nE=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=BS(this.outputShape.length);let i=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${d}\n        ${u}\n        setOutput(result);\n      }\n    `}},aE=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=BS(this.outputShape.length);let i=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,p=d,c="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)c+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;c+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<d;e++)c+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;c+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){let t=2*e;if(c+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<d&&(s%2==1?(c+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,c+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):c+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){let e=s%2==0?wr.nearestLargerEven(l):l;l%2==0&&s%2==1||l%2!=0&&s%2!=1?(c+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,c+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):c+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(s%2==1?(c+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(c+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(c+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(c+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(c+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(c+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}c+="\n    }\n  ",c+="\n      }\n    ";let h="",f="";n&&(h=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${c}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}},rE={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l,dimRoundingMode:u}=a,d=l;null==d&&(d=[1,1]),wr.assert(Pf.eitherStridesOrDilationsAreOne(s,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`));let p,c=Pf.computeConv2DInfo(r.shape,i.shape,s,d,o,u,!0);p=Le().getBool("WEBGL_PACK_DEPTHWISECONV")&&c.strideWidth<=2&&c.outChannels/c.inChannels==1?new aE(c):new nE(c);let h=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];return n.runWebGLProgram(p,[r,i],"float32",h)}},iE={kernelName:_t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=a,p=Pf.computeConv2DInfo(r.shape,d,s,o,l,u,!0),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(c,[r,i],"float32")}},sE={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=a,p=Pf.computeConv2DInfo(d,i.shape,s,o,l,u,!0),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(c,[r,i],"float32")}},oE={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],i=wr.sizeFromShape(a.shape),s=oT({inputs:{x:a},backend:n,attrs:{shape:[i]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(i),l=n.runWebGLProgram(o,[s],s.dtype),u=oT({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),u}},lE={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s}=n,{strides:o,pad:l,dilations:u}=r,d=Pf.computeDilation2DInfo(i.shape,s.shape,o,l,"NHWC",u),p=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:s,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:p}=a;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${i});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(d);t=a.runWebGLProgram(p,[i,s],"float32");let c=oT({inputs:{x:t},backend:a,attrs:{shape:d.outShape}});return a.disposeIntermediateTensorInfo(t),c}},uE={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,i=t,{allDims:s,summedDims:o,idDims:l}=Pf.decodeEinsumEquation(r,i.length);Pf.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:d}=Pf.getEinsumComputePath(o,l),p=d.length,c=null,h=s.length,f=[];for(let e=0;e<p;++e){for(let t of d[e]){let e,{permutationIndices:a,expandDims:r}=Pf.getEinsumPermutation(h,l[t]);Pf.isIdentityPermutation(a)?e=i[t]:(e=gT({inputs:{x:i[t]},backend:n,attrs:{perm:a}}),f.push(e));let s=e.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);wr.arraysEqual(e.shape,s)||(e=oT({inputs:{x:e},backend:n,attrs:{shape:s}}),f.push(e)),null===c?c=e:(c=iT({inputs:{a:e,b:c},backend:n}),f.push(c))}e<p-1&&(u[e]>=0&&(c=mT({inputs:{x:c},backend:n,attrs:{axis:u[e]-(s.length-h),keepDims:!1}}),f.push(c)),h--)}for(let e of f)e!==c&&n.disposeIntermediateTensorInfo(e);return c}},dE=JN({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),pE={kernelName:Ut,backendName:"webgl",kernelFunc:dE},cE={kernelName:Gt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,i=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new WN("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new zN("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(i,[a,r],a.dtype)}},hE=QN({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:vC}),fE={kernelName:jt,backendName:"webgl",kernelFunc:hE},mE=JN({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Pf.ERF_P};\n  float a1 = ${Pf.ERF_A1};\n  float a2 = ${Pf.ERF_A2};\n  float a3 = ${Pf.ERF_A3};\n  float a4 = ${Pf.ERF_A4};\n  float a5 = ${Pf.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),yE={kernelName:Ht,backendName:"webgl",kernelFunc:mE},gE=JN({opSnippet:YN+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:wC,dtype:"float32"}),AE={kernelName:qt,backendName:"webgl",kernelFunc:gE};function xE(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:i}=t,s=i.shape.length,o=i.shape.slice(),l=r;return r<0&&(wr.assert(-(s+1)<=r,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),l=s+r+1),o.splice(l,0,1),oT({inputs:{x:i},backend:a,attrs:{shape:o}})}var bE={kernelName:Xt,backendName:"webgl",kernelFunc:xE},vE="return exp(x) - 1.0;",wE=JN({opSnippet:vE,packedOpSnippet:vE,cpuKernelImpl:kC}),kE={kernelName:Kt,backendName:"webgl",kernelFunc:wE},IE=class{constructor(e,t,n){this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let r,i=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${a}.0`:"1.0";if("real"===e)r="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);r="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${i};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${r}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function SE(e,t,n){let a=n.texData.get(e.dataId),r=wr.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],s=oT({inputs:{x:e},backend:n,attrs:{shape:[r/i,i]}}),o=s.shape,l=new IE("real",o,t),u=new IE("imag",o,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,d,"float32"),c=n.runWebGLProgram(u,d,"float32"),h=UN({inputs:{real:p,imag:c},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c);let f=oT({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(h),f}var CE={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return SE(a,!1,n)}},NE=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function TE(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:i}=n;if(i=i||wr.inferDtype(r),"string"===i){let e=wr.getArrayFromDType(i,wr.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,i,e)}{let e=new NE(a,r),n=[[r]];return t.runWebGLProgram(e,[],i,n)}}var RE,EE={kernelName:Yt,backendName:"webgl",kernelFunc:TE},$E={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,a=t,r=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},ME="return floor(x);",FE=JN({opSnippet:ME,packedOpSnippet:ME,cpuKernelImpl:IC}),_E={kernelName:Qt,backendName:"webgl",kernelFunc:FE},PE=QN({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),OE={kernelName:en,backendName:"webgl",kernelFunc:PE},DE={kernelName:rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:i}=a,s="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[u,l],p=[u,l,i];if(o||s){let e=Le().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==RE||e!==zE)&&(zE=e,RE=document.createElement("canvas").getContext("2d",{willReadFrequently:zE})),RE.canvas.width=l,RE.canvas.height=u,RE.drawImage(r,0,0,l,u),r=RE.canvas}let c=n.makeTensorInfo(d,"int32");n.texData.get(c.dataId).usage=pI.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(c.dataId),r);let h=Le().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=bS(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(p):new class{constructor(e){this.variableNames=["A"];let t=bS(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(p),f=n.runWebGLProgram(h,[c],"int32");return n.disposeData(c.dataId),f}},zE=Le().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),LE={kernelName:or,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s,bias:o,preluActivationWeights:l}=n,{strides:u,pad:d,dataFormat:p,dilations:c,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,y=Pf.convertConv2DDataFormat(p),g=Pf.computeConv2DInfo(i.shape,s.shape,u,c,d,h,!1,y),A=[],x=null!=o,b=null!=l,v="leakyrelu"===f,w=()=>{let e=[i,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=oT({inputs:{x:e},backend:a,attrs:{shape:[e.shape[0],1,1]}});return A.push(t),t}return e};if(x&&e.push(t(o,p)),b&&e.push(t(l,p)),v){let t=a.makeTensorInfo([],"float32",wr.createScalarValue(m,"float32"));e.push(t),A.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===y&&Le().getBool("WEBGL_EXP_CONV")){let e=f?eT(f,!0):null,n=new MR(g,x,e,b,v),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],i=w();t=a.runWebGLProgram(n,i,"float32",r)}else if(Le().getBool("WEBGL_CONV_IM2COL"))t=PR({x:i,filter:s,convInfo:g,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?eT(f,!1):null,n=new $R(g,x,e,b,v),r=w();t=a.runWebGLProgram(n,r,"float32")}else t=_R({x:i,filter:s,convInfo:g,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let k=oT({inputs:{x:t},backend:a,attrs:{shape:g.outShape}});return A.push(t),A.forEach((e=>a.disposeIntermediateTensorInfo(e))),k}},WE={kernelName:lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:c,leakyreluAlpha:h}=a,f=[],m=d;null==m&&(m=[1,1]),wr.assert(Pf.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let y,g=Pf.computeConv2DInfo(r.shape,i.shape,l,m,u,p,!0),A=Le().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=c?eT(c,A):null,b=[r,i],v=null!=s,w=null!=o,k="leakyrelu"===c;if(v&&b.push(s),w&&b.push(o),k){let e=n.makeTensorInfo([],"float32",wr.createScalarValue(h,"float32"));b.push(e),f.push(e)}y=A?new aE(g,v,x,w,k):new nE(g,v,x,w,k);let I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(y,b,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}},BE={kernelName:an,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,i=r.shape,s=i[i.length-1],o=wr.sizeFromShape(a.shape),[l,u,d,p]=Pf.prepareAndValidate(a,r),c=oT({inputs:{x:r},backend:n,attrs:{shape:[u,s]}}),h=oT({inputs:{x:a},backend:n,attrs:{shape:[wr.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){let e=n.readSync(r.dataId),t=n.bufferSync(a),i=SC(e,t,a.dtype,u,s,d,p,a.shape,o);return n.makeTensorInfo(l,a.dtype,i.values)}let f=new class{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;let r=PS(n.length),i="\n    int index;";for(let e=0;e<this.sliceDim;e++)i+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}(s,p,[u,d],a.shape),m=n.runWebGLProgram(f,[h,c],h.dtype),y=oT({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),y}};function VE(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:i}=t,{axis:s,batchDims:o}=a,l=wr.parseAxisParam(s,r.shape)[0];if(Le().get("DEBUG")){let e=n.readSync(i.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){let a=e[n];wr.assert(a<=t-1&&a>=0,(()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`))}}let u=Pf.segment_util.collectGatherOpShapeInfo(r,i,l,o),d=wr.sizeFromShape(i.shape),p=[],c=oT({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=oT({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(c),p.push(h);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){let e=n.bufferSync(h),t=n.bufferSync(c),a=CC(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=PS(this.rank),a=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let t=0;t<e.length;t++)2===t?a.push("index"):a.push(`${n[t]}`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}}(c.shape,f),y=n.runWebGLProgram(m,[c,h],c.dtype);p.push(y);let g=oT({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}var UE={kernelName:nn,backendName:"webgl",kernelFunc:VE},GE=QN({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:NC,dtype:"bool"}),HE={kernelName:rn,backendName:"webgl",kernelFunc:GE},jE=QN({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:TC}),qE={kernelName:sn,backendName:"webgl",kernelFunc:jE},XE={kernelName:ln,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return SE(a,!0,n)}},KE=JN({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),ZE={kernelName:dn,backendName:"webgl",kernelFunc:KE},YE=JN({opSnippet:"return float(isinf(x));",dtype:"bool"}),JE={kernelName:pn,backendName:"webgl",kernelFunc:YE},QE=JN({opSnippet:"return float(isnan(x));",dtype:"bool"}),e$={kernelName:cn,backendName:"webgl",kernelFunc:QE},t$=QN({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:RC,dtype:"bool"}),n$={kernelName:fn,backendName:"webgl",kernelFunc:t$},a$=QN({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:EC,dtype:"bool"}),r$={kernelName:mn,backendName:"webgl",kernelFunc:a$},i$={kernelName:yn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:i}=n,s=$C(a,r,i);return t.makeTensorInfo([s.length],"float32",s)}},s$=JN({opSnippet:YN+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:MC}),o$={kernelName:gn,backendName:"webgl",kernelFunc:s$},l$=JN({opSnippet:YN+"\n  return log(1.0 + x);\n"}),u$={kernelName:An,backendName:"webgl",kernelFunc:l$},d$=QN({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),p$={kernelName:xn,backendName:"webgl",kernelFunc:d$},c$=JN({opSnippet:"return float(!(x >= 1.0));"}),h$={kernelName:bn,backendName:"webgl",kernelFunc:c$},f$=QN({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),m$={kernelName:vn,backendName:"webgl",kernelFunc:f$},y$={kernelName:Sn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:o,beta:l}=a,u=Le().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=t,s=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(r.shape,i,s,o,l):new class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];let i=t,s=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(r.shape,i,s,o,l);return n.runWebGLProgram(u,[r],r.dtype)}},g$={kernelName:Cn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a,p=new class{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(r.shape,o,l,u,d);return n.runWebGLProgram(p,[r,i,s],r.dtype)}};function A$(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:i,keepDims:s}=a,o=r.shape.length,l=wr.parseAxisParam(i,r.shape),u=l,d=Pf.getAxesPermutation(u,o),p=null!=d,c=n.shouldExecuteOnCPU([r]),h=r;if(p){if(c){let e=n.texData.get(h.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[d[e]];let a=oN(e,r.shape,r.dtype,d,t);h=n.makeTensorInfo(t,r.dtype),n.texData.get(h.dataId).values=a}else h=fT(r,d,n);u=Pf.getInnerMostAxes(u.length,o)}Pf.assertAxesAreInnerMostDims("max",u,o);let f,[m,y]=Pf.computeOutAndReduceShapes(h.shape,u),g=m;if(s&&(g=Pf.expandShapeToKeepDim(m,l)),c){let e=n.texData.get(h.dataId).values,t=FC(e,wr.sizeFromShape(y),g,r.dtype);f=n.makeTensorInfo(g,r.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,a){let r=wr.sizeFromShape(t),i=oT({inputs:{x:e},attrs:{shape:[wr.sizeFromShape(e.shape)/r,r]},backend:a}),s=pT(i,e.dtype,"max",a),o=oT({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}(h,y,g,n);return p&&n.disposeIntermediateTensorInfo(h),f}var x$={kernelName:Tn,backendName:"webgl",kernelFunc:A$},b$=QN({opSnippet:DN+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+LN+"\n  return result;\n",cpuKernelImpl:_C}),v$={kernelName:Rn,backendName:"webgl",kernelFunc:b$},w$={kernelName:En,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;AS(r,"maxPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;wr.assert(Pf.eitherStridesOrDilationsAreOne(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));let u=Pf.computePool2DInfo(r.shape,i,s,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&wr.arraysEqual(u.inShape,u.outShape))return BN({inputs:{x:r},backend:n});let d=new YT(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}},k$={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dataFormat:l,dimRoundingMode:u}=a,d=Pf.computePool3DInfo(r.shape,i,s,[1,1,1],o,u,l),p=new JT(d,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}},I$={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=Pf.computePool3DInfo(s.shape,o,l,[1,1,1],u,d),c=new JT(p,"max",!0),h=n.runWebGLProgram(c,[s],s.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,p=l-1-e.padInfo.top,c=u-1-e.padInfo.left,h=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${p}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p),m=n.runWebGLProgram(f,[r,h],s.dtype);return n.disposeIntermediateTensorInfo(h),m}},S$={kernelName:$n,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i,output:s}=t,o=i;AS([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=a,c=Pf.computePool2DInfo(o.shape,l,u,1,d,p),h=new YT(c,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=r-1-e.padInfo.top,o=i-1-e.padInfo.left,l=r*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c),y=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}},C$={kernelName:_n,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:i,pad:s,includeBatchInIndex:o}=t,l=n;wr.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));let u=[1,1];wr.assert(Pf.eitherStridesOrDilationsAreOne(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));let d=Pf.computePool2DInfo(a.shape,r,i,u,s),[p,c]=function(e,t,n,a){let r=new YT(n,"max",!1),i=a.runWebGLProgram(r,[e],"float32");return r=new YT(n,"max",!0,!0,t),[i,a.runWebGLProgram(r,[e],"float32")]}(a,o,d,l);return[p,c]}},N$={kernelName:Pn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{keepDims:r,axis:i}=t,s=n,o=a.shape.length,l=wr.parseAxisParam(i,a.shape),u=l,d=Pf.getAxesPermutation(u,o),p=null!=d,c=s.shouldExecuteOnCPU([a]),h=[],f=a;if(p){if(c){let e=s.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];let n=oN(e,a.shape,a.dtype,d,t);f=s.makeTensorInfo(t,a.dtype),s.texData.get(f.dataId).values=n}else f=fT(a,d,s);h.push(f),u=Pf.getInnerMostAxes(u.length,o)}Pf.assertAxesAreInnerMostDims("sum",u,o);let[m,y]=Pf.computeOutAndReduceShapes(f.shape,u),g=m;r&&(g=Pf.expandShapeToKeepDim(m,l));let A=function(e,t,n,a){let r=wr.sizeFromShape(t),i=oT({inputs:{x:e},attrs:{shape:[wr.sizeFromShape(e.shape)/r,r]},backend:a}),s=pT(i,"float32","mean",a),o=oT({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}(f,y,g,s);for(let e of h)s.disposeIntermediateTensorInfo(e);return A}},T$={kernelName:On,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a,o=r.shape.length,l=wr.parseAxisParam(i,r.shape),u=l,d=Pf.getAxesPermutation(u,o),p=r;null!=d&&(p=gT({inputs:{x:r},backend:n,attrs:{perm:d}}),u=Pf.getInnerMostAxes(u.length,r.shape.length)),Pf.assertAxesAreInnerMostDims("min",u,o);let c,[h,f]=Pf.computeOutAndReduceShapes(p.shape,u),m=oT({inputs:{x:p},backend:n,attrs:{shape:[-1,wr.sizeFromShape(f)]}}),y=pT(m,m.dtype,"min",n);return c=oT(s?{inputs:{x:y},backend:n,attrs:{shape:Pf.expandShapeToKeepDim(h,l)}}:{inputs:{x:y},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),null!=d&&n.disposeIntermediateTensorInfo(p),c}},R$=QN({opSnippet:DN+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+LN+"\n  return result;\n",cpuKernelImpl:PC}),E$={kernelName:Dn,backendName:"webgl",kernelFunc:R$},$$={kernelName:zn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{paddings:r,mode:i}=n,s=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=PS(a),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=dN("rc",a),l=dN("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,c="";if(1===a){let e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;c=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n      `}else{let e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;c=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${d});\n          ${o[a-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${s});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}}(a.shape,r,i):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=PS(a),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;this.userCode=1!==a?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${s});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(a.shape,r,i);return t.runWebGLProgram(s,[a],a.dtype)}},M$=QN({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+LN+"\n  return result;\n"}),F$={kernelName:Ln,backendName:"webgl",kernelFunc:M$},_$=QN({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),P$={kernelName:Bt,backendName:"webgl",kernelFunc:_$},O$="return a - b;",D$=QN({opSnippet:O$,packedOpSnippet:O$,supportsComplex:!0,cpuKernelImpl:rN}),z$={kernelName:Ha,backendName:"webgl",kernelFunc:D$};function L$(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:i}=a,s=wr.parseAxisParam([i],r.shape),o=A$({inputs:{x:r},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),l=Pf.expandShapeToKeepDim(o.shape,s),u=oT({inputs:{x:o},backend:n,attrs:{shape:l}}),d=D$({inputs:{a:r,b:u},backend:n}),p=gE({inputs:{x:d},backend:n}),c=mT({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:!1}}),h=oT({inputs:{x:c},backend:n,attrs:{shape:l}}),f=_$({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),f}var W$={kernelName:Ma,backendName:"webgl",kernelFunc:L$},B$={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a,l=o?r:L$({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],d=l.shape[1],p=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(u,d,i),c=[[s]],h=n.runWebGLProgram(p,[l],"int32",c);return o||n.disposeIntermediateTensorInfo(l),h}},V$=yN+"\n  return -x;\n",U$={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])){let e=a.texData.get(r.dataId),[t,n]=DC(e.values,r.shape,r.dtype);return a.makeTensorInfo(n,r.dtype,t)}return t=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new RN(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new mN(r.shape,V$),a.runWebGLProgram(t,[r],r.dtype)}},G$=Um.nonMaxSuppressionV3Impl,H$={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){Pf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(i.dataId),{selectedIndices:p}=G$(u,d,s,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},j$=Um.nonMaxSuppressionV4Impl,q$={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){Pf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a,d=n.readSync(r.dataId),p=n.readSync(i.dataId),{selectedIndices:c,validOutputs:h}=j$(d,p,s,o,l,u);return[n.makeTensorInfo([c.length],"int32",new Int32Array(c)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},X$=Um.nonMaxSuppressionV5Impl,K$={kernelName:jn,backendName:"webgl",kernelFunc:function(e){Pf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),p=n.readSync(i.dataId),c=s,h=o,f=l,m=u,{selectedIndices:y,selectedScores:g}=X$(d,p,c,h,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},Z$={kernelName:Xn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a,u=wr.sizeFromShape(r.shape),d=new class{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(u,s,o,l),p=oT({inputs:{x:r},backend:n,attrs:{shape:[u]}}),c=n.runWebGLProgram(d,[p],i);n.disposeIntermediateTensorInfo(p);let h=oT({inputs:{x:c},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeIntermediateTensorInfo(c),h}};function Y$(e){let{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){let e=fR({inputs:{input:a},backend:n}),t=Y$({inputs:{x:e},backend:n}),r=CR({inputs:{input:a},backend:n}),i=Y$({inputs:{x:r},backend:n}),s=UN({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),s}return TE({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}var J$={kernelName:nr,backendName:"webgl",kernelFunc:Y$},Q$={kernelName:qn,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let t=fR({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),i=CR({inputs:{input:r},backend:a}),s=Y$({inputs:{x:i},backend:a}),o=UN({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}return TE({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}},eM={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return xE({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach((e=>{wr.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),wr.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=RR({inputs:t.map((e=>{let t=xE({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},tM=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,constantValue:s}=a;if(0===wr.sizeFromShape(r.shape))return TE({backend:n,attrs:{shape:i.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:s,dtype:r.dtype}});let o=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=PS(a),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=dN("rc",a),l=dN("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${u}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${u}) {`],c=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let e=0,t=1===a?2:4;e<t;e++)h+=`\n        ${p[e]}\n        if (${c}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${d});\n        }\n      `;h+=1===a?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${s});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}(r.shape,i,s):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=PS(a),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${s});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(r.shape,i,s),l=[[s]];return n.runWebGLProgram(o,[r],r.dtype,l)},nM={kernelName:Zn,backendName:"webgl",kernelFunc:tM},aM=QN({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+LN+"\n  return result;\n"}),rM={kernelName:Jn,backendName:"webgl",kernelFunc:aM},iM={kernelName:ea,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{axis:s,keepDims:o}=r,l=i.shape.length,u=[],d=wr.parseAxisParam(s,i.shape),p=d,c=Pf.getAxesPermutation(p,l),h=i;if(null!=c&&(h=gT({inputs:{x:i},backend:a,attrs:{perm:c}}),p=Pf.getInnerMostAxes(p.length,l),u.push(h)),Pf.assertAxesAreInnerMostDims("prod",p,l),a.shouldExecuteOnCPU([h])){let e=a.texData.get(h.dataId).values,{outVals:n,outShape:r,outDtype:i}=LC(h.shape,h.dtype,e,p);t=a.makeTensorInfo(r,i,n)}else{let[e,n]=Pf.computeOutAndReduceShapes(h.shape,p),r=wr.sizeFromShape(n),s=oT({inputs:{x:h},backend:a,attrs:{shape:[-1,r]}}),o=pT(s,mi(i.dtype),"prod",a);t=oT({inputs:{x:o},backend:a,attrs:{shape:e}}),u.push(s),u.push(o)}if(o){u.push(t);let e=Pf.expandShapeToKeepDim(t.shape,d);t=oT({inputs:{x:t},backend:a,attrs:{shape:e}})}return u.forEach((e=>a.disposeIntermediateTensorInfo(e))),t}},sM={kernelName:ta,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:o}=a,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),d=n.readSync(i.dataId),p=n.readSync(s.dataId),[c,h,f]=WC(l,u,d,i.shape,i.dtype,p,s.shape,o),m=c.map((e=>n.makeTensorInfo([e.length],"int32",e))),y=n.makeTensorInfo(f,i.dtype,h);return m.concat([y])}},oM={kernelName:na,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:i}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,d]=BC(s,a.shape,a.dtype,o,r.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([d.length],a.dtype,d)]}},lM={kernelName:aa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.readSync(r.dataId),d=n.readSync(i.dataId),p=n.readSync(s.dataId),c=o.map((e=>n.readSync(e.dataId))),h=o.map((e=>e.shape)),[f,m]=VC(u,r.shape,d,i.shape,i.dtype,p,s.shape,c,h,l);return n.makeTensorInfo(f,i.dtype,m)}},uM=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:i,dtype:s}=n,o=UC(a,r,i,s);return t.makeTensorInfo([o.length],s,o)},dM={kernelName:ra,backendName:"webgl",kernelFunc:uM},pM=JN({opSnippet:"return 1.0 / x;"}),cM={kernelName:sa,backendName:"webgl",kernelFunc:pM},hM=JN({opSnippet:yN+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fM={kernelName:oa,backendName:"webgl",kernelFunc:hM},mM=JN({opSnippet:yN+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yM={kernelName:ha,backendName:"webgl",kernelFunc:mM},gM={kernelName:pa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,d=Le().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,s,o,l]=e;this.outputShape=[i,t,n,l];let u,d=[a&&t>1?s-1:s,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n];u=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]},\n          ${d[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(r.shape,l,u,i,s):new class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[i,s,o,l]=e;this.outputShape=[i,t,n,l];let u,d=[a&&t>1?s-1:s,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n];u=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(r.shape,l,u,i,s);return n.runWebGLProgram(d,[r],"float32")}},AM={kernelName:ca,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,i,s]=e,o=[n&&i>1?a-1:a,n&&s>1?r-1:r],l=[n&&i>1?i-1:i,n&&s>1?s-1:s],u=o[0]/l[0],d=o[1]/l[1],p=1/u,c=1/d,h=2*Math.ceil(p)+2,f=2*Math.ceil(c)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${c});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(i.shape,r.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}},xM={kernelName:ua,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,d=Le().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,s,o,l]=e;this.outputShape=[i,t,n,l];let u,d=[a&&t>1?s-1:s,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n],c=a?"0.5":"0.0";u=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]},\n          ${d[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(r.shape,l,u,i,s):new class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[i,s,o,l]=e;this.outputShape=[i,t,n,l];let u,d=[a&&t>1?s-1:s,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n],c=a?"0.5":"0.0";u=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(r.shape,l,u,i,s);return n.runWebGLProgram(d,[r],r.dtype)}},bM={kernelName:da,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,i,s]=e,o=[n&&i>1?a-1:a,n&&s>1?r-1:r],l=[n&&i>1?i-1:i,n&&s>1?s-1:s],u=o[0]/l[0],d=o[1]/l[1],p=1/u,c=1/d,h=2*Math.ceil(p)+2,f=2*Math.ceil(c)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${c});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(i.shape,r.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}},vM={kernelName:fa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a,s=r.shape.length,o=wr.parseAxisParam(i,r.shape);if(0===s)return BN({inputs:{x:r},backend:n});let l=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let a=dN("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,s=PS(n);var o;function l(n){let a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(r,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=a.slice(),l(o)};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(a.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(r.shape,o):new class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),r=PS(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}},wM={kernelName:ir,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:i,center:s}=t,o=n,l=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],a=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(a.shape,i),[u,d]=Pf.getImageCenter(s,a.shape[1],a.shape[2]),p=[[u,d,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[a],a.dtype,p)}},kM=JN({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),IM={kernelName:ma,backendName:"webgl",kernelFunc:kM},SM=JN({opSnippet:"return inversesqrt(x);",cpuKernelImpl:GC}),CM={kernelName:ya,backendName:"webgl",kernelFunc:SM},NM=class{constructor(e,t,n,a,r,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let l=PS(r.length),u=PS(i.length),d="";1===n?d="i":2===n&&(d="i, j");let p=`getIndices(${d})`,c="";1===a?c="i":2===a&&(c="i, coords[1]");let h=`getUpdates(${c})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,y=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${p});\n              flattenedIndex += index * ${y};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}},TM={kernelName:ga,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:i}=t,{shape:s}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Pf.calculateShapes(i,r,s),c=[p/u,u];if(0===p)return n.makeTensorInfo(s,r.dtype);let h,f=oT({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),m=oT({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),y=n.makeTensorInfo([],"float32",new Float32Array([0]));h=Le().getBool("WEBGL_PACK")?new class{constructor(e,t,n,a,r,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let l=PS(r.length),u=PS(i.length),d="";1===n?d="i":2===n&&(d="i, j");let p=`getIndices(${d})`,c="";1===a?c="i":2===a&&(c="i, coords[1]");let h=`getUpdates(${c})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,y=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${p});\n              flattenedIndex += index.xz * ${y};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${g};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${h};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}(l,o,f.shape.length,m.shape.length,d,c):new NM(l,o,f.shape.length,m.shape.length,d,c);let g=n.runWebGLProgram(h,[m,f,y],m.dtype),A=oT({inputs:{x:g},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),A}},RM={kernelName:xa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a,o=new class{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Le().getNumber("WEBGL_VERSION")?"while (left < right) {":r,s="left"===a?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${s} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}(r.shape[0],r.shape[1],i.shape[1],s),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,i],"int32",l)}},EM={kernelName:ba,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t,s=new class{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",a="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let a=0;a<t.length;a++)s.push(`${n[a]}`),a<e&&i.push(`${n[a]}`);a=i.join(),r=s.join()}let i=PS(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(s,[a,r,i],fi(r.dtype,i.dtype))}},$M=JN({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Pf.SELU_SCALEALPHA};\n  float scale = ${Pf.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),MM={kernelName:va,backendName:"webgl",kernelFunc:$M},FM=JN({opSnippet:YN+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:jC}),_M={kernelName:Ca,backendName:"webgl",kernelFunc:FM},PM=JN({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),OM={kernelName:Sa,backendName:"webgl",kernelFunc:PM},DM=JN({opSnippet:YN+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${LN}\n  return result;\n`}),zM={kernelName:ka,backendName:"webgl",kernelFunc:DM},LM=JN({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),WM={kernelName:Ia,backendName:"webgl",kernelFunc:LM},BM=JN({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),VM={kernelName:Na,backendName:"webgl",kernelFunc:BM},UM={kernelName:Ea,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a;wr.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...s);for(let e=1+i.length;e<r.shape.length;++e)l.push([0,0]);let u=[],d=tM({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=Pf.getReshaped(d.shape,i,o,!1),c=Pf.getPermuted(p.length,i.length,!1),h=Pf.getReshapedPermuted(d.shape,i,o,!1),f=oT({inputs:{x:d},backend:n,attrs:{shape:p}}),m=gT({inputs:{x:f},backend:n,attrs:{perm:c}}),y=oT({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(d),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},GM={kernelName:Fa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);let o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=n.readSync(i.dataId),d=n.readSync(s.dataId)[0],[p,c,h,f,m]=KC(o,a.shape,a.dtype,l,r.dtype,u,d);return[n.makeTensorInfo(c,a.dtype,p),n.makeTensorInfo([c[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},HM={kernelName:_a,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:i}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(n.readSync(r.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(i.dataId)),[u,d,p]=ZC(o,a.shape,a.dtype,s,l);return[n.makeTensorInfo(d,a.dtype,u),n.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}},jM={kernelName:Pa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);let s=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,d]=YC(s,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(d,a.dtype,u)}},qM={kernelName:Oa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);let s=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,d]=YC(s,a.shape,a.dtype,o,l);return n.makeTensorInfo(d,a.dtype,u)}},XM={kernelName:Da,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:i,defaultValue:s}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:c}=Pf.calculateShapes(i,r,o);if("string"===i.dtype){let e=n.bufferSync(r),t=n.bufferSync(i),a=wr.decodeString(n.readSync(s.dataId)[0]),h=HC(e,t,o,c,d,u,l,p,a,!1);return n.makeTensorInfo(o,h.dtype,h.values)}let h=new NM(u,l,r.shape.length,i.shape.length,p,[c,1],!1),f=n.runWebGLProgram(h,[i,r,s],i.dtype),m=oT({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},KM={kernelName:$a,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=a,o=wr.parseAxisParam(s,r.shape)[0],l=Pf.prepareSplitSize(r,i,o),u=r.shape.length,d=new Array(u).fill(0),p=r.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let a=sR({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,a}))}},ZM="return sqrt(x);",YM=JN({opSnippet:ZM,packedOpSnippet:ZM,cpuKernelImpl:JC}),JM={kernelName:Ta,backendName:"webgl",kernelFunc:YM},QM=JN({opSnippet:"return x * x;"}),eF={kernelName:La,backendName:"webgl",kernelFunc:QM},tF="return (a - b) * (a - b);",nF=QN({opSnippet:tF,packedOpSnippet:tF}),aF={kernelName:za,backendName:"webgl",kernelFunc:nF},rF={kernelName:Wa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");let i=n.readSync(r.dataId),s=Pf.fromUint8ToStringArray(i),o=QC(s,"string",a);return n.makeTensorInfo(r.shape,"string",o)}},iF={kernelName:ar,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:a}=e,r=yN+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new mN(a.shape,r);return n.runWebGLProgram(i,[a],a.dtype)}},sF={kernelName:Ba,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{begin:s,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:h}=r,{finalShapeSparse:f,finalShape:m,isIdentity:y,sliceDim0:g,isSimpleSlice:A,begin:x,end:b,strides:v}=uf.sliceInfo(i.shape,s,o,l,u,d,p,c,h);if(y)t=oT({inputs:{x:i},backend:a,attrs:{shape:m}});else if(g||A){wr.assert(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));let e=uf.computeOutShape(x,b,v),n=sR({inputs:{x:i},backend:a,attrs:{begin:x,size:e}});t=oT({inputs:{x:n},backend:a,attrs:{shape:m}}),a.disposeIntermediateTensorInfo(n)}else if(a.shouldExecuteOnCPU([i])){let e=a.readSync(i.dataId),n=Ws(i.shape,i.dtype,e),r=eN(f,n,v,x);t=a.makeTensorInfo(m,i.dtype,r.values)}else{let e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let a=n.length,r=PS(n.length),i=PS(n.length),s="";if(1===a)s="coords * strides + begin";else{let e=0;s=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}(x,v,f);t=a.runWebGLProgram(e,[i],i.dtype)}let w=oT({inputs:{x:t},backend:a,attrs:{shape:m}});return a.disposeIntermediateTensorInfo(t),w}},oF={kernelName:Va,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:d,dataSplits:p}=t,c=n.readSync(d.dataId),h=n.readSync(p.dataId),[f,m]=tN(c,h,r,i,s,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},lF={kernelName:Ua,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let o=n.readSync(i.dataId),l=n.readSync(s.dataId)[0],[u,d,p]=nN(o,l,r),c=d.length;return[n.makeTensorInfo([c,2],"int32",u),n.makeTensorInfo([c],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(p))]}},uF={kernelName:Ga,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let s=n.readSync(i.dataId),o=aN(s,r);return n.makeTensorInfo(i.shape,"int32",o)}},dF=JN({opSnippet:"return tan(x);"}),pF={kernelName:ja,backendName:"webgl",kernelFunc:dF},cF=JN({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),hF={kernelName:qa,backendName:"webgl",kernelFunc:cF},fF={kernelName:Aa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:i,updates:s}=t,{}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Pf.calculateShapes(s,i,r.shape),c=[p/u,u];if(0===p)return n.makeTensorInfo(r.shape,i.dtype);let h=oT({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=oT({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=oT({inputs:{x:r},backend:n,attrs:{shape:c}}),y=new NM(l,o,h.shape.length,f.shape.length,d,c,!1,!0),g=n.runWebGLProgram(y,[f,h,m],m.dtype),A=oT({inputs:{x:g},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),A}};function mF(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:i}=a;if("string"===r.dtype||r.shape.length>5){let e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>wr.decodeString(e))):e,a=Ws(r.shape,r.dtype,t),s=iN(a,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}let s=new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let a=PS(this.rank),r=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}(r.shape,i);return n.runWebGLProgram(s,[r],r.dtype)}var yF={kernelName:Xa,backendName:"webgl",kernelFunc:mF},gF=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function AF(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function xF(e){let t=1;for(;t<e;)t*=2;return t}var bF,vF,wF,kF={kernelName:Ka,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:i,sorted:s}=a,o=Le().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Le().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([r])||d<o||i>l){let e=n.readSync(r.dataId),[t,a]=sN(e,u,r.dtype,i,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[r,TE({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(r.dataId),c=null!==p&&p.isPacked,h=c?n.unpackTensor(r):r,f=wr.sizeFromShape(u)/d,m=oT({inputs:{x:h},attrs:{shape:[f,d]},backend:n});c&&AF(n,h);let y=xF(i),g=xF(d),A=null,x=()=>null===A?[m,m]:[m,A],b=(e,t,a)=>{let r=x(),i=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(a),s=[[d],[null===A?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=A;A=n.runWebGLProgram(i,r,"int32",s),AF(n,o)};for(let e=1;e<y;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)b(t,n,[f,g])}for(let e=g;e>y;e/=2){let t=x(),a=new gF([f,e/2]),r=[[d],[null===A?1:0],[y]],i=A;A=n.runWebGLProgram(a,t,"int32",r),AF(n,i);let s=y/2,o=2*s;for(let e=s;e>=1;e/=2)b(o,e,A.shape)}let v=A;A=sR({inputs:{x:A},backend:n,attrs:{begin:0,size:[f,i]}}),AF(n,v);let w=VE({inputs:{x:m,indices:A},backend:n,attrs:{axis:1,batchDims:1}});AF(n,m);let k=u.slice(0,-1);k.push(i),v=A,A=oT({inputs:{x:A},attrs:{shape:k},backend:n}),AF(n,v);let I=w;return w=oT({inputs:{x:w},attrs:{shape:k},backend:n}),AF(n,I),[w,A]}},IF={kernelName:Za,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:l,outputShape:u}=a,[d,p,c,h]=r.shape,[f,m]=null!=u?u:[p,c],y=[d,f,m,h],g=new class{constructor(e,t,n,a,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let s,o="nearest"===n?1:2;switch(a){case"constant":default:s=1;break;case"reflect":s=2;break;case"wrap":s=3;break;case"nearest":s=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${s} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${s} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${s} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(p,c,s,o,l,y);return n.runWebGLProgram(g,[r,i],"float32")}},SF={kernelName:Ja,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:i}=t;AS(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let s=a.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=lN(s,r,i.shape,i.dtype);return[a.makeTensorInfo(l,i.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}},CF={kernelName:Qa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r,o=s.shape.length,l=r.shape[i],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==i&&(u[d++]=s.shape[e]);let p=[],c=new Array(o).fill(0),h=s.shape.slice();h[i]=1;let f=new Array(l);for(let e=0;e<f.length;e++){c[i]=e;let t=sR({inputs:{x:s},backend:n,attrs:{begin:c,size:h}}),a=oT({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=a,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},NF={kernelName:er,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:i}=t,{numSegments:s}=a,o=r.shape.length,l=[],u=0,d=Pf.getAxesPermutation([u],o),p=r;null!=d&&(p=gT({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(p),u=Pf.getInnerMostAxes(1,o)[0]);let c=Pf.segment_util.computeOutShape(p.shape,u,s),h=wr.sizeFromShape([p.shape[u]]),f=oT({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=mi(r.dtype),y=(e,t,a,r,i)=>{let s=e.shape[0],o=e.shape[1],u=Pf.segment_util.segOpComputeOptimalWindowSize(o,i),d={windowSize:u,inSize:o,batchSize:s,numSegments:i},p=new class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,a=e.batchSize,r=e.inSize,i=e.numSegments,s=i*Math.ceil(r/n);this.outputShape=[a,s];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}(d,t),c=n.compileAndRun(p,[e,a],r);if(l.push(c),c.shape[1]===i)return c;let h=uM({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=mF({inputs:{x:h},backend:n,attrs:{reps:[o/u]}});return l.push(h),l.push(f),y(c,t,f,r,i)},g=oT({inputs:{x:y(f,"unsortedSegmentSum",i,m,s)},backend:n,attrs:{shape:c}}),A=g;if(null!=d){l.push(g);let e=Pf.getUndoAxesPermutation(d);A=gT({inputs:{x:A},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}},TF=[vT,kT,ST,NT,ET,$T,MT,FT,LT,WT,VT,GT,jT,XT,ZT,QT,eR,tR,nR,aR,rR,lR,uR,dR,pR,yR,xR,bR,GN,wR,ER,DR,zR,LR,WR,BR,VR,GR,jR,qR,JR,QR,eE,tE,rE,iE,sE,oE,lE,uE,pE,cE,fE,yE,AE,bE,kE,CE,EE,$E,_E,OE,DE,LE,WE,BE,UE,HE,qE,VN,XE,NR,ZE,JE,e$,qN,n$,r$,i$,o$,u$,p$,h$,m$,y$,g$,x$,v$,w$,k$,I$,S$,C$,N$,T$,E$,$$,F$,B$,sT,U$,H$,q$,K$,hR,Z$,Q$,eM,nM,rM,ZN,iM,sM,oM,lM,dM,mR,P$,cM,fM,yM,lT,gM,AM,xM,bM,vM,wM,IM,CM,TM,RM,EM,MM,_M,OM,zM,WM,oR,W$,VM,UM,GM,HM,jM,qM,XM,KM,JM,eF,aF,rF,iF,sF,oF,lF,uF,z$,yT,pF,hF,fF,yF,kF,IF,AT,SF,CF,NF,J$];for(let e of TF)yr(e);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(bF||(bF={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(vF||(vF={}));var RF={kernelName:sr,backendName:"wasm",setupFunc:function(e){wF=e.wasm.cwrap(sr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i,bias:s,preluActivationWeights:o}=t;if("float32"!==r.dtype||"float32"!==i.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=a,c=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(i.dataId).id,f=0;if(null!=s){let e=n.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,y=vF[d];if(null==y)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let g=l?r.shape[2]:r.shape[1],A=u?i.shape[1]:i.shape[2],x=Ml.assertAndGetBroadcastShape(r.shape.slice(0,-2),i.shape.slice(0,-2)),b=n.makeOutput([...x,g,A],r.dtype),v=n.dataIdMap.get(b.dataId).id,w=new Uint8Array(new Int32Array(r.shape).buffer),k=new Uint8Array(new Int32Array(i.shape).buffer);return wF(c,w,r.shape.length,h,k,i.shape.length,l,u,y,f,m,p||0,v),b}};function EF(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:a,inputs:{x:r}}=e,i=a.dataIdMap.get(r.dataId).id,s=a.makeOutput(r.shape,t||r.dtype),o=a.dataIdMap.get(s.dataId).id;return 0===wr.sizeFromShape(s.shape)||n(i,bF[r.dtype],o),s}}}var $F=EF(Ge),MF=EF(He),FF=EF(je);function _F(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:r}=e,{a:i,b:s}=r,o=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=null!=n?n:i.dtype,d=Pf.assertAndGetBroadcastShape(i.shape,s.shape),p=t.makeOutput(d,u);if(0===wr.sizeFromShape(d))return p;let c=new Uint8Array(new Int32Array(i.shape).buffer),h=new Uint8Array(new Int32Array(s.shape).buffer),f=t.dataIdMap.get(p.dataId).id;return a(o,c,i.shape.length,l,h,s.shape.length,bF[i.dtype],f),p}}}var PF,OF=_F(qe),DF={kernelName:Xe,backendName:"wasm",setupFunc:function(e){PF=e.wasm.cwrap(Xe,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===wr.sizeFromShape(a.shape))return a;let r=t.map((e=>n.dataIdMap.get(e.dataId).id)),i=new Uint8Array(new Int32Array(r).buffer),s=n.dataIdMap.get(a.dataId).id;return PF(i,r.length,bF[a.dtype],s),a}};function zF(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return Gi(n.readSync(t.dataId),t.shape,t.dtype);let a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}var LF,WF={kernelName:on,backendName:"wasm",kernelFunc:zF};function BF(e){let{inputs:t,backend:n,attrs:a}=e,[r,i]=function(e,t){let n=[],a=[];for(let r=0;r<e.length;++r)1!==e[r]&&n.push(e[r]),1!==e[t[r]]&&a.push(t[r]);for(let e=0;e<a.length;++e){let t=-1;for(let n=0;n<a.length;++n)a[n]>=e&&(-1===t||a[t]>a[n])&&(t=n);a[t]=e}return[n,a]}(t.x.shape,a.perm),s=!0;for(let e=0;e<i.length;e++)i[e]!==e&&(s=!1);let o=function(e,t){let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(s){let e=zF({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return LF(d,h,l.shape.length,bF[l.dtype],p,c,i.length),u}var VF,UF={kernelName:Ya,backendName:"wasm",kernelFunc:BF,setupFunc:function(e){LF=e.wasm.cwrap(Ya,null,["number","array","number","number","number","array","number"])}};function GF(e,t,n){let a=e.shape,r=e.shape.length,i=wr.parseAxisParam(t,a),s=i,o=Pf.getAxesPermutation(s,r),l=null,u=!1;if(null!=o){let t=new Array(r);for(let e=0;e<t.length;e++)t[e]=a[o[e]];s=Pf.getInnerMostAxes(s.length,r),l=BF({inputs:{x:e},attrs:{perm:o},backend:n});let i=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==i&&(u=!0)}return{transposed:l,originalAxes:i,axes:s,inputWasTransposed:u}}var HF,jF={kernelName:Ke,backendName:"wasm",setupFunc:function(e){VF=e.wasm.cwrap(Ke,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=s,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:c}=GF(s,r,t);c&&(l=u,o=t.dataIdMap.get(u.dataId).id);let h=l.shape.length;Pf.assertAxesAreInnerMostDims("all",d,h);let[f,m]=Pf.computeOutAndReduceShapes(l.shape,d),y=wr.sizeFromShape(m),g=t.makeOutput(f,s.dtype);if(0!==wr.sizeFromShape(l.shape)){let e=t.dataIdMap.get(g.dataId).id;VF(o,y,e)}if(c&&t.disposeData(u.dataId),i){let e=Pf.expandShapeToKeepDim(g.shape,p);g.shape=e}return g}},qF={kernelName:Ze,backendName:"wasm",setupFunc:function(e){HF=e.wasm.cwrap(Ze,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=s,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:c}=GF(s,r,t);c&&(l=u,o=t.dataIdMap.get(u.dataId).id);let h=l.shape.length;Pf.assertAxesAreInnerMostDims("any",d,h);let[f,m]=Pf.computeOutAndReduceShapes(l.shape,d),y=wr.sizeFromShape(m),g=t.makeOutput(f,s.dtype);if(0!==wr.sizeFromShape(l.shape)){let e=t.dataIdMap.get(g.dataId).id;HF(o,y,e)}if(c&&t.disposeData(u.dataId),i){let e=Pf.expandShapeToKeepDim(g.shape,p);g.shape=e}return g}};function XF(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){let{backend:n,inputs:a,attrs:r}=e,{axis:i}=r,{x:s}=a,o=n.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,inputWasTransposed:c}=GF(s,i,n);if(c){let e=n.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let h=u.shape.slice(0,-1),f=n.makeOutput(h,"int32"),m=n.dataIdMap.get(f.dataId).id,y=wr.sizeFromShape(f.shape),g=u.shape[p[0]];return t(l,bF[u.dtype],y,g,m),c&&n.disposeData(d.dataId),f}}}var KF,ZF,YF,JF,QF=XF(Ye),e_=XF(Je),t_=EF(Qe),n_=EF(et),a_=EF(tt),r_=_F(at),i_=EF(nt),s_={kernelName:rt,backendName:"wasm",setupFunc:function(e){KF=e.wasm.cwrap(rt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,i=a.dataIdMap.get(r.dataId).id,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=n,d=Pf.computePool2DInfo(r.shape,s,o,1,l,u),p=d.filterHeight,c=d.filterWidth,h=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,y=d.padInfo.left,g=d.strideHeight,A=d.strideWidth,x=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let b=a.makeOutput(d.outShape,"float32"),v=a.dataIdMap.get(b.dataId).id;return KF(i,r.shape[0],r.shape[1],r.shape[2],p,c,h,f,m,y,g,A,x,v),b}},o_={kernelName:st,backendName:"wasm",setupFunc:function(e){ZF=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a,d=Pf.computePool3DInfo(r.shape,i,s,1,o,l,u),p=n.makeOutput(d.outShape,r.dtype);return ZF(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),p}},l_={kernelName:ot,backendName:"wasm",setupFunc:function(e){YF=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a,d=Pf.computePool3DInfo(i.shape,s,o,1,l,u),p=n.makeOutput(i.shape,i.dtype);return YF(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left,d.filterDepth,d.filterHeight,d.filterWidth),p}},u_={kernelName:it,backendName:"wasm",setupFunc:function(e){JF=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l}=a,u=Pf.computePool2DInfo(i.shape,s,o,1,l),d=n.makeOutput(i.shape,i.dtype);return JF(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),d}};function d_(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,i=wr.sizeFromShape(a.shape),s=wr.inferFromImplicitShape(r,i);return wr.assert(i===wr.sizeFromShape(s),(()=>`new shape: ${s}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:s,dtype:a.dtype}}var p_,c_={kernelName:la,backendName:"wasm",kernelFunc:d_},h_={kernelName:lt,backendName:"wasm",setupFunc:function(e){p_=e.wasm.cwrap(lt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;if("float32"!==r.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=i.shape.length,d=s?r.shape[l-2]:r.shape[l-1],p=o?i.shape[u-1]:i.shape[u-2],c=s?r.shape[l-1]:r.shape[l-2],h=o?i.shape[u-2]:i.shape[u-1],f=r.shape.slice(0,-2),m=i.shape.slice(0,-2),y=wr.sizeFromShape(f),g=wr.sizeFromShape(m),A=Ml.assertAndGetBroadcastShape(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([c,h]);wr.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${s} and transposeB=${o} must match.`));let x=o?[g,h,p]:[g,p,h],b=d_({inputs:{x:r},backend:n,attrs:{shape:s?[y,d,c]:[y,c,d]}}),v=d_({inputs:{x:i},backend:n,attrs:{shape:x}}),w=n.dataIdMap.get(b.dataId).id,k=n.dataIdMap.get(v.dataId).id,I=s?b.shape[2]:b.shape[1],S=o?v.shape[1]:v.shape[2],C=Math.max(y,g),N=n.makeOutput([C,I,S],b.dtype),T=n.dataIdMap.get(N.dataId).id,R=new Uint8Array(new Int32Array(b.shape).buffer),E=new Uint8Array(new Int32Array(v.shape).buffer);return p_(w,R,b.shape.length,k,E,v.shape.length,s,o,T),n.disposeData(b.dataId),n.disposeData(v.dataId),N.shape=A,N}};function f_(e){let{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[i,s]=uf.parseSliceParams(t,n,a),o=uf.isSliceContinous(t.shape,i,s),l=r.readSync(t.dataId),u=r.makeOutput(s,t.dtype),d=wr.computeStrides(t.shape),p=r.dataIdMap.get(u.dataId);if(o){let e=uf.computeFlatOffset(i,d);return"string"===t.dtype?p.stringBytes=l.slice(e,e+wr.sizeFromShape(s)):r.typedArrayFromHeap(u).set(l.subarray(e,e+wr.sizeFromShape(s))),u}if("string"===t.dtype){let e=Cx(l,i,s,t.shape,t.dtype);return p.stringBytes=e,u}let c=r.typedArrayFromHeap(u),h=t.shape.length;if(2===h)!function(e,t,n,a,r){let i=0,s=a[0],o=a[1],l=s+r[0];for(let a=s;a<l;a++){let s=a*t+o;n.set(e.subarray(s,s+r[1]),i),i+=r[1]}}(l,d[0],c,i,s);else if(3===h)!function(e,t,n,a,r,i){let s=0,o=r[0],l=r[1],u=r[2],d=o+i[0],p=l+i[1];for(let r=o;r<d;r++)for(let o=l;o<p;o++){let l=r*t+o*n+u;a.set(e.subarray(l,l+i[2]),s),s+=i[2]}}(l,d[0],d[1],c,i,s);else if(4===h)!function(e,t,n,a,r,i,s){let o=0,l=i[0],u=i[1],d=i[2],p=l+s[0],c=u+s[1],h=d+s[2],f=i[3];for(let i=l;i<p;i++)for(let l=u;l<c;l++)for(let u=d;u<h;u++){let d=i*t+l*n+u*a+f;r.set(e.subarray(d,d+s[3]),o),o+=s[3]}}(l,d[0],d[1],d[2],c,i,s);else{let e=Cx(l,i,s,t.shape,t.dtype);c.set(e)}return u}var m_,y_={kernelName:wa,backendName:"wasm",kernelFunc:f_},g_={kernelName:ut,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a,o=i.reduce(((e,t)=>e*t)),l=Pf.getReshaped(r.shape,i,o),u=Pf.getPermuted(l.length,i.length),d=Pf.getReshapedPermuted(r.shape,i,o),p=Pf.getSliceBeginCoords(s,i.length),c=Pf.getSliceSize(d,s,i.length),h=d_({inputs:{x:r},backend:n,attrs:{shape:l}}),f=BF({inputs:{x:h},backend:n,attrs:{perm:u}}),m=f_({inputs:{x:d_({inputs:{x:f},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:p,size:c}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),m}},A_={kernelName:dt,backendName:"wasm",setupFunc:function(e){m_=e.wasm.cwrap(dt,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,weights:i}=n,{size:s}=a,o=0!==i.shape.reduce(((e,t)=>e*t),1),l=1===r.shape.length?[s]:[r.shape[0],s],u=t.makeOutput(l,i.dtype);function d(e){return t.dataIdMap.get(e.dataId).id}return m_(d(r),s,o,d(i),bF[i.dtype],d(u)),u}},x_=_F(pt),b_={kernelName:ht,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,i=n.typedArrayFromHeap(a),s=n.typedArrayFromHeap(r),o=Pf.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}};function v_(e){let{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),i=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(i),r}var w_,k_={kernelName:ft,backendName:"wasm",kernelFunc:v_},I_=EF(mt),S_={kernelName:yt,backendName:"wasm",setupFunc:function(e){w_=e.wasm.cwrap(yt,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:i,clipValueMax:s}=a,o=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return w_(o,i,s,u),l}};function C_(e){let{inputs:t,backend:n}=e,a=wr.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=t.map((e=>e.shape));Pf.assertParamsConsistent(r,a);let i=Pf.computeOutShape(t.map((e=>e.shape)),a),s=t.filter((e=>wr.sizeFromShape(e.shape)>0));if(1===s.length)return zF({inputs:{x:s[0]},backend:n});let o=n.makeOutput(i,t[0].dtype);if(0===wr.sizeFromShape(i))return o;if("string"===s[0].dtype){let e=s.map((e=>{let t=[-1,wr.sizeFromShape(e.shape.slice(a))];return d_({inputs:{x:e},backend:n,attrs:{shape:t}})})),r=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));i=Pf.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=lA(r,i,t[0].dtype,l),d=Pf.computeOutShape(s.map((e=>e.shape)),a);return o.shape=d,n.dataIdMap.get(o.dataId).stringBytes=Pf.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),o}let l=wr.sizeFromShape(s[0].shape.slice(0,a)),u=0,d=s.map((e=>{let t=wr.sizeFromShape(e.shape.slice(a));return u+=t,t})),p=s.map((e=>n.typedArrayFromHeap(e))),c=n.typedArrayFromHeap(o);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<p.length;n++){let a=d[n],r=e*a,i=p[n].subarray(r,r+a);c.set(i,t),t+=a}}return o}var N_,T_,R_,E_,$_,M_,F_,__={kernelName:xt,backendName:"wasm",kernelFunc:C_},P_={kernelName:bt,backendName:"wasm",setupFunc:function(e){N_=e.wasm.cwrap(bt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i}=t,s=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(i.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p,dataFormat:c}=n,h=Pf.convertConv2DDataFormat(c),f=Pf.computeConv2DInfo(r.shape,i.shape,l,u,d,p,!1,h),m=f.filterHeight,y=f.filterWidth,g=f.padInfo.top,A=f.padInfo.right,x=f.padInfo.bottom,b=f.padInfo.left,v=f.dilationHeight,w=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,C=f.outChannels,N="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let T=a.makeOutput(f.outShape,"float32"),R=a.dataIdMap.get(T.dataId).id;return N_(s,r.shape[0],r.shape[1],r.shape[2],o,m,y,g,A,x,b,N,v,w,k,I,S,C,R),T}},O_={kernelName:wt,backendName:"wasm",setupFunc:function(e){T_=e.wasm.cwrap(wt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:i}=n,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=a,p=Pf.convertConv2DDataFormat(l),c=Pf.computeConv2DInfo(d,i.shape,s,1,o,u,!1,p),{batchSize:h,filterHeight:f,filterWidth:m,inChannels:y,inHeight:g,inWidth:A,outChannels:x,outHeight:b,outWidth:v,strideHeight:w,strideWidth:k}=c,I=f-1-c.padInfo.top,S=m-1-c.padInfo.left,C="channelsLast"===c.dataFormat,N=wr.computeStrides(c.inShape),T=wr.computeStrides(r.shape),[R,E,$]=wr.computeStrides(i.shape),M=N[0],F=C?N[1]:N[2],_=C?N[2]:1,P=C?1:N[1],O=T[0],D=C?T[1]:T[2],z=C?T[2]:1,L=C?1:T[1],W=t.makeOutput(c.inShape,"float32"),B=t.dataIdMap.get(W.dataId).id,V=t.dataIdMap.get(r.dataId).id,U=t.dataIdMap.get(i.dataId).id;return T_(V,U,h,f,m,g,A,y,b,v,x,w,k,I,S,R,E,$,M,F,_,P,O,D,z,L,B),W}},D_={kernelName:kt,backendName:"wasm",setupFunc:function(e){R_=e.wasm.cwrap(kt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a;if("float32"!==r.dtype)throw new Error(`Tensor x must have dtype float32, got ${r.dtype}`);if("float32"!==i.dtype)throw new Error(`Tensor filter must have dtype float32, got ${i.dtype}`);let u=Pf.computeConv3DInfo(r.shape,i.shape,s,l,o),d=n.makeOutput(u.outShape,r.dtype);return R_(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}},z_={kernelName:It,backendName:"wasm",setupFunc:function(e){E_=e.wasm.cwrap(It,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a;if("float32"!==r.dtype)throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if("float32"!==i.dtype)throw new Error(`Tensor filter must have dtype float32, got ${i.dtype}`);let u=Pf.computeConv3DInfo(r.shape,l,s,1,o),d=n.makeOutput(u.filterShape,i.dtype);return E_(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}},L_={kernelName:St,backendName:"wasm",setupFunc:function(e){$_=e.wasm.cwrap(St,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{pad:s,strides:o,inputShape:l}=a;if("float32"!==r.dtype)throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if("float32"!==i.dtype)throw new Error(`Tensor filter must have dtype float32, got ${i.dtype}`);let u=Pf.computeConv3DInfo(l,i.shape,o,1,s),d=n.makeOutput(u.inShape,r.dtype);return $_(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}},W_=EF(Ct),B_=EF(Nt);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(M_||(M_={}));var V_,U_,G_,H_,j_,q_,X_,K_,Z_,Y_,J_={kernelName:Et,backendName:"wasm",setupFunc:function(e){F_=e.wasm.cwrap(Et,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{method:i,extrapolationValue:s,cropSize:o}=r,{image:l,boxes:u,boxInd:d}=a,p=u.shape[0],[c,h]=o,f=[p,c,h,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=v_({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let y=m.id,g=n.dataIdMap.get(u.dataId).id,A=n.dataIdMap.get(d.dataId).id,x=n.makeOutput(f,"float32"),b=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(l.shape).buffer);return F_(y,g,A,p,v,c,h,M_[i],s,b),null!=t&&n.disposeData(t.dataId),x}},Q_={kernelName:Tt,backendName:"wasm",setupFunc:function(e){V_=e.wasm.cwrap(Tt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a,l=r.shape.length;wr.assert("float32"===r.dtype||"int32"===r.dtype,(()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`));let u=Pf.getAxesPermutation([i],l),d=r;null!==u&&(d=BF({inputs:{x:r},attrs:{perm:u},backend:n}));let p=Pf.getInnerMostAxes(1,l)[0];Pf.assertAxesAreInnerMostDims("cumprod",[p],l);let c=n.makeOutput(d.shape,d.dtype),h=d.shape[p],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(c.dataId).id;V_(f,s?1:0,o?1:0,h,m,bF[r.dtype]);let y=c;return null!==u&&(y=BF({inputs:{x:c},attrs:{perm:Pf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(c.dataId)),y}},eP={kernelName:Rt,backendName:"wasm",setupFunc:function(e){U_=e.wasm.cwrap(Rt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a,l=r.shape.length;wr.assert("float32"===r.dtype||"int32"===r.dtype,(()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`));let u=Pf.getAxesPermutation([i],l),d=r;null!==u&&(d=BF({inputs:{x:r},attrs:{perm:u},backend:n}));let p=Pf.getInnerMostAxes(1,l)[0];Pf.assertAxesAreInnerMostDims("cumsum",[p],l);let c=n.makeOutput(d.shape,d.dtype),h=d.shape[p],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(c.dataId).id;U_(f,s?1:0,o?1:0,h,m,bF[r.dtype]);let y=c;return null!==u&&(y=BF({inputs:{x:c},attrs:{perm:Pf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(c.dataId)),y}},tP={kernelName:$t,backendName:"wasm",setupFunc:function(e){G_=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,weights:i}=n,{size:s,binaryOutput:o}=a,l=0!==i.shape.reduce(((e,t)=>e*t),1),u=1===r.shape.length?[s]:[r.shape[0],s],d=t.makeOutput(u,i.dtype);function p(e){return t.dataIdMap.get(e.dataId).id}return G_(p(r),new Uint8Array(new Int32Array(r.shape).buffer),r.shape.length,s,l,p(i),bF[i.dtype],o,p(d)),d}},nP={kernelName:Mt,backendName:"wasm",setupFunc:function(e){H_=e.wasm.cwrap(Mt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:i,dataFormat:s}=a,o=r.shape[0],l=("NHWC"===s?r.shape[1]:r.shape[2])*i,u=("NHWC"===s?r.shape[2]:r.shape[3])*i,d=("NHWC"===s?r.shape[3]:r.shape[1])/(i*i),p="NHWC"===s?[o,l,u,d]:[o,d,l,u],c=t.makeOutput(p,"float32"),h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(wr.computeStrides(r.shape)).buffer),m=new Uint8Array(new Int32Array(p).buffer),y=new Uint8Array(new Int32Array(wr.computeStrides(p)).buffer),g=t.dataIdMap.get(c.dataId).id;return H_(h,i,"NHWC"===s?1:0,f,r.shape.length-1,m,y,p.length,g),c}},aP={kernelName:Ft,backendName:"wasm",setupFunc:function(e){j_=e.wasm.cwrap(Ft,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i}=t,s=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(i.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p}=n,c=null==u?[1,1]:u,h=Pf.computeConv2DInfo(r.shape,i.shape,l,c,d,p,!0),f=h.filterHeight,m=h.filterWidth,y=h.padInfo.top,g=h.padInfo.right,A=h.padInfo.bottom,x=h.padInfo.left,b=h.dilationHeight,v=h.dilationWidth,w=h.strideHeight,k=h.strideWidth,I=h.inChannels,S=h.outChannels,C="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let N=a.makeOutput(h.outShape,"float32"),T=a.dataIdMap.get(N.dataId).id;return j_(s,r.shape[0],r.shape[1],r.shape[2],o,f,m,y,g,A,x,C,b,v,w,k,I,S,T),N}},rP={kernelName:Ot,backendName:"wasm",setupFunc:function(e){q_=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=wr.sizeFromShape(a.shape),i=n.makeOutput([...a.shape,...a.shape],a.dtype);return q_(n.dataIdMap.get(a.dataId).id,bF[a.dtype],r,n.dataIdMap.get(i.dataId).id),i}},iP={kernelName:Dt,backendName:"wasm",setupFunc:function(e){X_=e.wasm.cwrap(Dt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a;if(r.dtype!==i.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${r.dtype} and ${i.dtype}`);let u=Pf.computeDilation2DInfo(r.shape,i.shape,s,o,"NHWC",l),d=n.makeOutput(u.outShape,r.dtype);return X_(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,bF[r.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}},sP={kernelName:Lt,backendName:"wasm",setupFunc:function(e){K_=e.wasm.cwrap(Lt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a;if(r.dtype!==i.dtype||r.dtype!==s.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${i.dtype}, and ${s.dtype}`);let d=Pf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u),p=n.makeOutput(i.shape,i.dtype);return K_(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,bF[r.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),p}},oP={kernelName:zt,backendName:"wasm",setupFunc:function(e){Z_=e.wasm.cwrap(zt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a;if(r.dtype!==i.dtype||r.dtype!==s.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${i.dtype}, and ${s.dtype}`);let d=Pf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u),p=n.makeOutput(r.shape,r.dtype);return Z_(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,bF[r.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),p}},lP=EF(Ut),uP={kernelName:Gt,backendName:"wasm",setupFunc:function(e){Y_=e.wasm.cwrap(Gt,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t,i=n.makeOutput(r.shape,"float32"),s=e=>n.dataIdMap.get(e.dataId).id;return Y_(s(r),s(a),s(i)),i}},dP=_F(jt,0,"bool"),pP=EF(Ht),cP=EF(qt,"float32");function hP(e){let{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:i}=n,s=r.shape.length,o=r.shape.slice(),l=i;return i<0&&(wr.assert(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),l=s+i+1),o.splice(l,0,1),d_({inputs:{x:r},backend:a,attrs:{shape:o}})}var fP={kernelName:Xt,backendName:"wasm",kernelFunc:hP},mP=EF(Kt,"float32");function yP(e){let{attrs:{shape:t,value:n,dtype:a},backend:r}=e,i=r.makeOutput(t,a);return r.typedArrayFromHeap(i).fill(n),i}var gP,AP,xP,bP,vP,wP,kP,IP,SP,CP,NP,TP,RP,EP,$P,MP,FP,_P,PP,OP,DP={kernelName:Yt,backendName:"wasm",kernelFunc:yP},zP={kernelName:Jt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),i=n.dataIdMap.get(a.dataId).id,s=n.dataIdMap.get(r.dataId).id,[o,l,u,d]=a.shape;return gP(i,o,l,u,d,s),r},setupFunc:function(e){gP=e.wasm.cwrap(Jt,null,["number","number","number","number","number","number"])}},LP=EF(Qt),WP=_F(en),BP={kernelName:tn,backendName:"wasm",setupFunc:function(e){AP=e.wasm.cwrap(tn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:i,mean:s,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(s.dataId).id,c=t.dataIdMap.get(o.dataId).id,h=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(i.shape,i.dtype);if(0===wr.sizeFromShape(i.shape))return m;let y=t.dataIdMap.get(m.dataId).id;return AP(d,p,c,h,f,r,y),m}},VP={kernelName:or,backendName:"wasm",setupFunc:function(e){xP=e.wasm.cwrap(or,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=n,m=Pf.computeConv2DInfo(r.shape,i.shape,l,d,u,c),y=vF[h];if(null==y)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let g=a.dataIdMap.get(r.dataId).id,A=a.dataIdMap.get(i.dataId).id,x=m.outChannels,b=0;if(null!=s){let e=a.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);b=e.id}let v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,N=m.dilationHeight,T=m.dilationWidth,R=m.strideHeight,E=m.strideWidth,$=m.inChannels,M="SAME"===m.padInfo.type?1:0,F=m.batchSize,_=m.inHeight,P=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=a.makeOutput(m.outShape,"float32"),D=a.dataIdMap.get(O.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return xP(g,F,_,P,A,v,w,b,k,I,S,C,M,N,T,R,E,$,x,y,z,f||0,D),O}},UP={kernelName:lr,backendName:"wasm",setupFunc:function(e){bP=e.wasm.cwrap(lr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=n,m=Pf.computeConv2DInfo(r.shape,i.shape,l,d,u,c,!0),y=vF[h];if(null==y)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let g=a.dataIdMap.get(r.dataId).id,A=a.dataIdMap.get(i.dataId).id,x=m.outChannels,b=0;if(null!=s){let e=a.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);b=e.id}let v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,N=m.dilationHeight,T=m.dilationWidth,R=m.strideHeight,E=m.strideWidth,$=m.inChannels,M="SAME"===m.padInfo.type?1:0,F=m.batchSize,_=m.inHeight,P=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=a.makeOutput(m.outShape,"float32"),D=a.dataIdMap.get(O.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return bP(g,F,_,P,A,v,w,b,k,I,S,C,M,N,T,R,E,$,x,y,z,f||0,D),O}},GP={kernelName:an,backendName:"wasm",setupFunc:function(e){vP=e.wasm.cwrap(an,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:a,indices:r}=n,[i,s,o,l]=of.prepareAndValidate(a,r),u=t.makeOutput(i,a.dtype);if(0===s)return u;let d=r.shape,p=d[d.length-1],c=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return vP(c,bF[a.dtype],h,s,p,o,f,m),u}},HP={kernelName:nn,backendName:"wasm",setupFunc:function(e){wP=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,indices:i}=n,{axis:s,batchDims:o}=a,l=wr.parseAxisParam(s,r.shape)[0],u=t.readSync(i.dataId),d=r.shape[l];for(let e=0;e<u.length;++e){let t=u[e];wr.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let p=Pf.segment_util.collectGatherOpShapeInfo(r,i,l,o),c=d_({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),h=wr.sizeFromShape(i.shape),f=d_({inputs:{x:i},attrs:{shape:[p.batchSize,h/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=t.makeOutput(m,r.dtype);if(0===wr.sizeFromShape(r.shape))return y;let g=c.shape.length-1,A=t.dataIdMap.get(c.dataId).id,x=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(y.dataId).id,v=new Uint8Array(new Int32Array(wr.computeStrides(c.shape)).buffer),w=new Uint8Array(new Int32Array(wr.computeStrides(m)).buffer);return wP(A,bF[r.dtype],v,g,x,p.batchSize,w,b),t.disposeData(c.dataId),t.disposeData(f.dataId),y.shape=p.outputShape,y}},jP=_F(rn,0,"bool"),qP=_F(sn,0,"bool"),XP=EF(dn,"bool"),KP=EF(pn,"bool"),ZP=EF(cn,"bool"),YP={kernelName:hn,backendName:"wasm",setupFunc:function(e){kP=e.wasm.cwrap(hn,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,i=a.makeOutput(t.shape,"float32");if(0!==wr.sizeFromShape(t.shape)){let e=a.dataIdMap.get(i.dataId).id;kP(r,bF[t.dtype],n,e)}return i}},JP=_F(fn,0,"bool"),QP=_F(mn,0,"bool"),eO={kernelName:yn,backendName:"wasm",setupFunc:function(e){IP=e.wasm.cwrap(yn,null,["number","number","number","number"])},kernelFunc:function(e){let{attrs:t,backend:n}=e,{start:a,stop:r,num:i}=t,s=Math.floor(i),o=n.makeOutput([s],"float32");return IP(n.dataIdMap.get(o.dataId).id,a,r,s),o}},tO=EF(gn),nO=EF(An),aO=_F(xn,0,"bool"),rO=EF(bn),iO=_F(vn,0,"bool"),sO=_F(wn,0,"bool"),oO={kernelName:Sn,backendName:"wasm",setupFunc:function(e){SP=e.wasm.cwrap(Sn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:o,beta:l}=a;if("float32"!==r.dtype)throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(r.shape,r.dtype);return SP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(u.dataId).id,r.shape[3],i,s,o,l),u}},lO={kernelName:Cn,backendName:"wasm",setupFunc:function(e){CP=e.wasm.cwrap(Cn,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a;if("float32"!==r.dtype||"float32"!==i.dtype||"float32"!==s.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let p=n.makeOutput(r.shape,r.dtype);return CP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,s.shape[3],o,l,u,d),p}},uO={kernelName:Tn,backendName:"wasm",setupFunc:function(e){NP=e.wasm.cwrap(Tn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=s,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:c}=GF(s,r,t);c&&(l=u,o=t.dataIdMap.get(u.dataId).id);let h=l.shape.length;Pf.assertAxesAreInnerMostDims("max",d,h);let[f,m]=Pf.computeOutAndReduceShapes(l.shape,d),y=wr.sizeFromShape(m),g=t.makeOutput(f,s.dtype);if(0!==wr.sizeFromShape(l.shape)){let e=t.dataIdMap.get(g.dataId).id;NP(o,bF[s.dtype],y,e)}if(c&&t.disposeData(u.dataId),i){let e=Pf.expandShapeToKeepDim(g.shape,p);g.shape=e}return g}},dO=_F(Rn),pO={kernelName:En,backendName:"wasm",setupFunc:function(e){TP=e.wasm.cwrap(En,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,i=a.dataIdMap.get(r.dataId).id;wr.assert("float32"===r.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`));let{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=n,d=Pf.computePool2DInfo(r.shape,s,o,1,l,u),p=d.filterHeight,c=d.filterWidth,h=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,y=d.padInfo.left,g=d.dilationHeight,A=d.dilationWidth,x=d.strideHeight,b=d.strideWidth,v=d.inChannels,w=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let k=a.makeOutput(d.outShape,"float32"),I=a.dataIdMap.get(k.dataId).id;return TP(i,r.shape[0],r.shape[1],r.shape[2],p,c,h,f,m,y,g,A,x,b,v,w,I),k}},cO={kernelName:Mn,backendName:"wasm",setupFunc:function(e){RP=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a,d=Pf.computePool3DInfo(r.shape,i,s,1,o,l,u),p=n.makeOutput(d.outShape,r.dtype);return RP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),p}},hO={kernelName:Fn,backendName:"wasm",setupFunc:function(e){EP=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a,d=Pf.computePool3DInfo(i.shape,s,o,1,l,u),p=n.makeOutput(i.shape,i.dtype);return EP(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),p}},fO={kernelName:$n,backendName:"wasm",setupFunc:function(e){$P=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a,d=Pf.computePool2DInfo(i.shape,s,o,1,l,u),p=n.makeOutput(i.shape,i.dtype);return $P(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),p}},mO={kernelName:_n,backendName:"wasm",setupFunc:function(e){MP=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,includeBatchInIndex:l}=a;wr.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];wr.assert(Pf.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let d=Pf.computePool2DInfo(r.shape,i,s,[1,1],o),p=n.makeOutput(d.outShape,r.dtype),c=n.makeOutput(d.outShape,"int32");return MP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,n.dataIdMap.get(c.dataId).id,bF[r.dtype],l,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),[p,c]}},yO={kernelName:Pn,backendName:"wasm",setupFunc:function(e){FP=e.wasm.cwrap(Pn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,originalAxes:c,inputWasTransposed:h}=GF(s,r,t),f=p;if(h){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=Pf.getInnerMostAxes(f.length,u.shape.length))}Pf.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,y]=Pf.computeOutAndReduceShapes(u.shape,f),g=wr.sizeFromShape(y),A=u;"float32"!==u.dtype&&(A=v_({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);let x=t.makeOutput(m,"float32");if(0!==wr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;FP(l,g,e)}if(h&&t.disposeData(d.dataId),i){let e=Pf.expandShapeToKeepDim(x.shape,c);x.shape=e}return"float32"!==u.dtype&&t.disposeData(A.dataId),x}},gO={kernelName:On,backendName:"wasm",setupFunc:function(e){_P=e.wasm.cwrap(On,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,originalAxes:c,inputWasTransposed:h}=GF(s,r,t);if(h){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let f=u.shape.length;Pf.assertAxesAreInnerMostDims("min",p,f);let[m,y]=Pf.computeOutAndReduceShapes(u.shape,p),g=wr.sizeFromShape(y),A=t.makeOutput(m,u.dtype);if(0!==wr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;_P(l,bF[s.dtype],g,e)}if(h&&t.disposeData(d.dataId),i){let e=Pf.expandShapeToKeepDim(A.shape,c);A.shape=e}return A}},AO=_F(Dn);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(PP||(PP={}));var xO,bO={kernelName:zn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,mode:r}}=e,i=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),s=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map((e=>e[0])),p=a.map((e=>e[1])),c=new Uint8Array(new Int32Array(d).buffer),h=new Uint8Array(new Int32Array(p).buffer);return OP(s,u,t.shape.length,bF[t.dtype],c,h,PP[r],l),o},setupFunc:function(e){OP=e.wasm.cwrap(zn,null,["number","array","number","number","array","array","number","number"])}};function vO(e){let{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,i=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(i.dataId).id,o=n.shape[a],l=wr.sizeFromShape(n.shape)/o;return 0===wr.sizeFromShape(i.shape)||xO(r,s,o,l),i}var wO,kO,IO={kernelName:Ma,backendName:"wasm",setupFunc:function(e){xO=e.wasm.cwrap(Ma,null,["number","number","number","number"])},kernelFunc:vO},SO={kernelName:Wn,backendName:"wasm",setupFunc:function(e){wO=e.wasm.cwrap(Wn,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a;if("float32"!==r.dtype)throw new Error(`Tensor logits must have dtype float32, got ${r.dtype}`);let l=o?r:vO({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),[u,d]=l.shape,p=n.makeOutput([u,i],"int32");return wO(n.dataIdMap.get(l.dataId).id,u,d,i,s,n.dataIdMap.get(p.dataId).id),o||n.disposeData(l.dataId),p}},CO=_F(Ln),NO=_F(Bn),TO=EF(Vn);function RO(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],i=n[2],s=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:i,pValidOutputs:s}}var EO,$O,MO,FO,_O,PO,OO,DO,zO,LO,WO,BO,VO,UO,GO,HO,jO,qO,XO,KO={kernelName:Gn,backendName:"wasm",setupFunc:function(e){kO=e.wasm.cwrap(Gn,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:i,scoreThreshold:s}=a,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=kO(u,d,i,r,s),{pSelectedIndices:c,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=RO(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",c)}},ZO={kernelName:Hn,backendName:"wasm",setupFunc:function(e){EO=e.wasm.cwrap(Hn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:i,scoreThreshold:s,padToMaxOutputSize:o}=a,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,c=EO(d,p,i,r,s,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:y}=RO(t,c);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",y)]}},YO={kernelName:jn,backendName:"wasm",setupFunc:function(e){$O=e.wasm.cwrap(jn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:i,scoreThreshold:s,softNmsSigma:o}=a,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,c=$O(d,p,i,r,s,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:y}=RO(t,c);return t.wasm._free(y),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},JO=_F(Un,0,"bool"),QO={kernelName:Xn,backendName:"wasm",setupFunc:function(e){MO=e.wasm.cwrap(Xn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a,u=n.makeOutput([...r.shape,s],i),d=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(r.dataId).id;return MO(p,s,o,l,d),u}},eD={kernelName:qn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}},tD={kernelName:Kn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return hP({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach((e=>{wr.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),wr.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=C_({inputs:t.map((e=>{let t=hP({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeData(e.dataId))),l}},nD={kernelName:Zn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,i=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===wr.sizeFromShape(t.shape))return yP({backend:n,attrs:{shape:i,value:r,dtype:t.dtype}});let s=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map((e=>e[0])),p=a.map((e=>e[1])),c=new Uint8Array(new Int32Array(d).buffer),h=new Uint8Array(new Int32Array(p).buffer);return FO(s,u,t.shape.length,bF[t.dtype],c,h,r,l),o},setupFunc:function(e){FO=e.wasm.cwrap(Zn,null,["number","array","number","number","array","array","number","number"])}},aD=_F(Jn),rD={kernelName:Qn,backendName:"wasm",setupFunc:function(e){_O=e.wasm.cwrap(Qn,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,i=n.dataIdMap.get(a.dataId).id,s=n.dataIdMap.get(r.dataId).id,o=i,l=a,u=l;"float32"!==l.dtype&&(u=v_({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let d=n.makeOutput(a.shape,"float32"),p=n.dataIdMap.get(d.dataId).id;return _O(o,s,p),"float32"!==l.dtype&&n.disposeData(u.dataId),d}},iD={kernelName:ea,backendName:"wasm",setupFunc:function(e){PO=e.wasm.cwrap(ea,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,originalAxes:c,inputWasTransposed:h}=GF(s,r,t),f=p;if(h){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=Pf.getInnerMostAxes(f.length,u.shape.length))}Pf.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,y]=Pf.computeOutAndReduceShapes(u.shape,f),g=wr.sizeFromShape(y),A=t.makeOutput(m,u.dtype);if(0!==wr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;PO(l,g,bF[A.dtype],e)}if(h&&t.disposeData(d.dataId),i){let e=Pf.expandShapeToKeepDim(A.shape,c);A.shape=e}return A}},sD={kernelName:ra,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:i,dtype:s}=n,o=Ax(a,r,i,s),l=t.makeOutput([o.length],s);return t.typedArrayFromHeap(l).set(o),l}},oD=_F(Bt),lD=EF(sa),uD=EF(oa),dD=EF(ha),pD={kernelName:pa,backendName:"wasm",setupFunc:function(e){OO=e.wasm.cwrap(pa,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{images:i}=a,{alignCorners:s,halfPixelCenters:o,size:l}=r,[u,d]=l,[p,c,h,f]=i.shape,m=[p,u,d,f],y=n.dataIdMap.get(i.dataId);"float32"!==y.dtype&&(t=v_({backend:n,inputs:{x:i},attrs:{dtype:"float32"}}),y=n.dataIdMap.get(t.dataId));let g=y.id,A=n.makeOutput(m,"float32");if(0===wr.sizeFromShape(i.shape))return A;let x=n.dataIdMap.get(A.dataId).id;return OO(g,p,c,h,f,u,d,s?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),A}},cD={kernelName:ca,backendName:"wasm",setupFunc:function(e){DO=e.wasm.cwrap(ca,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{images:i,dy:s}=n,{alignCorners:o}=r,l=a.makeOutput(i.shape,"float32"),u=a.dataIdMap.get(i.dataId);return"float32"!==u.dtype&&(t=v_({backend:a,inputs:{x:i},attrs:{dtype:"float32"}}),u=a.dataIdMap.get(t.dataId)),DO(a.dataIdMap.get(i.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(i.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),o),null!=t&&a.disposeData(t.dataId),l}},hD={kernelName:ua,backendName:"wasm",setupFunc:function(e){zO=e.wasm.cwrap(ua,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,[d,p,c,h]=r.shape,f=[d,l,u,h],m=t.makeOutput(f,"float32");if(0===wr.sizeFromShape(r.shape))return m;let y,g=t.dataIdMap.get(r.dataId);"float32"!==g.dtype&&(y=v_({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let A=g.id,x=t.dataIdMap.get(m.dataId).id;return zO(A,d,p,c,h,l,u,i?1:0,s?1:0,x),null!=y&&t.disposeData(y.dataId),m}},fD={kernelName:da,backendName:"wasm",setupFunc:function(e){LO=e.wasm.cwrap(da,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{images:i,dy:s}=n,{alignCorners:o}=r,l=a.makeOutput(i.shape,"float32"),u=a.dataIdMap.get(i.dataId);return"float32"!==u.dtype&&(t=v_({backend:a,inputs:{x:i},attrs:{dtype:"float32"}}),u=a.dataIdMap.get(t.dataId)),LO(a.dataIdMap.get(i.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(i.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),o),null!=t&&a.disposeData(t.dataId),l}},mD={kernelName:fa,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a,s=wr.parseAxisParam(i,r.shape);if(0===r.shape.length)return zF({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);WO(l,d,s.length,p,r.shape.length,u);let c=d_({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),c},setupFunc:function(e){WO=e.wasm.cwrap(fa,null,["number","array","number","array","number","number"])}},yD={kernelName:ir,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:i,fillValue:s,center:o}=a,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,d=n.dataIdMap.get(l.dataId).id,[p,c,h,f]=r.shape,[m,y]=Pf.getImageCenter(o,c,h),g="number"==typeof s?[s,s,s,0===s?0:255]:[...s,255],A=new Uint8Array(new Int32Array(g).buffer);return BO(u,p,c,h,f,i,m,y,A,g.length,d),l},setupFunc:function(e){BO=e.wasm.cwrap(ir,null,["number","number","number","number","number","number","number","number","array","number","number"])}},gD=EF(ma),AD=EF(ya),xD={kernelName:ga,backendName:"wasm",setupFunc:function(e){VO=e.wasm.cwrap(ga,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:i}=n,{shape:s}=a,o=t.makeOutput(s,i.dtype);if(0===wr.sizeFromShape(s))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:c}=_p.calculateShapes(i,r,s),h=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(o.dataId).id;return VO(h,f,bF[i.dtype],l,u,d,m,c,y),o}},bD={kernelName:xa,backendName:"wasm",setupFunc:function(e){UO=e.wasm.cwrap(xa,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a;if(r.dtype!==i.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${r.dtype} and ${i.dtype}`);let o=n.makeOutput(i.shape,"int32");function l(e){return n.dataIdMap.get(e.dataId).id}return UO(l(r),l(i),r.shape[0],r.shape[1],i.shape[1],bF[r.dtype],"left"===s,l(o)),o}},vD={kernelName:ba,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t,s=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(i.dataId).id,u=n.makeOutput(r.shape,r.dtype),d=n.dataIdMap.get(u.dataId).id,p=a.shape.length,c=r.shape.length,h=0===p||p>1||1===c?1:wr.sizeFromShape(r.shape.slice(1));return GO(s,o,l,h,d),u},setupFunc:function(e){GO=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},wD=EF(va),kD={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){HO=e.wasm.cwrap(Ca,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(r.dataId).id;return 0===wr.sizeFromShape(r.shape)||HO(a,i),r}},ID=EF(Sa),SD=EF(ka),CD=EF(Ia),ND=EF(Na),TD={kernelName:Ea,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a,o=wr.sizeFromShape(i),l=[[0,0]];l.push(...s);for(let e=1+i.length;e<r.shape.length;++e)l.push([0,0]);let u=nD.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=Pf.getReshaped(u.shape,i,o,!1),p=Pf.getPermuted(d.length,i.length,!1),c=Pf.getReshapedPermuted(u.shape,i,o,!1),h=d_({inputs:{x:u},backend:n,attrs:{shape:d}}),f=BF({inputs:{x:h},backend:n,attrs:{perm:p}}),m=d_({inputs:{x:f},backend:n,attrs:{shape:c}});return n.disposeData(u.dataId),n.disposeData(h.dataId),n.disposeData(f.dataId),m}},RD={kernelName:Fa,backendName:"wasm",setupFunc:function(e){jO=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a}=e,{indices:r,values:i,denseShape:s,defaultValue:o}=a,l=r.shape[0],u=r.shape[1],d=n.readSync(s.dataId)[0],p=[l+d,u],c=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(i.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,r.dtype),y=n.dataIdMap.get(m.dataId).id,g=n.makeOutput(p.slice(0,1),i.dtype),A=n.dataIdMap.get(g.dataId).id,x=n.makeOutput([d],"bool"),b=n.dataIdMap.get(x.dataId).id,v=n.makeOutput([l],r.dtype),w=n.dataIdMap.get(v.dataId).id,k=n.makeOutput([4],"int32"),I=n.dataIdMap.get(k.dataId).id,S=jO(c,h,bF[i.dtype],l,d,u,f,y,A,b,w,I),C=n.readSync(k.dataId);switch(C[0]){case 1:t=Pf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(C[1]);break;case 2:t=Pf.getSparseFillEmptyRowsNegativeIndexErrorMessage(C[1],C[2]);break;case 3:t=Pf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(C[1],C[2],C[3]);break;default:t=""}if(n.disposeData(k.dataId),t)throw n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(x.dataId),n.disposeData(v.dataId),new Error(t);let N=m,T=g;return S!==p[0]&&(N=f_({inputs:{x:m},attrs:{begin:0,size:[S,u]},backend:n}),T=f_({inputs:{x:g},attrs:{begin:0,size:S},backend:n}),n.disposeData(m.dataId),n.disposeData(g.dataId)),[N,T,x,v]}},ED={kernelName:_a,backendName:"wasm",setupFunc:function(e){qO=e.wasm.cwrap(_a,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:a,inputShape:r,newShape:i}=n;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=t.dataIdMap.get(a.dataId).id,o=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=a.shape[0],d=wr.sizeFromShape(i.shape),p=t.makeOutput([u,d],a.dtype),c=t.dataIdMap.get(p.dataId).id,h=t.makeOutput([d],i.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),y=t.dataIdMap.get(m.dataId).id;qO(s,o,l,u,c,f,y);let g,A=t.readSync(m.dataId);switch(A[0]){case 0:g=Pf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(A[1],A[2]);break;case 1:g=Pf.getSparseReshapeNegativeOutputDimErrorMessage(A[1],A[2]);break;case 2:g=Pf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(h.dataId));g=Pf.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(h.dataId));g=Pf.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:g=""}if(t.disposeData(m.dataId),g)throw t.disposeData(p.dataId),t.disposeData(h.dataId),new Error(g);return[p,h]}};function $D(e){XO=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function MD(e,t){let{backend:n,inputs:a}=e,{data:r,indices:i,segmentIds:s}=a,o=i.shape[0],l=n.readSync(s.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(Pf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=r.shape.slice();d[0]=u;let p=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,h=n.dataIdMap.get(s.dataId).id,f=n.makeOutput(d,r.dtype),m=n.dataIdMap.get(f.dataId).id,y=n.makeOutput([4],"int32"),g=n.dataIdMap.get(y.dataId).id;XO(p,bF[r.dtype],r.shape[0],c,h,m,g,t,0);let A,x=n.readSync(y.dataId);switch(x[0]){case 0:A=Pf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:A=Pf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:A=Pf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:A=Pf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:A=""}if(n.disposeData(y.dataId),A)throw n.disposeData(f.dataId),new Error(A);return f}var FD,_D,PD,OD,DD,zD,LD,WD,BD={kernelName:Pa,backendName:"wasm",setupFunc:$D,kernelFunc:function(e){return MD(e,!0)}},VD={kernelName:Oa,backendName:"wasm",setupFunc:$D,kernelFunc:function(e){return MD(e,!1)}},UD={kernelName:Da,backendName:"wasm",setupFunc:function(e){FD=e.wasm.cwrap(Da,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{sparseIndices:r,sparseValues:i,defaultValue:s}=n,{outputShape:o}=a,l=t.makeOutput(o,s.dtype);if(0===wr.sizeFromShape(o))return l;let{sliceRank:u,numUpdates:d,sliceSize:p,strides:c,outputSize:h}=Pf.calculateShapes(i,r,o),f=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(i.dataId).id,y=t.dataIdMap.get(s.dataId).id,g=new Uint8Array(new Int32Array(c).buffer),A=t.dataIdMap.get(l.dataId).id;return FD(f,m,i.shape.length,y,bF[s.dtype],u,d,p,g,h,A),l}},GD={kernelName:$a,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=n,o=wr.parseAxisParam(s,r.shape)[0],l=Pf.prepareSplitSize(r,i,o),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let n=f_({inputs:{x:r},attrs:{begin:u,size:t},backend:a});return u[o]+=e,n}))}},HD=EF(Ta),jD=EF(La),qD=_F(za),XD={kernelName:ar,backendName:"wasm",setupFunc:function(e){_D=e.wasm.cwrap(ar,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:i}=n,s=t.dataIdMap.get(i.dataId).id,o=t.makeOutput(i.shape,i.dtype),l=t.dataIdMap.get(o.dataId).id;return _D(s,r,bF[i.dtype],l),o}},KD={kernelName:Ba,backendName:"wasm",setupFunc:function(e){PD=e.wasm.cwrap(Ba,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{x:i}=a,{begin:s,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:h}=r,{finalShapeSparse:f,finalShape:m,isIdentity:y,sliceDim0:g,isSimpleSlice:A,begin:x,end:b,strides:v}=uf.sliceInfo(i.shape,s,o,l,u,d,p,c,h);if(y)t=d_({inputs:{x:i},backend:n,attrs:{shape:m}});else if(g||A){wr.assert(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));let e=uf.computeOutShape(x,b,v),a=f_({inputs:{x:i},backend:n,attrs:{begin:x,size:e}});t=d_({inputs:{x:a},backend:n,attrs:{shape:m}}),n.disposeData(a.dataId)}else{let e=n.makeOutput(f,"float32"),a=n.dataIdMap.get(i.dataId).id,r=new Uint8Array(new Int32Array(wr.computeStrides(i.shape)).buffer),s=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(b).buffer),l=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(f).buffer),d=new Uint8Array(new Int32Array(wr.computeStrides(f)).buffer),p=n.dataIdMap.get(e.dataId).id;PD(a,r,i.shape.length,s,o,l,u,d,f.length,p),t=d_({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}},ZD={kernelName:Va,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{data:r,dataSplits:i}=n,{separator:s,nGramWidths:o,leftPad:l,rightPad:u,padWidth:d,preserveShortSequences:p}=a,c=t.readSync(r.dataId),h=t.readSync(i.dataId),[f,m]=Ux(c,h,s,o,l,u,d,p),y=t.makeOutput([f.length],"string");t.dataIdMap.get(y.dataId).stringBytes=f;let g=t.makeOutput(i.shape,"int32");return t.typedArrayFromHeap(g).set(m),[y,g]}},YD={kernelName:Ua,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{input:r,delimiter:i}=n,{skipEmpty:s}=a,o=t.readSync(r.dataId),l=t.readSync(i.dataId),[u,d,p]=Hx(o,l[0],s),c=d.length,h=t.makeOutput([c,2],"int32");t.typedArrayFromHeap(h).set(u);let f=t.makeOutput([c],"string");t.dataIdMap.get(f.dataId).stringBytes=d;let m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(p),[h,f,m]}},JD={kernelName:Ga,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{input:r}=n,{numBuckets:i}=a,s=jx(t.readSync(r.dataId),i),o=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(o).set(s),o}},QD=_F(Ha),ez={kernelName:Ra,backendName:"wasm",setupFunc:function(e){OD=e.wasm.cwrap(Ra,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,originalAxes:c,inputWasTransposed:h}=GF(s,r,t),f=p;if(h){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=Pf.getInnerMostAxes(f.length,u.shape.length))}Pf.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,y]=Pf.computeOutAndReduceShapes(u.shape,f),g=wr.sizeFromShape(y),A=t.makeOutput(m,u.dtype);if(0!==wr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;OD(l,g,bF[A.dtype],e)}if(h&&t.disposeData(d.dataId),i){let e=Pf.expandShapeToKeepDim(A.shape,c);A.shape=e}return A}},tz=EF(ja),nz=EF(qa),az={kernelName:Aa,backendName:"wasm",setupFunc:function(e){DD=e.wasm.cwrap(Aa,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{tensor:r,indices:i,updates:s}=n,{}=a,o=t.makeOutput(r.shape,r.dtype);if(0===wr.sizeFromShape(r.shape))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:c}=_p.calculateShapes(s,i,r.shape),h=t.dataIdMap.get(i.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return DD(h,f,bF[s.dtype],l,u,d,y,c,g,m),o}},rz={kernelName:Xa,backendName:"wasm",setupFunc:function(e){zD=e.wasm.cwrap(Xa,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,i=n.dataIdMap.get(r.dataId).id,{reps:s}=a,o=new Array(r.shape.length);for(let e=0;e<o.length;e++)o[e]=r.shape[e]*s[e];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,r.dtype),p=n.dataIdMap.get(d.dataId).id;return zD(i,l,r.shape.length,u,o.length,bF[d.dtype],p),d}},iz={kernelName:Ka,backendName:"wasm",setupFunc:function(e){LD=e.wasm.cwrap(Ka,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{k:r,sorted:i}=n,s=t.dataIdMap.get(a.dataId).id,o=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=r;let u=t.makeOutput(l,a.dtype),d=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),c=t.dataIdMap.get(p.dataId).id;return LD(s,o,a.shape.length,bF[a.dtype],r,i,d,c),[u,p]}},sz={kernelName:Za,backendName:"wasm",setupFunc:function(e){WD=e.wasm.cwrap(Za,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{image:i,transforms:s}=a,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=r,[p,c,h,f]=i.shape,[m,y]=null!=d?d:[c,h],g=[p,m,y,f],A=new Uint8Array(new Int32Array(wr.computeStrides(i.shape)).buffer),x=new Uint8Array(new Int32Array(wr.computeStrides(g)).buffer),b=n.makeOutput(g,i.dtype),v=n.dataIdMap.get(b.dataId).id,w=n.dataIdMap.get(i.dataId).id,k=n.dataIdMap.get(s.dataId).id,I="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return WD(w,k,s.shape[0]>1,p,m,y,f,h,c,A,i.shape.length-1,x,g.length-1,I,t,u,v),b}},oz={kernelName:Ja,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:i}=t,{outputValues:s,outputShape:o,indices:l}=tb(a.readSync(i.dataId),r,i.shape,i.dtype);return[a.makeOutput(o,i.dtype,void 0,s),a.makeOutput([l.length],"int32",void 0,l)]}},lz={kernelName:Qa,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r.shape[i],o=r.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==i&&(l[u++]=r.shape[e]);let d=new Array(s),p=new Array(o).fill(0),c=r.shape.slice();c[i]=1;for(let e=0;e<d.length;e++)p[i]=e,d[e]=f_({inputs:{x:r},attrs:{begin:p,size:c},backend:n});return d.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}},uz={kernelName:nr,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}},dz=[RF,$F,MF,FF,OF,DF,jF,qF,QF,e_,t_,n_,a_,r_,i_,s_,u_,o_,l_,h_,g_,A_,x_,b_,k_,I_,S_,__,P_,O_,D_,z_,L_,W_,B_,J_,Q_,eP,tP,nP,aP,rP,iP,sP,oP,lP,uP,dP,pP,cP,fP,mP,DP,zP,LP,WP,BP,VP,UP,GP,HP,jP,qP,WF,XP,KP,ZP,YP,JP,QP,eO,nO,tO,aO,rO,iO,sO,oO,lO,uO,dO,pO,cO,hO,fO,mO,yO,gO,AO,bO,SO,CO,NO,TO,KO,ZO,YO,JO,QO,eD,tD,nD,aD,rD,iD,sD,oD,lD,uD,dD,c_,pD,cD,hD,fD,mD,yD,gD,AD,xD,bD,vD,wD,kD,ID,SD,CD,y_,IO,ND,TD,RD,ED,BD,VD,UD,GD,HD,jD,qD,XD,KD,ZD,YD,JD,QD,ez,tz,nz,az,rz,iz,sz,UF,oz,lz,uz];for(let e of dz)yr(e);var pz=Le();pz.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})),pz.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(pz.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var cz=A(O()),hz=A(D()),fz=A(z()),mz=cz.default||cz,yz=fz.default||fz,gz=class extends W{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Nz),Tz=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new L(this,Ks())}write(e,t,n){let a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=wr.now();return e(),{kernelMs:wr.now()-t}}move(e,t,n,a,r){let i=this.dataIdNextNumber++;if("string"===a){let s=t;return void this.dataIdMap.set(e,{id:i,stringBytes:s,shape:n,dtype:a,memoryOffset:null,refCount:r})}let s=wr.sizeFromShape(n),o=s*wr.bytesPerElement(a),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(i,s,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:a,dtype:r,shape:i,stringBytes:s}=this.dataIdMap.get(e);if("string"===r)return null!=t&&0!==t||!(null==n||n>=s.length)?s.slice(t,n):s;t=t||0,n=n||wr.sizeFromShape(i);let o=wr.bytesPerElement(r);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(a+t*o,a+n*o).buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,a){let r;if(null==n)r=this.write(null!=a?a:null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=wr.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,i,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let a=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),i=wr.sizeFromShape(e);switch(t){case"float32":return new Float32Array(a,r,i);case"int32":return new Int32Array(a,r,i);case"bool":return new Uint8Array(a,r,i);default:throw new Error(`Unknown dtype ${t}`)}}};function Az(e,t,n){if(null!=bz)return bz;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),null!=wz&&null!=wz[a]?wz[a]:n+a}var xz=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],bz=null,vz=null,wz={},kz=!1,Iz=!1;function Sz(e,t=!1){if(qs("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),kz)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");bz=e,Iz=t}function Cz(e,t=!1){if(kz)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)vz=e;else{wz=e;let t=xz.filter((e=>null==wz[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Iz=t}var Nz=-1,Tz=-1;function Rz(e){Nz=e}function Ez(){if(-1===Tz)throw new Error("WASM backend not initialized.");return Tz}var $z="4.7.0";lo("wasm",(async()=>{let{wasm:e}=await async function(){let[e,t]=await Promise.all([Le().getAsync("WASM_HAS_SIMD_SUPPORT"),Le().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,a)=>{let r={locateFile:(n,a)=>{if(n.endsWith(".worker.js")){let e=hz.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?Az(e,t,null!=vz?vz:a):a+n}};Iz&&(r.instantiateWasm=function(e){return(t,n)=>(wr.fetch(e,{credentials:"same-origin"}).then((a=>{a.ok||t.env.a(`failed to load wasm binary file at '${e}'`),a.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(Az(e,t,null!=vz?vz:"")));let i,s=!1;r.onAbort=()=>{s||kz||(kz=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==bz?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+mz.toString()],{type:"text/javascript"}),i=mz(r)):i=yz(r),i.then((e=>{s=!0,kz=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(a)}))}();return new gz(e)}),2);var Mz=Le();function Fz(e,t){return`${e}_${t}`}function _z(e,t,n,a){return`${e}_${t}_${n}_${a}`}function Pz(e){if("rgba8unorm"===e)return 16;throw new Error(`${e} is not supported!`)}function Oz(e,t){if(Math.max(...e)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let n=e.length,a=e.map((e=>`${t}.${"xyzwuv"[e]}`)),r=new Array(n-1);r[n-2]=a[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${a[e+1]})`;return r}Mz.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),Mz.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),Mz.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",(()=>-1)),Mz.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!0)),Mz.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),Mz.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),Mz.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),Mz.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",(()=>!0)),Mz.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",(()=>!1)),Mz.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",(()=>0)),Mz.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),Mz.registerFlag("WEBGPU_PRINT_SHADER",(()=>"")),Mz.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",(()=>!1));var Dz=(e,t,n)=>"int32"===n?`atomicAdd(${e}, bitcast<i32>(${t}));`:`\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (${t});\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(${e}, oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }`,zz=(e,t="f32")=>{switch(e){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component ${t} is not supported.`)}};function Lz(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Wz(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error(`Index ${e} is not yet supported`)}function Bz(...e){let t;switch(e.length){case 0:t="\n        fn main()\n      ";break;case 1:t=`\n        fn main(${e[0]} : i32)\n      `;break;default:throw Error("Unreachable")}return t}function Vz(e,t){let n;return n=`\n     ${function(e){return`\n  @compute @workgroup_size(${e.workgroupSize[0]}, ${e.workgroupSize[1]}, ${e.workgroupSize[2]})\n`}(t)}\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ${e?"main(getGlobalIndex());":"main();"};\n      }\n    `,n}var Uz="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  fn idiv(a: i32, b: i32, sign: f32) -> i32 {\n    var res: i32 = a / b;\n    let modulo: i32 = a % b;\n    if (sign < 0. && modulo != 0) {\n      res = res - 1;\n    }\n    return res;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n",Gz="\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n";function Hz(e,t=""){let n=e.length,a=""!==t?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=""!==t?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${a}(index : i32) -> i32 { return index; }`;let i,s=wr.computeStrides(e),o=Lz(n),l=[];for(let e=0;e<n;e++)l.push(`d${e}`);return 1===s.length?`    fn ${a}(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};\n      return vec2<i32>(d0, d1);\n    }`:(i="var index2 = index;"+s.map(((e,t)=>`let ${l[t]} = index2 / uniforms.${r}.${Wz(t)}; ${t===s.length-1?`let ${l[t+1]} = index2 - ${l[t]} * uniforms.${r}.${Wz(t)}`:`index2 = index2 - ${l[t]} * uniforms.${r}.${Wz(t)}`};`)).join(""),`\n    fn ${a}(index : i32) -> ${o} {\n      ${i}\n      return ${o}(${l.join(",")});\n    }\n  `)}function jz(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:wr.assert(!1,(()=>`Unsupported ${e}D shape`))}return t}function qz(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function Xz(e,t=1){if("float32"===e)return zz(t,"f32");if("int32"===e||"bool"===e)return zz(t,"i32");throw new Error(`type ${e} is not supported.`)}function Kz(e){return!(e.dispatchLayout.hasOwnProperty("y")&&0!==e.dispatchLayout.y.length||e.dispatchLayout.hasOwnProperty("z")&&0!==e.dispatchLayout.z.length)}var Zz={};g(Zz,{GPUBytesPerElement:()=>iL,MatMulProgramType:()=>Yz,assertNotComplex:()=>oL,computeDispatch:()=>eL,computeWorkPerThreadForConv2d:()=>aL,computeWorkgroupInfoForMatMul:()=>tL,computeWorkgroupSizeForConv2d:()=>nL,flatDispatchLayout:()=>rL,isWebGPUSupported:()=>sL,tilesFitEvenlyIntoShape:()=>Qz});var Yz,Jz=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function Qz(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every(((t,n)=>t%e[n]==0))}function eL(e,t,n=[1,1,1],a=[1,1,1]){let[r,i,s]=[Math.ceil(Jz(e.x.map((e=>t[e])))/(n[0]*a[0])),e.y?Math.ceil(Jz(e.y.map((e=>t[e])))/(n[1]*a[1])):1,e.z?Math.ceil(Jz(e.z.map((e=>t[e])))/(n[2]*a[2])):1];return[r,i,s]}function tL(e,t,n,a=!1){let r=[8,8,1],i=[4,4,1];return a||(e<=8&&(i[1]=1),t<=16&&n<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:i}}function nL(e,t,n=!1){if(n)return[8,8,1];let a=Jz(e.x.map((e=>t[e]))),r=Jz(e.y.map((e=>t[e])));return a<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function aL(e,t,n=!1){if(n)return[4,4,1];let a=Jz(e.x.map((e=>t[e]))),r=Jz(e.y.map((e=>t[e])));return a<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function rL(e){return{x:e.map(((e,t)=>t))}}function iL(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function sL(){return("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope)&&!!navigator.gpu}function oL(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&wr.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGPU backend.`))}))}!function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"}(Yz||(Yz={}));var lL,uL=Le().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),dL=class extends W{nextDataId(){return dL.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!sL())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new class{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}}(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,n=!1,a=!0){let r,i=Fz(e,t);return a?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(r=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n}),this.numBytesAllocated+=e)):(r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(r),this.numUsedBuffers++,this.numBytesUsed+=e,r}releaseBuffer(e,t=!0){if(0===this.freeBuffers.size)return;let n=e.size,a=Fz(n,e.usage),r=this.usedBuffers.get(a),i=r.indexOf(e);if(i<0)throw new Error("Cannot find the buffer in buffer manager");r[i]=r[r.length-1],r.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,t?(this.freeBuffers.get(a).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}(this.device),this.textureManager=new class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,a){let r=e*t*Pz(n),i=_z(e,t,n,a);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=r,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let e=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(e),e}this.numBytesAllocated+=r;let s=this.device.createTexture({size:[e,t],format:n,usage:a});return this.usedTextures.get(i).push(s),s}releaseTexture(e){if(0===this.freeTextures.size)return;let t=e.width,n=e.height,a=e.format,r=_z(t,n,a,e.usage);this.freeTextures.has(r)||this.freeTextures.set(r,[]),this.freeTextures.get(r).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(r),s=i.indexOf(e);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(s,1);let o=t*n*Pz(a);this.numBytesUsed-=o}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}(this.device),this.tensorMap=new L(this,Ks()),Le().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);return t?n.refCount=0:n.refCount--,!(n.refCount>0||(null!=n.complexTensorInfos&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),0):(this.releaseResource(e),this.tensorMap.delete(e),0)))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(t&&t.resource){if(t.external)return void(t.resource=null);t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){this.tensorMap.has(e)&&this.tensorMap.get(e).refCount--}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.tensorMap.set(a,{dtype:n,shape:t,values:e,refCount:1}),a}move(e,t,n,a,r){if("complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:a,shape:n,values:t,refCount:r})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach((e=>{this.releaseResource(e),this.tensorMap.delete(e)})),this.uniformPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e))),this.stagingPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e,!1))),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(e){throw new Error(e.message)}Object.keys(this.pipelineCache).map(((t,n)=>{this.pipelineCache[t]=e[n]}))}async getBufferData(e){if(Le().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let t=e.size,n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let a=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n),Le().getBool("WEBGPU_USE_PROFILE_TOOL")&&(wr.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n,complexTensorInfos:a}=t;if(null!=n||"string"===t.dtype)return n;if("complex64"===t.dtype){let t=this.readSync(a.real.dataId),n=this.readSync(a.imag.dataId),r=wr.convertBackendValuesAndArrayBuffer(Pf.mergeRealAndImagArrays(t,n).buffer,"float32");return this.convertAndCacheOnCPU(e,r),r}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let r=["opaque","premultiplied"],i=t.resource,s=i.size;wr.assert(s%4==0,(()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4."));let o=s/4,l=new ArrayBuffer(s),u=256,d=256,p=r.map((e=>new OffscreenCanvas(u,d))),c=new OffscreenCanvas(u,d);this.endComputePassEncoder(),p.map(((e,t)=>{let n=e.getContext("webgpu");return n.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:r[t]}),n.getCurrentTexture()})).map(((e,t)=>{let n=(n,a,s)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:1024,offset:s},{texture:e},{width:n,height:a}),this.submitQueue();let o=c.getContext("2d",{willReadFrequently:!0});o.clearRect(0,0,n,a),o.drawImage(p[t],0,0);let u=o.getImageData(0,0,n,a).data,d=r[t],h=new Uint8ClampedArray(l,s,n*a*4);for(let e=0;e<h.length;e+=4)if("premultiplied"===d)h[e+3]=u[e+3];else{let t=u[e];h[e]=u[e+2],h[e+1]=u[e+1],h[e+2]=t}},a=Math.floor(o/(u*d)),s=u,h=d,f=0;for(let e=0;e<a;e++)n(s,h,f),f+=u*d*4;let m=o%(u*d);h=Math.floor(m/u),h>0&&(n(s,h,f),f+=h*(4*u)),s=m%u,s>0&&n(s,1,f)}));let h=wr.convertBackendValuesAndArrayBuffer(l,t.dtype);return this.convertAndCacheOnCPU(e,h),h}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t,n=this.tensorMap.get(e),{values:a}=n;if(null!=a)return a;if("complex64"===n.dtype){let e=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),a=e[0],r=e[1];t=Pf.mergeRealAndImagArrays(a,r)}else{let e=await this.getBufferData(n.resource);t=wr.convertBackendValuesAndArrayBuffer(e,n.dtype)}return this.convertAndCacheOnCPU(e,t),t}copyBuffer(e){let t=e.size,n=e.usage,a=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,t),this.submitQueue(),a}createTensorFromGPUData(e,t,n){let a=e.buffer;if("complex64"===n)throw new Error("Cannot write to a complex64 dtype. ");let r={id:this.nextDataId()};this.tensorMap.set(r,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});let i=this.tensorMap.get(r),s=iL(i.dtype)*wr.sizeFromShape(i.shape);if(e.buffer.size<s)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${s})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!=(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(a=this.copyBuffer(a)),i.resource=a,Ks().makeTensorFromDataId(r,t,n,this)}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:a,shape:r,resource:i}=t;if("complex64"===a)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==i)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let s=i,o=s.size,l=s.usage,u=this.bufferManager.acquireBuffer(o,l);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,u,0,o),this.submitQueue();let d=this.makeTensorInfo(r,a),p=Ks().makeTensorFromTensorInfo(d);return this.tensorMap.get(d.dataId).resource=u,{tensorRef:p,buffer:u}}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>wr.decodeString(e)));return Ws(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ws(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let t=this.activeTimers,n=[],a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=wr.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=wr.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);let s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(r);return s.kernelMs=wr.sum(o),s.getExtraProfileInfo=()=>o.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,s}makeTensorInfo(e,t,n){return"string"===t&&null!=n&&n.length>0&&wr.isString(n[0])&&(n=n.map((e=>wr.encodeString(e)))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId).resource;return t instanceof GPUBuffer?{buffer:t}:t instanceof GPUTexture?t.createView():t}uploadToGPU(e){let t=this.tensorMap.get(e);if(null!=t.resource)return;let n,a=iL(t.dtype)*wr.sizeFromShape(t.shape),r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(n=this.bufferManager.acquireBuffer(a,r,!0),"unmapped"===n.mapState){let e=this.bufferManager.acquireBuffer(a,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),r=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,a),this.stagingPendingDisposal.push(e)}else{let e=n.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(e).set(t.values):new Float32Array(e).set(t.values),n.unmap()}t.values=null}else n=this.bufferManager.acquireBuffer(a,r);t.resource=n}makeUniforms(e){let t=0,n=0,a=[],r=1;e.forEach((e=>{let i;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:i=4;break;case 2:i=8;break;case 3:case 4:case 5:case 6:i=16;break;default:wr.assert(!1,(()=>`Unsupported ${e.data.length}D shape`))}(5===n||6===n)&&(i=16),i>r&&(r=i),t=Math.ceil(t/i)*i,n=e.data.length,a.push(t),t+=4*e.data.length})),t=Math.ceil(t/r)*r;let i=new ArrayBuffer(t);e.forEach(((e,t)=>{let n=a[t];"int32"===e.type?new Int32Array(i,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(i,n,e.data.length).set(e.data):new Float32Array(i,n,e.data.length).set(e.data)}));let s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(s,0,i,0,t),this.uniformPendingDisposal.push(s),{offset:0,size:t,buffer:s}}runWebGPUProgram(e,t,n,a,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),0===wr.sizeFromShape(r.shape))return this.tensorMap.get(r.dataId).values=wr.getTypedArrayFromDType(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=((e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,a=t.dispatchLayout,r=t.dispatch;if(r.every((e=>e<=n)))return r;wr.assert(r[0]>n&&void 0===a.y&&void 0===a.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let i=Math.ceil(Math.sqrt(r[0]));return i>n?(i=Math.ceil(Math.cbrt(r[0])),wr.assert(i<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[i,i,i]):[i,i,1]})(this.device,e);let i=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}}));e.shaderKey=function(e,t,n){let a=e.shaderKey;if(e.isFromPixels)return a;let r=[],i=[];t.forEach((e=>{r.push(e.shape),i.push(e.dtype)})),r.push(n.shape),i.push(n.dtype);let s=t.map((e=>Pf.getBroadcastDims(e.shape,n.shape))),o=t.map((e=>wr.arraysEqual(e.shape,n.shape))).join("_"),l=s.map((e=>e.join("_"))).join(";"),u=qz(e)?"flatDispatch":"";return a+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+r.map((e=>e.length)).join(",")+i.join(",")+e.variableNames.join(",")+l+o+u,a}(e,i,r);let s=Le().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=((e,t,n,a,r)=>{let i=function(e,t,n){let a=[],r=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,a.push(`\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ${qz(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +\n                localIndex);\n        `}\n      }\n    `),n.isFromPixels){a.push(`\n        struct Uniform {\n          size            : i32,\n          numChannels     : i32,\n          outShapeStrides : vec2<i32>,\n        };\n\n        @group(0) @binding(0) var<storage, read_write> result: array<${Xz(t.dtype,n.outputComponent)}>;\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      `);let e=Kz(n);return[Uz,a.join("\n"),Hz(t.shape),n.getUserCode(),Vz(e,n)].join("\n")}let i,s,o="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach(((t,n)=>{let a=Lz(e[n].shape.length);o+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${a}, `,i=e[n].shape.length-1,s=Lz(i),o+=`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides: ${s}, `}));let l=Lz(t.shape.length);o+=`outShape : ${l}, `,i=t.shape.length-1,s=Lz(i),o+=`\n         outShapeStrides: ${s}, `,n.size&&(o+="size : i32, "),n.uniforms&&(o+=n.uniforms),o+="};",o=function(e){return e=e.replace(/(\w+)\s*:\s*vec(5|6)/g,(e=>"@align(16) "+e)),e=e.replace(/vec(5|6)\s*,\s*(\w+)/g,((e,t,n)=>`vec${t}, @align(16) ${n}`)),e}(o),a.push(o),n.atomic?a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):a.push(`\n      @group(0) @binding(0) var<storage, read_write> result: array<${Xz(t.dtype,n.outputComponent)}>;\n    `),n.variableNames.forEach(((t,r)=>{a.push(`\n      @group(0) @binding(${1+r}) var<storage, read> ${t}: array<${n.variableComponents?Xz(e[r].dtype,n.variableComponents[r]):Xz(e[r].dtype,n.outputComponent)}>;\n        `)})),""!==o&&a.push(`\n      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n      `);let u=function(e,t){let{x:n,y:a=[],z:r=[]}=t,i=e.length,s=n.length+a.length+r.length;if(s!==i)return"";if(n.length===i)return`fn getOutputCoords() -> ${Lz(i)}{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  `;let o="",l=[n,a,r];for(let e=0;e<l.length;e++){let t=l[e];if(0!==t.length)if(1===t.length)o+=`let d${t[0]} = i32(globalId[${e}]);`;else{let n=Oz(t,"uniforms.outShape");o+=`var index${e} = i32(globalId[${e}]);`;for(let a=0;a<n.length;a++)o+=`let d${t[a]} = index${e} / ${n[a]};`,a===n.length-1?o+=`let d${t[a+1]} = index${e} - d${t[a]} * ${n[a]};`:o+=`index${e} = index${e} - d${t[a]} * ${n[a]};`}}let u=[];for(let e=0;e<s;e++)u.push(`d${e}`);let d=Lz(s),p=`fn getOutputCoords() -> ${d} {\n  ${o}\n`;return 0===u.length?p+=`return ${d}(0); }`:p+=`return ${d}(${u.join(",")}); }`,p}(t.shape,n.dispatchLayout),d=[Uz,a.join("\n")+Gz,Hz(t.shape),u,jz(t.shape.length)];n.atomic||d.push(function(e,t,n){let a=e.length,r=Xz(t,n),i=`fn setOutputAtIndex(flatIndex : i32, value : ${zz(n)}) {\n      result[flatIndex] = ${r}(value);\n    }\n\n    fn setOutputAtIndexI32(flatIndex : i32, value : ${zz(n,"i32")}) {\n      result[flatIndex] = ${r}(value);\n    }\n    `;if(a>=2){let e=["d0","d1","d2","d3","d4","d5"].slice(0,a),t=Lz(a);i+=`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : ${zz(n)}) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex${1===n?"":` / ${n}`}, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : ${zz(n,"i32")}) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex${1===n?"":` / ${n}`}, value);\n      }\n    `}return i}(t.shape,t.dtype,n.outputComponent)),n.variableNames.forEach(((t,n)=>{d.push(`${Hz(e[n].shape,t)}`)}));let p=e.map(((e,a)=>function(e,t,n,a){let r=function(e,t){let n=e.name,a=e.shape.length,r=Lz(a),i="get"+n.charAt(0).toUpperCase()+n.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,a),o=s.map((e=>`${e} : i32`)).join(", ");if(a<1)return`\n      fn ${i}() -> ${zz(t)} {\n        return ${zz(t)}(${n}[0]);\n      }\n    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${a}D`;return 0===a&&(u="1D"),`\n    fn ${i}(${o}) -> ${zz(t)} {\n      return ${zz(t)}(${n}[getIndexFromCoords${u}(${r}(${s.join(",")}),\n        ${l})${1===t?"":` / ${t}`}]);\n    }\n   `}(e,n);return e.shape.length<=t.length&&(r+=function(e,t,n,a){let r=e.name,i=r.charAt(0).toUpperCase()+r.slice(1),s="get"+i+"ByOutput",o=e.shape.length,l=t.length,u=Lz(l);if(wr.arraysEqual(e.shape,t)&&a)return`\n    fn ${s}Index(globalIndex : i32) -> ${zz(n)} {\n      return ${zz(n)}(${r}[globalIndex]);\n    }\n\n    fn ${s}Coords(coords : ${u}) -> ${zz(n)} {\n      return ${zz(n)}(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${1===n?"":` / ${n}`}]);\n    }\n    `;let d=Pf.getBroadcastDims(e.shape,t),p=l-o,c="";if(0===o)return`\n    fn ${s}Index(globalIndex : i32) -> ${zz(n)}{\n      return get${i}();\n    }\n\n    fn ${s}Coords(coords : ${u}) -> ${zz(n)}{\n      return get${i}();\n    }\n  `;c=l<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${Wz(e+p)} = 0;`)).join("\n");let h="";h=l<2&&o>0?"coords":l>1?`${Lz(o)}(${e.shape.map(((e,t)=>`coords.${Wz(t+p)}`)).join(", ")})`:"coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return`\n  fn ${s}Index(globalIndex : i32) -> ${zz(n)} {\n    var coords = getCoordsFromIndex(globalIndex);\n    ${c}\n    return ${zz(n)}(${r}[getIndexFromCoords${m}(${h}, ${f})${1===n?"":` / ${n}`}]);\n  }\n\n  fn ${s}Coords(coordsIn : ${u}) -> ${zz(n)} {\n    var coords = coordsIn;\n    ${c}\n    return ${zz(n)}(${r}[getIndexFromCoords${m}(${h}, ${f})${1===n?"":` / ${n}`}]);\n  }\n`}(e,t,n,a)),r}(e,t.shape,n.variableComponents?n.variableComponents[a]:n.outputComponent,n.dispatchLayout.x.length===t.shape.length))).join("\n");d.push(p),d.push(n.getUserCode());let c=Kz(n);return d.push(Vz(c,n)),d.join("\n")}(n,{dtype:a.dtype,shape:a.shape},t),s=e.createShaderModule({code:i,label:t.constructor.name}),o=Le().get("WEBGPU_PRINT_SHADER");if(""!==o){o=o.toLowerCase();let e=o.split(",");("all"===o||e.some((e=>t.shaderKey.toLowerCase().includes(e))))&&(console.group(t.shaderKey),console.debug(i),console.groupEnd())}return r?e.createComputePipelineAsync({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})})(this.device,e,i,r,s)),e.pipeline=this.pipelineCache[e.shaderKey],s||this.recordAndSubmit(e,r,t,a),r}recordAndSubmit(e,t,n,a){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let r=[],i=[];if(!e.isFromPixels){r.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=n.concat(t).map((e=>e.shape));let a="int32";if(i.map((e=>{r.push({type:a,data:e});let t=wr.computeStrides(e);r.push({type:a,data:t})})),e.size){let t=wr.sizeFromShape(e.outputShape);r.push({type:a,data:[e.outputComponent?t/e.outputComponent:t]})}}a&&(r=[...r,...a]);let s=[this.tensorToBinding(t),...n.map((e=>this.tensorToBinding(e))),this.makeUniforms(r)];n.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(t.dataId);let o=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:s.map(((e,t)=>({binding:t,resource:e})))}),l=null!=this.activeTimers;this.ensureCommandEncoderReady();let u={};l&&this.supportTimestampQuery?(this.endComputePassEncoder(),null==this.querySet&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),u.timestampWrites=[{querySet:this.querySet,queryIndex:0,location:"beginning"},{querySet:this.querySet,queryIndex:1,location:"end"}],this.computePassEncoder=this.commandEncoder.beginComputePass(u)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(u)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,o),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(l||Le().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass)&&(this.endComputePassEncoder(),l?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;null==this.queryResolveBuffer&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,8*this.querySetCount),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);let t=new BigUint64Array(e.getMappedRange()),n=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n}shouldExecuteOnCPU(e,t=uL){return Le().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).resource&&wr.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(null!=this.querySet&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}};dL.nextDataId=0,sL()&&lo("webgpu",(async()=>{let e={powerPreference:Le().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={};t.features.has("timestamp-query")&&(n.requiredFeatures=["timestamp-query"]);let a=t.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:a.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:a.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:a.maxStorageBufferBindingSize,maxBufferSize:a.maxBufferSize,maxComputeWorkgroupSizeX:a.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:a.maxComputeInvocationsPerWorkgroup};let r=await t.requestDevice(n),i=await t.requestAdapterInfo();return new dL(r,i)}),3),function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.ELU_DER=5]="ELU_DER",e[e.EQUAL=6]="EQUAL",e[e.GREATER=7]="GREATER",e[e.GREATER_EQUAL=8]="GREATER_EQUAL",e[e.INT_DIV=9]="INT_DIV",e[e.LESS=10]="LESS",e[e.LESS_EQUAL=11]="LESS_EQUAL",e[e.LOGICAL_AND=12]="LOGICAL_AND",e[e.LOGICAL_OR=13]="LOGICAL_OR",e[e.MAX=14]="MAX",e[e.MIN=15]="MIN",e[e.MOD=16]="MOD",e[e.MUL=17]="MUL",e[e.NOT_EQUAL=18]="NOT_EQUAL",e[e.POW=19]="POW",e[e.PRELU=20]="PRELU",e[e.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",e[e.SUB=22]="SUB"}(lL||(lL={}));var pL,cL="return a + b;",hL="var resultTemp = atan2(a, b);",fL="return areal * breal - aimag * bimag;",mL="return areal * bimag + aimag * breal;",yL="return a / b;",gL="return select(a * (b + 1.0), a, b >= 0.);",AL="return select(a * (b + vec4<f32>(1.0)), a, b >= vec4<f32>(0.));",xL="return f32(a == b);",bL="return vec4<f32>(a == b);",vL="return f32(a > b);",wL="return vec4<f32>(a > b);",kL="return f32(a >= b);",IL="return vec4<f32>(a >= b);",SL="\n  let s = sign(a) * sign(b);\n  let ia = i32(round(a));\n  let ib = i32(round(b));\n  return f32(idiv(ia, ib, s));\n",CL="\n  let ia = vec4<i32>(round(a));\n  let ib = vec4<i32>(round(b));\n  let cond = ib != vec4<i32>(0);\n  var resultTemp = vec4<i32>(0);\n  let s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    resultTemp[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    resultTemp[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    resultTemp[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    resultTemp[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4<f32>(resultTemp);\n",NL="return f32(a < b);",TL="return vec4<f32>(a < b);",RL="return f32(a <= b);",EL="return vec4<f32>(a <= b);",$L="return f32(a >= 1.0 && b >= 1.0);",ML="return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));",FL="return f32(a >= 1.0 || b >= 1.0);",_L="return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));",PL="var resultTemp = max(a, b);",OL="var resultTemp = min(a, b);",DL="\n  let isNaN = b == 0.;\n  var resultTemp = a % b;\n  resultTemp = select((resultTemp + b) % b, resultTemp,\n      (a < 0. && b < 0.) || (a >= 0. && b > 0.));\n",zL="\n  let isNaN = !vec4<bool>(b);\n  var resultTemp = vec4<f32>(a % b);\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n",LL="return a * b;",WL="\n  var resultTemp = f32(a != b);\n  let valueForNaN = 1.0;\n",BL="\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n",VL="\n  let isNaN = a < 0.0 && floor(b) < b;\n  if (b == 0.0) {\n    return 1.0;\n  }\n  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),\n      round(abs(b) % 2.0) != 1.0);\n",UL="\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n",GL="if (a < 0.0) { return b * a; }  return a;",HL="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",jL="return (a - b) * (a - b);",qL="return a - b;";function XL(e,t){let n;do{switch(e){case lL.ATAN2:n=hL;break;case lL.MAX:n=PL;break;case lL.MIN:n=OL;break;case lL.MOD:n=t?zL:DL;break;case lL.NOT_EQUAL:n=t?BL:WL;break;case lL.POW:n=t?UL:VL;break;default:continue}let a,r,i;return t?(a="isnanVec4",r="vec4<f32>",i="vec4<bool>"):(a="isnan",r="f32",i="bool"),`\n      let aIsNaN = ${a}(a);\n      let aPostLegalization = select(a, ${r}(42), aIsNaN);\n      let bIsNaN = ${a}(b);\n      let bPostLegalization = select(b, ${r}(42), bIsNaN);\n      let isNaN = false;\n      let valueForNaN = uniforms.NAN;\n      {\n        let a = aPostLegalization;\n        let b = bPostLegalization;\n        ${n}\n        return select(\n            resultTemp, ${r}(valueForNaN),\n            ${i}(isNaN) | aIsNaN | bIsNaN);\n      }\n    `}while(0);switch(e){case lL.ADD:return cL;case lL.COMPLEX_MULTIPLY_IMAG:return mL;case lL.COMPLEX_MULTIPLY_REAL:return fL;case lL.DIV:return yL;case lL.ELU_DER:return t?AL:gL;case lL.EQUAL:return t?bL:xL;case lL.GREATER:return t?wL:vL;case lL.GREATER_EQUAL:return t?IL:kL;case lL.INT_DIV:return t?CL:SL;case lL.LESS:return t?TL:NL;case lL.LESS_EQUAL:return t?EL:RL;case lL.LOGICAL_AND:return t?ML:$L;case lL.LOGICAL_OR:return t?_L:FL;case lL.MUL:return LL;case lL.PRELU:return t?HL:GL;case lL.SQUARED_DIFFERENCE:return jL;case lL.SUB:return qL}return`\n    ${n}\n    return resultTemp;\n  `}!function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"}(pL||(pL={}));var KL="return abs(a);",ZL="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n",YL="\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n",JL="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n",QL="return asinh(a);",eW="\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n",tW="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n",nW="return ceil(a);",aW="return cos(a);",rW="\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n",iW="return exp(a) - 1.0;",sW="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",oW="\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n",lW=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  let p = ${Pf.ERF_P};\n  let a1 = ${Pf.ERF_A1};\n  let a2 = ${Pf.ERF_A2};\n  let a3 = ${Pf.ERF_A3};\n  let a4 = ${Pf.ERF_A4};\n  let a5 = ${Pf.ERF_A5};\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n`,uW="return exp(a);",dW="return floor(a);",pW="return f32(!isnan(a) && !isinf(a));",cW="return f32(isinf(a));",hW="return f32(isnan(a));",fW="return a;",mW="if (a < 0.0) { return uniforms.NAN; }\n  return log(a);",yW="\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n",gW="return f32(!(a >= 1.0));",AW="return -a;",xW="if (a < 0.0) { return uniforms.alpha * a; } return a;",bW="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",vW="return 1.0 / a;",wW="return select(a, 0.0, a < 0.0);",kW="return clamp(a, 0.0, 6.0);",IW="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",SW="\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n",CW="return round(a);",NW="return inverseSqrt(a);",TW=`\n  if (a >= 0.0) {\n    return ${Pf.SELU_SCALE} * a;\n  } else {\n    return ${Pf.SELU_SCALEALPHA} * (exp(a) - 1.0);\n  }\n`,RW="return 1.0 / (1.0 + exp(-1.0 * a));",EW="return sign(a);",$W="return sin(a);",MW="\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n",FW="\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n",_W="return sqrt(a);",PW="return a * a;",OW="\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n",DW="return tan(a);",zW="\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n",LW="return f32(i32((a)));";function WW(e,t){switch(e){case pL.ABS:return KL;case pL.ACOS:return ZL;case pL.ACOSH:return YL;case pL.ASIN:return JL;case pL.ASINH:return QL;case pL.ATAN:return eW;case pL.ATANH:return tW;case pL.COS:return aW;case pL.COSH:return rW;case pL.CEIL:return nW;case pL.ELU:return t?oW:sW;case pL.ERF:return lW;case pL.EXP:return uW;case pL.EXPM1:return iW;case pL.FLOOR:return dW;case pL.IS_FINITE:return pW;case pL.IS_INF:return cW;case pL.IS_NAN:return hW;case pL.LINEAR:return fW;case pL.LOG:return mW;case pL.LOG1P:return yW;case pL.LOGICAL_NOT:return gW;case pL.NEG:return AW;case pL.LEAKYRELU:return t?bW:xW;case pL.RECIPROCAL:return vW;case pL.RELU:return t?SW:wW;case pL.RELU6:return t?IW:kW;case pL.ROUND:return CW;case pL.RSQRT:return NW;case pL.SELU:return TW;case pL.SIGMOID:return RW;case pL.SIGN:return EW;case pL.SIN:return $W;case pL.SINH:return MW;case pL.SOFTPLUS:return FW;case pL.SQRT:return _W;case pL.SQUARE:return PW;case pL.STEP:return OW;case pL.TAN:return DW;case pL.TANH:return zW;case pL.TO_INT:return LW;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function BW(e,t=!1,n=!1,a=3){if(null===e)return"";let r="";if("linear"===e)r=WW(pL.LINEAR);else if("relu"===e)r=WW(pL.RELU,n);else if("elu"===e)r=WW(pL.ELU,n);else if("relu6"===e)r=WW(pL.RELU6,n);else if("prelu"===e)r=XL(lL.PRELU,n);else if("sigmoid"===e)r=WW(pL.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);r=WW(pL.LEAKYRELU,n)}let i=zz(n?4:1),s="";return s=t?`\n      fn activation(a : ${i}, coords : vec${a}<i32>) -> ${i} {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ${r}\n      }`:`\n      fn activation(a : ${i}, coords : vec${a}<i32>) -> ${i} {\n        ${r}\n      }`,s}function VW(e,t){return`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `}function UW(e,t,n=!1,a=!1,r=!1,i=1){wr.assert(e&&1===i||!e,(()=>`transposeA ${e} is not compatible with component size ${i}`));let s=`\n      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}\n\n    `,o=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`\n  fn mm_readA(batch: i32, row: i32, colIn: i32) -> ${zz(i)} {\n    var value = ${zz(i)}(0.0);\n    let col = colIn * ${i};\n    ${n&&r?s:`\n    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}\n    {\n      ${s}\n    }\n    `}\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, colIn: i32) -> ${zz(i)} {\n    let col = colIn * ${i};\n    var value = ${zz(i)}(0.0);\n    ${o}\n    return value;\n  }\n  `}function GW(e,t,n,a,r=!1,i=!1,s=!1,o=1){return`\n  ${UW(n,a,r,i,s,o)}\n  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${zz(o)}) {\n    let col = colIn * ${o};\n    ${r&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ${VW(e,t)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  `}function HW(e,t,n=!1,a=32,r=!1,i=32,s=!1){let o=t[1]*e[1],l=t[0]*e[0],u=n?o:a,d=n?a:o,p=u/t[0],c=a/t[1],h=e[1];return wr.assert((n&&4===p&&4===e[1]||!n&&(3===p||4===p))&&u%t[0]==0&&a%t[1]==0&&4===e[0],(()=>`If transposeA ${n} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n          Otherwise, innerElementSize ${p} must be 3 or 4.\n      tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`)),`\n  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${u/p}>, ${d}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/e[0]}>, ${a}>;\n\n  ${Bz()} {\n    let localRow = i32(localId.y);\n    let tileRow = localRow * ${h};\n    let tileCol = i32(localId.x);\n\n    let globalRow = i32(globalId.y) * ${h};\n    let globalCol = i32(globalId.x);\n    let batch = ${r?"0":"i32(globalId.z)"};\n    let batchA = ${r||!s?"batch":"batch % uniforms.aShape[0]"};\n    let batchB = ${r||!s?"batch":"batch % uniforms.bShape[0]"};\n    let globalRowStart = i32(workgroupId.y) * ${o};\n\n    let numTiles = ${r?`${Math.ceil(i/a)}`:`(uniforms.dimInner - 1) / ${a} + 1`};\n    var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};\n\n    var acc: array<vec4<f32>, ${h}>;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ${c};\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${h}; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ${((e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart / ${t} + inputCol);\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart / ${t} + inputCol);\n        `)(n,p)}\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ${c}; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ${a};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${a/p}; k++) {\n            let BCached0 = mm_Bsub[k * ${p}][tileCol];\n            let BCached1 = mm_Bsub[k * ${p} + 1][tileCol];\n            let BCached2 = mm_Bsub[k * ${p} + 2][tileCol];\n            ${3===p?"":`let BCached3 = mm_Bsub[k * ${p} + 3][tileCol];`}\n\n            ${((e,t,n)=>e?`\n        let ACached0 = mm_Asub[k * ${t}][localRow];\n        let ACached1 = mm_Asub[k * ${t} + 1][localRow];\n        let ACached2 = mm_Asub[k * ${t} + 2][localRow];\n        ${3===t?"":`let ACached3 = mm_Asub[k * ${t} + 3][localRow];`}\n        for (var i = 0; i < ${n}; i++) {\n          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);\n          acc[i] = fma(BCached1, vec4<f32>(ACached1[i]), acc[i]);\n          acc[i] = fma(BCached2, vec4<f32>(ACached2[i]), acc[i]);\n          ${3===t?"":"acc[i] = fma(BCached3, vec4<f32>(ACached3[i]), acc[i]);"}\n        }`:`\n        for (var i = 0; i < ${n}; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = fma(BCached0, vec4<f32>(ACached.x), acc[i]);\n          acc[i] = fma(BCached1, vec4<f32>(ACached.y), acc[i]);\n          acc[i] = fma(BCached2, vec4<f32>(ACached.z), acc[i]);\n          ${3===t?"":"acc[i] = fma(BCached3, vec4<f32>(ACached.w), acc[i]);"}\n        }`)(n,p,h)}\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ${h}; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }`}var jW=e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        ";function qW(e,t,n=!1,a=32,r=!1,i=32,s=!1,o=!1){let l=e[1]*t[1],u=e[0]*t[0],d=n?l:a,p=n?a:l;wr.assert(p%t[1]==0&&d%t[0]==0&&a%t[1]==0,(()=>`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`));let c=p/t[1],h=d/t[0],f=a/t[1],m=e[1],y=e[0],g=s?`\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ${l};\n      let globalColStart = i32(workgroupId.x) * ${u};\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n          for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n            ${jW(n)}\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {\n              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ${a};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ${y}>;\n        for (var k = 0; k < ${a}; k++) {\n          for (var inner = 0; inner < ${y}; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n          }\n          for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n            for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n              acc[innerRow][innerCol] =\n                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n        for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ${t[0]};\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      `:`\n  let tileRow = i32(localId.y) * ${m};\n  let tileCol = i32(localId.x) * ${y};\n\n  let globalRow = i32(globalId.y) * ${m};\n  let globalCol = i32(globalId.x) * ${y};\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let tileRowA = i32(localId.y) * ${c};\n  let tileColA = i32(localId.x) * ${h};\n  let tileRowB = i32(localId.y) * ${f};\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ${c}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${h}; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ${jW(n)}\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ${f}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ${a};\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ${y}>;\n    for (var k = 0; k < ${a}; k++) {\n      for (var inner = 0; inner < ${y}; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n)}\n        for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n          acc[innerRow][innerCol] =\n              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n    for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  `;return`\n    var<workgroup> mm_Asub : array<array<f32, ${d}>, ${p}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${a}>;\n\n    ${Bz()} {\n      let batch = ${r?"0":"i32(globalId.z)"};\n      let batchA = ${r||!o?"batch":"batch % uniforms.aShape[0]"};\n      let batchB = ${r||!o?"batch":"batch % uniforms.bShape[0]"};\n      let numTiles = ${r?`${Math.ceil(i/a)}`:`(uniforms.dimInner - 1) / ${a} + 1`};\n      var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};\n\n      var acc : array<array<f32, ${y}>, ${m}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ${g}\n    }\n  `}var XW=class{constructor(e,t,n=!1,a=!1,r=null,i=null,s=null,o=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=n?e[1]:e[2];if(this.isVec4=(l%4==0&&!n||t[1]%4==0&&n)&&t[2]%4==0&&!a,this.outputComponent=this.isVec4?4:1,this.isVectorA=1===t[1]&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let e=tL(t[1],l,t[2],n);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let u=null!=r,d=null!=s;u&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=o,this.transposeA=n,this.transposeB=a,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=d,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],l),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${n}_${a}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,n){let a=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];return!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=r,[e%a==0,t%r==0,n%this.tileInner==0]}getUserCode(){return`\n      ${BW(this.activation,this.hasPreluActivationWeights,this.isVec4)}\n      ${GW(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}\n      ${this.isVec4?HW(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?function(e,t=!1){wr.assert(1===e[1]&&1===e[2],(()=>`A linear work group size is required. But got ${e}.`));let n=4*e[0];return`\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    ${Bz()} {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ${n} + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(${(e=>e?"\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ":"\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  ")(t)});\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${n/4}; k++) {\n          let rowB = t * ${n} + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  `}(this.workgroupSize,this.transposeA):qW(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}\n    `}},KW=class{constructor(e,t=!1,n=!1,a=null,r=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize);let s=null!=a,o=null!=i;s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=s,this.activation=r,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){return`\n      ${BW(this.activation,this.hasPreluActivationWeights)}\n      ${GW(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${function(e){return`\n    var<workgroup> sumValues : array<f32, ${e}>;\n    ${Bz()} {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ${e}) {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ${e/2}u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  `}(this.workgroupSize[0])}\n    `}},ZW=class{constructor(e,t,n,a=!1,r=!1,i=null,s=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];let l=null!=i;l&&this.variableNames.push("bias");let u=null!=o;u&&this.variableNames.push("preluActivationWeights"),this.transposeA=a,this.transposeB=r,this.addBias=l,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${a}_${r}`}getUserCode(){return`\n      ${BW(this.activation,this.hasPreluActivationWeights)}\n      ${GW(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${function(e){let t=e[1],n=e[0],a=t>n?t:n;return`\n  var<workgroup> mm_Asub : array<array<f32, ${a}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${a}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ${Bz()} {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${a} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ${a};\n    globalRowB = globalRowB + ${a};\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ${a};\n      globalRowB = globalRowB + ${a};\n\n      for (var k = 0; k < ${a}; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  `}(this.workgroupSize)}\n    `}},YW=class{constructor(e,t,n=!1,a=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,wr.assert(1===e[0],(()=>"MatMulSplitKProgram only supports batch = 1.")),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let r=(n&&this.outputShape[1]%4==0||!n&&t%4==0)&&this.outputShape[2]%4==0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=eL(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=a,this.shaderKey=`matMulSplitK_${n}_${a}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let e=this.outputComponent;return`\n      ${UW(!1,this.transposeB,!1,!1,!1,e)}\n      fn mm_write(batch: i32, row : i32, colIn : i32, value : ${zz(e)}) {\n        let col = colIn * ${e};\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ${e}; i = i + 1) {\n            ${Dz("&result[flatIndex + i]",e>1?"value[i]":"value","float32")}\n          }\n        }\n      }\n      ${4===e?HW(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):qW(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}\n    `}},JW=class{constructor(e,t=null,n=null,a=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=a,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`\n    ${BW(this.activation,this.hasPreluActivationWeights)}\n    ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ${VW(this.addBias,this.activation)}\n        setOutputAtIndex(index, value);\n      }\n    }\n    `}},QW=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`\n    ${Bz("index")} {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  `}};function eB(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:i}=n;if(i=i||wr.inferDtype(r),"string"===i){let e=wr.getArrayFromDType(i,wr.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,i,e)}{let e=new QW(a),n=[{type:"float32",data:[r]}];return t.runWebGPUProgram(e,[],i,n)}}var tB={kernelName:Yt,backendName:"webgpu",kernelFunc:eB};function nB(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,i=wr.sizeFromShape(a.shape),s=wr.inferFromImplicitShape(r,i),o=wr.sizeFromShape(s);return wr.assert(i===o,(()=>`The new shape (${s}) has ${o} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:s,dtype:a.dtype}}var aB={kernelName:la,backendName:"webgpu",kernelFunc:nB};function rB({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],c=a?t.shape[d-1]:t.shape[d-2],h=n?e.shape[u-1]:e.shape[u-2],f=a?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),y=t.shape.slice(0,-2),g=wr.sizeFromShape(m),A=wr.sizeFromShape(y),x=Ml.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);wr.assert(p===c,(()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));let b,v,w=n?[g,p,h]:[g,h,p],k=a?[A,f,c]:[A,c,f],I=nB({inputs:{x:e},backend:r,attrs:{shape:w}}),S=nB({inputs:{x:t},backend:r,attrs:{shape:k}}),C=[I,S],N=Math.max(g,A),T=[I,S],R=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[p]}],E=[N,h,f],$=Le().get("WEBGPU_MATMUL_PROGRAM_TYPE");if($<0){let e=Le().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:r.thresholdToIncreaseWorkgroups,n=N*Math.ceil(h/32)*Math.ceil(f/32);$=n<=t||h<=8&&n<=2*t?N*h*f<=128?Yz.MatMulReduceProgram:1===N&&c>=2e3?Yz.MatMulSplitKProgram:Yz.MatMulSmallOutputSizeProgram:Yz.MatMulPackedProgram}switch($){case Yz.MatMulReduceProgram:b=new KW(E,n,a,i,l,s);break;case Yz.MatMulSplitKProgram:if(v=eB({backend:r,attrs:{shape:E,value:0,dtype:e.dtype}}),b=new YW(E,c,n,a),i||l){v=r.runWebGPUProgram(b,T,e.dtype,R,v);let t=new JW(v.shape,i,l,s),n=null,a=[v];i&&a.push(i),s&&a.push(s),"leakyrelu"===l&&(n=[{type:"float32",data:[o]}],t.uniforms+=" alpha : f32,");let u=r.runWebGPUProgram(t,a,v.dtype,n);C.push(v);let d=nB({inputs:{x:u},backend:r,attrs:{shape:x}});C.push(u);for(let e of C)r.disposeData(e.dataId);return d}break;case Yz.MatMulSmallOutputSizeProgram:b=new ZW(w,k,E,n,a,i,l,s);break;case Yz.MatMulPackedProgram:let t=r.adapterInfo.isIntel();b=new XW(w,E,n,a,i,l,s,t);break;default:throw new Error(`Unsupported MatMulProgramType ${$}.`)}i&&T.push(i),s&&T.push(s),"leakyrelu"===l&&(R.push({type:"float32",data:[o]}),b.uniforms+=" alpha : f32,"),v=r.runWebGPUProgram(b,T,e.dtype,R,v);let M=nB({inputs:{x:v},backend:r,attrs:{shape:x}});C.push(v);for(let e of C)r.disposeData(e.dataId);return M}var iB={kernelName:sr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=a;return rB({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}},sB=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Pf.assertAndGetBroadcastShape(t,n),this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${XL(this.op,!1)}\n      }\n\n      ${Bz("index")} {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}},oB=class{constructor(e,t,n){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Pf.assertAndGetBroadcastShape(t,n),this.dispatchLayout=rL(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let a=t.length>0&&t[t.length-1]%4==0,r=n.length>0&&n[n.length-1]%4==0;a&&r?(this.outputComponent=4,this.variableComponents=[4,4]):a&&(wr.isScalarShape(n)||1===n[n.length-1])||r&&(wr.isScalarShape(t)||1===t[t.length-1])?(this.outputComponent=4,this.variableComponents=a?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e,t=4===this.outputComponent?"vec4<f32>":"f32",n=`\n    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {\n      ${XL(this.op,4===this.outputComponent)}\n    };\n    `;if("shared"===this.type){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",a=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);\n          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];\n          let b = getBByOutputIndex(index);`;e=`\n        ${n}\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        ${Bz("index")} {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ${this.lastDimensionSize}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ${a}\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        `}else e=`\n       ${n}\n       ${Bz("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index * ${this.outputComponent});\n           let a = ${t}(getAByOutputCoords(coords));\n           let b = ${t}(getBByOutputCoords(coords));\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       `;return e}};function lB(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var uB={kernelName:on,backendName:"webgpu",kernelFunc:lB};function dB(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,i=n.makeTensorInfo(a.shape,"complex64"),s=n.tensorMap.get(i.dataId),o=lB({inputs:{x:a},backend:n}),l=lB({inputs:{x:r},backend:n});return s.complexTensorInfos={real:o,imag:l},i}var pB={kernelName:gt,backendName:"webgpu",kernelFunc:dB},cB=class{constructor(e,t,n=""){this.variableNames=["A"],this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==n&&(this.uniforms=n),this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${WW(this.op,!1)}\n      }\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}};function hB({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:a,backend:r})=>{let{x:i}=a,s=r,o=n||i.dtype;if(s.shouldExecuteOnCPU([i])&&null!=t){let e=s.tensorMap.get(i.dataId),n=t(e.values,o);return s.makeTensorInfo(i.shape,o,n)}let l=new cB(i.shape,e);return s.runWebGPUProgram(l,[i],o)}}function fB({opType:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:a}){return({inputs:r,backend:i})=>{let{a:s,b:o}=r,l=i;if(n&&"complex64"===s.dtype){let t,n,a=l.tensorMap.get(s.dataId),r=l.tensorMap.get(o.dataId);if(e!==lL.MUL)[t,n]=[[a.complexTensorInfos.real,r.complexTensorInfos.real],[a.complexTensorInfos.imag,r.complexTensorInfos.imag]].map((t=>{let[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:s.shape},i={dataId:a.dataId,dtype:a.dtype,shape:o.shape},u=new oB(e,s.shape,o.shape);return l.runWebGPUProgram(u,[r,i],fi(n.dtype,a.dtype))}));else{let e=new sB(lL.COMPLEX_MULTIPLY_REAL,s.shape,o.shape),i=new sB(lL.COMPLEX_MULTIPLY_IMAG,s.shape,o.shape),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o.shape},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o.shape}];t=l.runWebGPUProgram(e,u,"float32"),n=l.runWebGPUProgram(i,u,"float32")}let i=dB({inputs:{real:t,imag:n},backend:l});return l.disposeData(t.dataId),l.disposeData(n.dataId),i}let u=a||fi(s.dtype,o.dtype);if(("string"===s.dtype||"string"===o.dtype||l.shouldExecuteOnCPU([s,o]))&&null!=t){let e=l.tensorMap.get(s.dataId).values,n=l.tensorMap.get(o.dataId).values,a="string"===s.dtype?Pf.fromUint8ToStringArray(e):e,r="string"===s.dtype?Pf.fromUint8ToStringArray(n):n,[i,d]=t(s.shape,o.shape,a,r,u);return l.makeTensorInfo(d,u,i)}let d=new oB(e,s.shape,o.shape);return l.runWebGPUProgram(d,[s,o],u)}}var{addImpl:mB,castImpl:yB,ceilImpl:gB,concatImpl:AB,equalImpl:xB,expImpl:bB,expm1Impl:vB,floorImpl:wB,floorDivImpl:kB,gatherNdImpl:IB,gatherV2Impl:SB,greaterEqualImpl:CB,greaterImpl:NB,lessEqualImpl:TB,lessImpl:RB,logImpl:EB,maxImpl:$B,maximumImpl:MB,minimumImpl:FB,multiplyImpl:_B,negImpl:PB,notEqualImpl:OB,prodImpl:DB,rangeImpl:zB,rsqrtImpl:LB,scatterImpl:WB,simpleAbsImpl:BB,sliceImpl:VB,stridedSliceImpl:UB,stringNGramsImpl:GB,subImpl:HB,tileImpl:jB,topKImpl:qB,transposeImpl:XB,uniqueImpl:KB}=$g,ZB=hB({opType:pL.ABS,cpuKernelImpl:BB}),YB={kernelName:Ge,backendName:"webgpu",kernelFunc:ZB},JB=hB({opType:pL.ACOS}),QB={kernelName:He,backendName:"webgpu",kernelFunc:JB},eV=hB({opType:pL.ACOSH}),tV={kernelName:je,backendName:"webgpu",kernelFunc:eV},nV=fB({opType:lL.ADD,cpuKernelImpl:mB,supportsComplex:!0}),aV={kernelName:qe,backendName:"webgpu",kernelFunc:nV},rV={kernelName:Xe,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,a=t;if(1===a.length)return lB({inputs:{x:a[0]},backend:n});let r=a.map((e=>e.dtype)).reduce(((e,t)=>fi(e,t))),i=a.map((e=>e.shape)),s=new class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));let t=this.variableNames.map((e=>`v${e}`)).join(" + ");return`\n      ${Bz("index")} {\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}}(i);return n.runWebGPUProgram(s,a,r)}},iV=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){wr.assert(this.workgroupSize[0]===this.workgroupSize[1],(()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`));let e=this.workgroupSize[0];return`\n      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;\n      ${Bz()} {\n        var x = i32(workgroupId.x) * ${e} + i32(localId.x);\n        var y = i32(workgroupId.y) * ${e} + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ${e} + i32(localId.x);\n        y = i32(workgroupId.x) * ${e} + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}},sV=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Lz(this.outputShape.length),t=oV(this.newDim);return`\n      ${Bz("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}};function oV(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let t=0;t<e.length;t++)n[e[t]]=`coords.${Wz(t)}`;return n.join()}function lV(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:i}=a,s=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[i[e]];if(n.shouldExecuteOnCPU([r])){let e=s.tensorMap.get(r.dataId).values,t=XB(e,r.shape,r.dtype,i,l);return n.makeTensorInfo(l,r.dtype,t)}if(2===r.shape.length&&wr.arraysEqual(i,[1,0])){let e=new iV(r.shape,i);return s.runWebGPUProgram(e,[r],r.dtype)}let u=new sV(r.shape,i);return s.runWebGPUProgram(u,[r],r.dtype)}var uV={kernelName:Ya,backendName:"webgpu",kernelFunc:lV},dV=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[a]=Pf.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===a.length?[1]:a,e.inSize>=32768&&n>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0",n=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");let a="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       \n         var<workgroup> xBestValues : array<f32, ${n}>;\n       \n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       ${Bz("index")} {\n         let outputIndex = index / ${n};\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ${n}u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ${n}) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ${n}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${a}\n        }\n       }\n     `}};function pV(e,t,n,a,r){let i=e.shape.length,s=[],o=wr.parseAxisParam(t,e.shape),l=o,u=Pf.getAxesPermutation(l,i),d=e;null!=u&&(d=lV({inputs:{x:e},attrs:{perm:u},backend:r}),l=Pf.getInnerMostAxes(l.length,i),s.push(d)),Pf.assertAxesAreInnerMostDims(a,l,i);let p,[c,h]=Pf.computeOutAndReduceShapes(d.shape,l),f=c;if(n&&(f=Pf.expandShapeToKeepDim(c,o)),"max"!==a&&"prod"!==a||!r.shouldExecuteOnCPU([d])){let t=wr.sizeFromShape(h),n={windowSize:t,inSize:t,batchSize:wr.sizeFromShape(d.shape)/t,outSize:1},i="mean"===a?"float32":mi(e.dtype),o=[{type:"int32",data:[t]}],l=new dV(n,a,r.device.limits.maxComputeWorkgroupSizeX),u=r.runWebGPUProgram(l,[d],i,o);s.push(u),p=nB({inputs:{x:u},attrs:{shape:f},backend:r})}else{let t=r.tensorMap.get(d.dataId).values;switch(a){case"max":let n=$B(t,wr.sizeFromShape(h),f,e.dtype);p=r.makeTensorInfo(f,e.dtype,n);break;case"prod":let{outVals:i,outShape:s,outDtype:o}=DB(d.shape,d.dtype,t,l);p=r.makeTensorInfo(s,o,i);break;default:throw new Error(`${a} CPU implementation is not yet supported.`)}}return s.forEach((e=>r.disposeData(e.dataId))),p}var cV={kernelName:Ke,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:i,axis:s}=a;return pV(r,s,i,"all",n)}},hV={kernelName:Ze,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:i,axis:s}=a;return pV(r,s,i,"any",n)}},fV=class{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let a=[t];this.op="min"===n?"<":">";let[r,i]=Pf.computeOutAndReduceShapes(e,a);this.outputShape=0===r.length?[1]:r,this.dispatchLayout=rL(this.outputShape),wr.sizeFromShape(i)<32||wr.sizeFromShape(r)>1e3?(this.type="plain",this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=eL(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape.${Wz(this.inputShape.length-1)}`,n=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+=`outputCoords.${Wz(t)},`;return e};return"shared"===this.type?`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      \n      var<workgroup> xBestIndices : array<i32, ${e}>;\n      var<workgroup> xBestValues : array<f32, ${e}>;\n    \n\n      ${Bz("index")} {\n        let outputIndex = index / ${e};\n        let reduceLength = ${t()};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ${e}) {\n          let candidate = getX(${n()} k);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ${e}u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `:`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(${n()} 0);\n          let reduceLength = ${t()};\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(${n()} i);\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      `}},mV={kernelName:Ye,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=wr.parseAxisParam(i,r.shape),o=Pf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=lV({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Pf.getInnerMostAxes(s.length,l.shape.length)),Pf.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let d=new fV(l.shape,s[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=n.runWebGPUProgram(d,[l],"int32",p);return u.forEach((e=>n.disposeData(e.dataId))),c}},yV={kernelName:Je,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=wr.parseAxisParam(i,r.shape),o=Pf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=lV({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Pf.getInnerMostAxes(s.length,l.shape.length)),Pf.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let d=new fV(l.shape,s[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=n.runWebGPUProgram(d,[l],"int32",p);return u.forEach((e=>n.disposeData(e.dataId))),c}},gV=hB({opType:pL.ASIN}),AV={kernelName:Qe,backendName:"webgpu",kernelFunc:gV},xV=hB({opType:pL.ASINH}),bV={kernelName:et,backendName:"webgpu",kernelFunc:xV},vV=hB({opType:pL.ATAN}),wV={kernelName:tt,backendName:"webgpu",kernelFunc:vV},kV=fB({opType:lL.ATAN2}),IV={kernelName:at,backendName:"webgpu",kernelFunc:kV},SV=hB({opType:pL.ATANH}),CV={kernelName:nt,backendName:"webgpu",kernelFunc:SV},NV=class{constructor(e,t,n=!1,a=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool2D_${t}_${n}_${a}_${r}`}getUserCode(){let e;e="avg"===this.poolType?"resultValue = resultValue + value; count = count + 1.0;":this.computePositions?`let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};\n      }`:"resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`\n      ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          ${this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}\n\n          var count = 0.0;\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, d);\n              ${e}\n            }\n          }\n\n          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}\n        }\n      }\n    `}},TV=class{constructor(e,t,n=!1,a=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool3D_${t}_${n}_${a}_${r}`}getUserCode(){let e;e="avg"===this.poolType?"resultValue += value; count += 1.0;":this.computePositions?`let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};\n      }`:"resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords.x;\n          let ch = coords.u;\n\n          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n          let xDCorner = xCorner.x;\n          let xRCorner = xCorner.y;\n          let xCCorner = xCorner.z;\n\n          ${this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}\n\n          var count = 0.0;\n          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {\n            let xD = xDCorner + wD;\n            if (xD < 0 || xD >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {\n              let xR = xRCorner + wR;\n              if (xR < 0 || xR >= uniforms.convDims.y) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {\n                let xC = xCCorner + wC;\n                if (xC < 0 || xC >= uniforms.convDims.z) {\n                  continue;\n                }\n\n                let value = getX(batch, xD, xR, xC, ch);\n                ${e}\n              }\n            }\n          }\n\n          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}\n        }\n      }\n    `}};function RV(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:i,keepDims:s}=a;return pV(r,i,s,"max",n)}var EV={kernelName:Tn,backendName:"webgpu",kernelFunc:RV};function $V(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:i,axis:s}=a;return pV(r,s,i,"mean",n)}var MV={kernelName:Pn,backendName:"webgpu",kernelFunc:$V};function FV(e,t,n,a){if(1===t.filterWidth&&1===t.filterHeight&&wr.arraysEqual(t.inShape,t.outShape))return lB({inputs:{x:e},backend:a});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){let r,i=e.shape.length,s=nB({inputs:{x:e},backend:a,attrs:{shape:[e.shape[i-3]*e.shape[i-2],e.shape[i-1]]}});"avg"===n?r=$V({inputs:{x:s},backend:a,attrs:{axis:0,keepDims:!1}}):(wr.assert("max"===n,(()=>`Invalid pool type ${n}`)),r=RV({inputs:{x:s},backend:a,attrs:{reductionIndices:0,keepDims:!1}}));let o=nB({inputs:{x:r},backend:a,attrs:{shape:t.outShape}});return a.disposeData(s.dataId),a.disposeData(r.dataId),o}let r,i=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?r=new class{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.strides;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}}(t):("avg"===n?r=new NV(t,"avg"):(wr.assert("max"===n,(()=>`Invalid pool type ${n}`)),r=new NV(t,"max")),i.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),a.runWebGPUProgram(r,[e],e.dtype,i)}var _V={kernelName:rt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;return FV(r,Pf.computePool2DInfo(r.shape,i,s,1,o,l),"avg",n)}},PV={kernelName:st,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dataFormat:l,dimRoundingMode:u}=a,d=Pf.computePool3DInfo(r.shape,i,s,[1,1,1],o,u,l),p=new TV(d,"avg"),c=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(p,[r],r.dtype,c)}},OV={kernelName:ot,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=Pf.computePool3DInfo(s.shape,o,l,1,u,d),c=new class{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`\n      ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              dotProd += dyValue * uniforms.avgMultiplier;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}(p),h=1/(p.filterDepth*p.filterHeight*p.filterWidth),f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[h]}];return n.runWebGPUProgram(c,[r],s.dtype,f)}},DV={kernelName:it,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i;oL([r,i],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,d=Pf.computePool2DInfo(s.shape,o,l,1,u),p=new class{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`\n      ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}(d),c=1/(d.filterHeight*d.filterWidth),h=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[c]}];return n.runWebGPUProgram(p,[r],s.dtype,h)}},zV={kernelName:lt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;return rB({a:r,b:i,transposeA:s,transposeB:o,backend:n})}},LV=["x","y","z","w","u","v"];function WV(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,size:s}=a,[o,l]=uf.parseSliceParams(r,i,s);if(uf.assertParamsValid(r,o,l),n.shouldExecuteOnCPU([r])||"string"===r.dtype){let e=n.tensorMap.get(r.dataId),t=VB(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}if(0===wr.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);let u=new class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Lz(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e,t=Lz(this.rank),n=function(e){if(1===e)return"sourceLoc";if(e<=6)return LV.slice(0,e).map((e=>`sourceLoc.${e}`)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);return e=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${LV[t]} = uniforms.start.${Wz(t)} + coords.${LV[t]};`)),`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          var sourceLoc : ${t};\n          let coords = getCoordsFromIndex(index);\n          ${e.join("\n")}\n          setOutputAtIndex(index, getSource(${n}));\n        }\n      }\n    `}}(o,l),d=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[r],r.dtype,d)}var BV={kernelName:wa,backendName:"webgpu",kernelFunc:WV},VV={kernelName:ut,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a;wr.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));let o=i.reduce(((e,t)=>e*t)),l=Pf.getReshaped(r.shape,i,o),u=Pf.getPermuted(l.length,i.length),d=Pf.getReshapedPermuted(r.shape,i,o),p=Pf.getSliceBeginCoords(s,i.length),c=Pf.getSliceSize(d,s,i.length),h=[],f=nB({inputs:{x:r},backend:n,attrs:{shape:l}}),m=lV({inputs:{x:f},backend:n,attrs:{perm:u}}),y=nB({inputs:{x:m},backend:n,attrs:{shape:d}}),g=WV({inputs:{x:y},backend:n,attrs:{begin:p,size:c}});return h.push(f),h.push(m),h.push(y),h.forEach((e=>n.disposeData(e.dataId))),g}},UV=`\n  fn bincount_write(index: i32, value: f32) {\n    ${Dz("&result[index]","value","float32")}\n  }\n`,GV=class{constructor(e,t,n=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`\n    ${this.binaryOutput?"\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n":UV}\n  ${Bz("index")} {\n    ${1===this.rank?`if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};\n        bincount_write(indexVal, value);\n      }\n    }`:`let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }`}\n  }\n  `}},HV={kernelName:dt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s}=a,o=wr.sizeFromShape(r.shape),l=wr.sizeFromShape(i.shape)>0,u=[s],d=i.dtype,p=eB({backend:n,attrs:{shape:u,value:0,dtype:d}}),c=new GV([o],l),h=[{type:"int32",data:[s]}],f=l?[r,i]:[r];return n.runWebGPUProgram(c,f,d,h,p)}},jV={kernelName:ht,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t;if(n.shouldExecuteOnCPU([a,r])){let e=n.tensorMap.get(a.dataId),t=n.tensorMap.get(r.dataId),i=e.values,s=t.values,o=Pf.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}let i=wr.sizeFromShape(a.shape),s=wr.sizeFromShape(r.shape),o=Math.max(i,s),l=new class{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`\n  ${Bz("index")} {\n    if (index < uniforms.size) {\n      var s0 = 1.0;\n      var s1 = 1.0;\n      let indexS0 = index - uniforms.size + uniforms.s0Size;\n      let indexS1 = index - uniforms.size + uniforms.s1Size;\n      if (indexS0 >= 0) {\n        s0 = getS0(indexS0);\n      }\n      if (indexS1 >= 0) {\n        s1 = getS1(indexS1);\n      }\n\n      if (s0 == 1.0) {\n        setOutputAtIndex(index, s1);\n      } else if (s1 == 1.0) {\n        setOutputAtIndex(index, s0);\n      } else if (s0 != s1) {\n        setOutputAtIndex(index, uniforms.NAN);\n      } else {\n        setOutputAtIndex(index, s0);\n      }\n    }\n  }\n  `}}(o),u=[{type:"int32",data:[i]},{type:"int32",data:[s]}];return n.runWebGPUProgram(l,[a,r],"int32",u)}},qV=fB({opType:lL.NOT_EQUAL,dtype:"bool",cpuKernelImpl:OB}),XV={kernelName:Un,backendName:"webgpu",kernelFunc:qV};function KV(e){let{inputs:t,backend:n}=e,{input:a}=t;return lB({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.real},backend:n})}var ZV={kernelName:ia,backendName:"webgpu",kernelFunc:KV},YV={kernelName:ft,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:a,attrs:r}=t,{x:i}=n,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return lB({inputs:{x:i},backend:a});let t=ed(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),r=dB({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeData(n.dataId),r}if("complex64"===i.dtype){let t=KV({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeData(t.dataId),n}if(!wr.hasEncodingLoss(i.dtype,s)){let e=lB({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(a.shouldExecuteOnCPU([i])){let e=a.tensorMap.get(i.dataId).values,[t,n,r]=yB(e,i.shape,i.dtype,s);return a.makeTensorInfo(t,n,r)}if("int32"===s)return function(e,t){let n=new cB(e.shape,pL.TO_INT),a=t.runWebGPUProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(i,a);if("bool"===s){let e=a.makeTensorInfo([],"bool",wr.getTypedArrayFromDType("bool",1)),t=qV({inputs:{a:i,b:e},backend:a});return a.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},JV=hB({opType:pL.CEIL,cpuKernelImpl:gB}),QV={kernelName:mt,backendName:"webgpu",kernelFunc:JV},eU={kernelName:yt,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{clipValueMin:s,clipValueMax:o}=r,l=[{type:"float32",data:[s]},{type:"float32",data:[o]}];return t=wr.sizeFromShape(i.shape)%4==0?new class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`\n      ${Bz("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    `}}(i.shape):new class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`\n      ${Bz("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    `}}(i.shape),a.runWebGPUProgram(t,[i],i.dtype,l)}};function tU(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var nU={kernelName:At,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.tensorMap.get(a.dataId),i=new class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`\n    ${Bz("index")} {\n      if (index < uniforms.size) {\n        let re = abs(getRealByOutputIndex(index));\n        let im = abs(getImagByOutputIndex(index));\n        let mx = max(re, im);\n\n        // The length function in wgsl may be not underflow-safe on some GPUs.\n        // So the safe solution is to ensure underflow-safety in all cases.\n        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));\n      }\n    }\n  `}}(a.shape),s=[tU(a,r.complexTensorInfos.real),tU(a,r.complexTensorInfos.imag)];return n.runWebGPUProgram(i,s,s[0].dtype)}},aU=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Pf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);let t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      ${Bz("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}};function rU(e){let{inputs:t,backend:n}=e,{input:a}=t;return lB({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.imag},backend:n})}var iU={kernelName:un,backendName:"webgpu",kernelFunc:rU};function sU(e,t,n){let a=e[0].dtype;if("complex64"===a){let a=e.map((e=>KV({inputs:{input:e},backend:n}))),r=e.map((e=>rU({inputs:{input:e},backend:n}))),i=sU(a,t,n),s=sU(r,t,n),o=dB({inputs:{real:i,imag:s},backend:n});return a.forEach((e=>n.disposeData(e.dataId))),r.forEach((e=>n.disposeData(e.dataId))),n.disposeData(i.dataId),n.disposeData(s.dataId),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){let r=e.map((e=>{let a=[-1,wr.sizeFromShape(e.shape.slice(t))];return nB({inputs:{x:e},backend:n,attrs:{shape:a}})})),i=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=Pf.computeOutShape(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=AB(i,s,a,o),u=Pf.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeData(e.dataId))),d}let i=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>i){let a=[];for(let r=0;r<e.length;r+=i){let s=e.slice(r,r+i);a.push(sU(s,t,n))}let r=sU(a,t,n);for(let e of a)n.disposeData(e.dataId);return r}let{tensors2D:s,outShape:o}=function(e,t,n){let a=Pf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>nB({inputs:{x:e},backend:n,attrs:{shape:[wr.sizeFromShape(e.shape.slice(0,t)),wr.sizeFromShape(e.shape.slice(t))]}}))),outShape:a}}(e,t,n),l=s.map((e=>e.shape)),u=new aU(l),d=[],p=new Array(l.length-1);if(p.length>0){p[0]=l[0][1],d.push({type:"int32",data:[p[0]]});for(let e=1;e<p.length;e++)p[e]=p[e-1]+l[e][1],d.push({type:"int32",data:[p[e]]})}let c=n.runWebGPUProgram(u,s,s[0].dtype,d);s.forEach((e=>n.disposeData(e.dataId)));let h=nB({inputs:{x:c},backend:n,attrs:{shape:o}});return n.disposeData(c.dataId),h}function oU(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,i=wr.parseAxisParam(r,t[0].shape)[0],s=t.map((e=>e.shape));Pf.assertParamsConsistent(s,i);let o=Pf.computeOutShape(t.map((e=>e.shape)),i);if(0===wr.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>wr.sizeFromShape(e.shape)>0));return 1===l.length?lB({inputs:{x:l[0]},backend:n}):sU(l,i,n)}var lU={kernelName:xt,backendName:"webgpu",kernelFunc:oU};function uU(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function dU({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let l=null!=r,u=null!=i,d="channelsLast"===n.dataFormat,p=d&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type,c=Le().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!c&&(p||1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type)))return function({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let l,u,d="channelsLast"===n.dataFormat,p=!d,c=[];if(d&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type){let r=n.inHeight*n.inWidth*n.inChannels;l=nB({inputs:{x:e},backend:a,attrs:{shape:[1,n.batchSize,r]}}),u=nB({inputs:{x:t},backend:a,attrs:{shape:[1,r,n.outChannels]}})}else l=nB({inputs:{x:e},backend:a,attrs:{shape:d?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),u=nB({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(c.push(l),c.push(u),null!=i){let e=uU(i.shape,d);null!=e&&(i=nB({inputs:{x:i},backend:a,attrs:{shape:e}}),c.push(i))}if(null!=r){let e=uU(r.shape,d);null!=e&&(r=nB({inputs:{x:r},backend:a,attrs:{shape:e}}),c.push(r))}let h=rB({a:d?l:u,b:d?u:l,transposeA:p,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),f=nB({inputs:{x:h},backend:a,attrs:{shape:n.outShape}});c.push(h);for(let e of c)a.disposeData(e.dataId);return f}({x:e,filter:t,convInfo:n,backend:a,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:s});let h=Le().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=h>0?h:a.thresholdToIncreaseWorkgroups,m=n.batchSize*Math.ceil(n.outHeight*n.outWidth/32)*Math.ceil(n.outChannels/32);if(Le().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return function({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,strideWidth:p,strideHeight:c,padInfo:h,outWidth:f,outHeight:m,dilationWidth:y,dilationHeight:g,dataFormat:A}=n,x="channelsLast"===A,b=l*u*d,v=m*f,w=x?[n.batchSize,v,b]:[n.batchSize,b,v],k=new class{constructor(e,t){this.variableNames=["x"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",a=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`\n    ${Bz("index")} {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ${n};\n        let col = ${a};\n        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];\n        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -\n              uniforms.pads[1];\n          let xCol = offsetX + uniforms.dilations[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {\n            value = ${r};\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   `}}(w,x),I=[{type:"int32",data:[h.top,h.left]},{type:"int32",data:[c,p]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[d*l]},{type:"int32",data:[d]}],S=a.runWebGPUProgram(k,[e],e.dtype,I),C=[];C.push(S);let N=nB({inputs:{x:t},backend:a,attrs:{shape:[1,b,-1]}});if(C.push(N),null!=i){let e=uU(i.shape,x);null!=e&&(i=nB({inputs:{x:i},backend:a,attrs:{shape:e}}),C.push(i))}if(null!=r){let e=uU(r.shape,x);null!=e&&(r=nB({inputs:{x:r},backend:a,attrs:{shape:e}}),C.push(r))}let T=rB({a:x?S:N,b:x?N:S,transposeA:!x,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),R=nB({inputs:{x:T},backend:a,attrs:{shape:n.outShape}});C.push(T);for(let e of C)a.disposeData(e.dataId);return R}({x:e,filter:t,convInfo:n,backend:a,bias:r,preluActivationWeights:i,leakyreluAlpha:s,activation:o});let y,g=[n.padInfo.top,n.padInfo.left],A=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...g]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(c)y=new class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`\n       ${BW(this.activation,this.hasPreluActivationWeights,!1,4)}\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ${VW(this.addBias,this.activation)}\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ${Bz("index")} {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}\n         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}\n         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];\n             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];\n             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {\n               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     `}}(n,l,o,u);else{let e=d?n.outHeight*n.outWidth:n.outChannels,t=d?n.outChannels:n.outHeight*n.outWidth,r=n.filterHeight*n.filterWidth*n.inChannels;A.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[r]});let i=a.adapterInfo.isIntel();y=new class{constructor(e,t,n,a,r=!1,i=null,s=!1,o=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4==0||e.inChannels%3==0)&&this.isChannelsLast||e.outWidth%4==0&&!this.isChannelsLast)&&e.outChannels%4==0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=nL(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=aL(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!=0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),s&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=o,this.addBias=r,this.activation=i,this.hasPreluActivationWeights=s,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter==0,this.fitBOuter=n%this.tileBOuter==0,this.fitInner=a%this.tileInner==0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let e=this.isVec4?HW(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):qW(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`\n    ${function(e,t,n,a,r=!1,i=null,s=!1,o=4,l=4,u=4){let d=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",p=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",c=e?"uniforms.xShape[1]":"uniforms.xShape[2]",h=e?"uniforms.xShape[2]":"uniforms.xShape[3]",f=e?"row":"col",m=e?"col":"row",y=`\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n      let outRow = ${f} / outWidth;\n      let outCol = ${f} % outWidth;\n\n      let WRow = ${m} / (uniforms.filterDims[1] * inChannels);\n      let WCol = ${m} / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];\n      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];\n      let xCh = ${m} % inChannels;\n      var resData = ${zz(o)}(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ${c} && xCol >= 0 && xCol < ${h}) {\n        ${d}\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}\n      }\n      return resData;`,g=e?t&&a?`\n      let col = colIn * ${o};\n      ${y}`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${y}\n      }\n      return ${zz(o)}(0.0);`:a&&n?`\n      let col = colIn * ${o};\n      ${y}`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${y}\n      }\n      return ${zz(o)}(0.0);`,A=`${(e=>{switch(e){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,x=zz(u),b=zz(e?o:l),v=zz(e?l:o);return`\n      ${BW(i,s,4===u,4)}\n      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${b} {\n        ${e?g:A}\n      }\n\n      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${v} {\n        ${e?A:g}\n      }\n\n      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${x}) {\n        let col = colIn * ${u};\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n        ${p}\n        ${VW(r,i)}\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }`}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}\n    ${e}\n  `}}(n,e,t,r,l,o,u,i)}let x=[],b=[e,t];l&&(!d&&1===r.shape.length&&(r=nB({inputs:{x:r},backend:a,attrs:{shape:[r.shape[0],1,1]}}),x.push(r)),b.push(r)),u&&(!d&&1===i.shape.length&&(i=nB({inputs:{x:i},backend:a,attrs:{shape:[i.shape[0],1,1]}}),x.push(i)),b.push(i)),"leakyrelu"===o&&(A.push({type:"float32",data:[s]}),y.uniforms+=" alpha : f32,");let v=a.runWebGPUProgram(y,b,e.dtype,A);for(let e of x)a.disposeData(e.dataId);return v}var pU,cU={kernelName:bt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=n,p=Pf.convertConv2DDataFormat(l);return dU({x:r,filter:i,convInfo:Pf.computeConv2DInfo(r.shape,i.shape,s,u,o,d,!1,p),backend:a})}},hU={kernelName:vt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,p=Pf.convertConv2DDataFormat(l),c=Pf.computeConv2DInfo(r.shape,d,s,1,o,u,!1,p),h=new class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`\n    ${Bz("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (${this.isChannelsLast}) {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}(c),f=[{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"int32",data:[c.inHeight]},{type:"int32",data:[c.inWidth]}];return n.runWebGPUProgram(h,[r,i],r.dtype,f)}},fU={kernelName:wt,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{dy:i,filter:s}=n,{inputShape:o,strides:l,pad:u,dataFormat:d,dimRoundingMode:p}=r,c=Pf.convertConv2DDataFormat(d),h=Pf.computeConv2DInfo(o,s.shape,l,1,u,p,!1,c),f=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}];if(Le().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||"channelsLast"!==h.dataFormat)t=new class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=this.isChannelsLast&&e.outChannels%4==0&&e.inChannels%4==0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,a=`\n    ${Bz()} {\n      let batch = i32(globalId.z) / uniforms.outShape[1];\n      let r = i32(globalId.z) % uniforms.outShape[1];\n      let c = i32(globalId.y) * ${this.workPerThread};\n      let d1 = i32(globalId.x) * 4;\n\n      let dyCorner = vec2<i32>(r, c) - uniforms.pads;\n\n      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n      // ? = to be determined. : = across all values in that axis.\n      var dotProd: array<vec4<f32>, ${this.workPerThread}>;\n      for (var i = 0; i < ${this.workPerThread}; i++) {\n        dotProd[i] = vec4<f32>(0.0);\n      }\n      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);\n        let wRPerm = uniforms.filterDims.x - 1 - wR;\n        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||\n            fract(dyR) > 0.0) {\n          continue;\n        }\n        let idyR = i32(dyR);\n\n        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);\n          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);\n          let wCPerm = uniforms.filterDims.y - 1 - wC;\n          var bDyCVal = true;\n          var bDyCVal2 = true;\n          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC) > 0.0) {\n            bDyCVal = false;\n          }\n          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC2) > 0.0) {\n            bDyCVal2 = false;\n          }\n\n          let idyC = i32(dyC);\n          let idyC2 = i32(dyC2);\n          if (bDyCVal && bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n              xValue = getDy(batch, idyR, idyC2, d2);\n              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\n                                                  dot(xValue, wValue1),\n                                                  dot(xValue, wValue2),\n                                                  dot(xValue, wValue3));\n            }\n          } else if (bDyCVal) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n            }\n          } else if (bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC2, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[1] = dotProd[1] + tmpval;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n        let coords = vec4<i32>(batch, r, c + i, d1);\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n        }\n      }\n    }\n    `;return this.isVec4?`\n    ${a}\n    `:`\n    ${Bz("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${n}];\n\n        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};\n              let wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd = dotProd + xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}(h);else{t=new class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,wr.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.isVec4=e.inChannels%4==0&&e.outChannels%4==0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=nL(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=aL(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let e=this.isVec4?HW(this.elementsPerThread,this.workgroupSize):qW(this.elementsPerThread,this.workgroupSize);return`\n    ${function(e=4){let t=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        \n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ${zz(e)}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ${zz(e)}(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];\n      }\n      return ${zz(e)}(0.0);`;return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${zz(e)} {\n    let col = colIn * ${e};\n    ${t}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${zz(e)} {\n    let col = colIn * ${e};\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ${(e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(e)}\n    }\n    return ${zz(e)}(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${zz(e)}) {\n    let col = colIn * ${e};\n    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;\n    }\n  }`}(this.isVec4?4:1)}\n    ${e}\n    `}}(h);let e=h.inHeight*h.inWidth,n=h.inChannels,a=h.filterHeight*h.filterWidth*h.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[n]},{type:"uint32",data:[a]})}return a.runWebGPUProgram(t,[i,s],"float32",f)}},mU={kernelName:kt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a,u=Pf.computeConv3DInfo(r.shape,i.shape,s,l,o),d=[u.padInfo.front,u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],c=new class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`\n    ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords.x;\n        let d2 = coords.u;\n\n        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n        let xFCorner = xFRCCorner.x;\n        let xRCorner = xFRCCorner.y;\n        let xCCorner = xFRCCorner.z;\n\n        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;\n        let inputDepthVec4Remainder = uniforms.xShape.u % 4;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let xF = xFCorner + wF * uniforms.dilations[0];\n          if (xF < 0 || xF >= uniforms.xShape.y) {\n            continue;\n          }\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let xR = xRCorner + wR * uniforms.dilations[1];\n            if (xR < 0 || xR >= uniforms.xShape.z) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let xC = xCCorner + wC * uniforms.dilations[2];\n              if (xC < 0 || xC >= uniforms.xShape.w) {\n                continue;\n              }\n\n              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {\n                let xValues = vec4<f32>(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                let wValues = vec4<f32>(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (inputDepthVec4Remainder == 1) {\n                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2);\n              } else if (inputDepthVec4Remainder == 2) {\n                let xValues = vec2<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)\n                );\n                let wValues = vec2<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (inputDepthVec4Remainder == 3) {\n                let xValues = vec3<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)\n                );\n                let wValues = vec3<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }`}}(u),h=fi(r.dtype,i.dtype);return n.runWebGPUProgram(c,[r,i],h,p)}},yU={kernelName:It,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a,u=Pf.computeConv3DInfo(r.shape,l,s,1,o),d=new class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,\n       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`\n    ${Bz("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wF = coords.x;\n        let wR = coords.y;\n        let wC = coords.z;\n        let d1 = coords.w;\n        let d2 = coords.u;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yF = 0; yF < uniforms.outDepth; yF++) {\n            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];\n            if (xF < 0 || xF >= uniforms.inDepth) {\n              continue;\n            }\n\n            for (var yR = 0; yR < uniforms.outHeight; yR++) {\n              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];\n              if (xR < 0 || xR >= uniforms.inHeight) {\n                continue;\n              }\n\n              for (var yC = 0; yC < uniforms.outWidth; yC++) {\n                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];\n                if (xC < 0 || xC >= uniforms.inWidth) {\n                  continue;\n                }\n\n                let dyValue = getDy(b, yF, yR, yC, d2);\n                let xValue = getX(b, xF, xR, xC, d1);\n                dotProd += xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}(u),p=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return n.runWebGPUProgram(d,[r,i],i.dtype,p)}},gU={kernelName:St,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,pad:o,inputShape:l}=a,u=Pf.computeConv3DInfo(l,i.shape,s,1,o),d=new class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`\n    ${Bz("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let d1 = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyFCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);\n          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {\n            continue;\n          }\n          let idyF = i32(dyF);\n\n          let wFPerm = uniforms.filterDims[0] - 1 - wF;\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            let wRPerm = uniforms.filterDims[1] - 1 - wR;\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let wCPerm = uniforms.filterDims[2] - 1 - wC;\n\n              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {\n                let xValue = getDy(batch, idyF, idyR, idyC, d2);\n                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}(u),p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return n.runWebGPUProgram(d,[r,i],r.dtype,p)}},AU=hB({opType:pL.COS}),xU={kernelName:Ct,backendName:"webgpu",kernelFunc:AU},bU=hB({opType:pL.COSH}),vU={kernelName:Nt,backendName:"webgpu",kernelFunc:bU},wU={kernelName:Et,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:o,method:l,extrapolationValue:u}=a,d=new class{constructor(e,t,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===a?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,a,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,s,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n    ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${i});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${a};\n        let width_scale = ${s};\n        let in_y = ${r};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${o};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}}(r.shape[3],i.shape,o,l),p=[{type:"float32",data:[u]}];return n.runWebGPUProgram(d,[r,i,s],"float32",p)}};!function(e){e.Prod="*",e.Sum="+"}(pU||(pU={}));var kU=class{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=a,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===pU.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${IU(e,"coords",this.op)})`,a=this.outputShape[this.outputShape.length-1],r="",i="";return this.exclusive?(r=this.reverse?"end != "+(a-1):"end != 0",i=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${a}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`\n      ${Bz("index")} {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ${SU(e,"coords",this.op)};\n         var val = ${n};\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (${r}) {\n           let idx = ${i};\n           ${SU(e,"coords",this.op)} = idx;\n           val ${this.op}= getX(${IU(e,"coords",this.op)});\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    `}};function IU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function SU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function CU(e,t,n,a,r,i){let s=t.shape.length,o=Pf.getAxesPermutation([a],s),l=t;null!=o&&(l=lV({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=Pf.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);let d=l.shape[u],p=lB({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){let a=new kU(e,l.shape,!1,i),r=p,s=[{type:"float32",data:[t]}];p=n.runWebGPUProgram(a,[p],p.dtype,s),n.disposeData(r.dataId)}if(r){let t=new kU(e,l.shape,r,i),a=p,s=[{type:"float32",data:[0]}];p=n.runWebGPUProgram(t,[p],p.dtype,s),n.disposeData(a.dataId)}if(null!=o){let e=lV({inputs:{x:p},backend:n,attrs:{perm:Pf.getUndoAxesPermutation(o)}});return n.disposeData(p.dataId),n.disposeData(l.dataId),e}return p}var NU={kernelName:Tt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return CU(pU.Prod,r,n,i,s,o)}},TU={kernelName:Rt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return CU(pU.Sum,r,n,i,s,o)}},RU={kernelName:$t,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s,binaryOutput:o}=a,l=1===r.shape.length,u=wr.sizeFromShape(i.shape)>0,d=i.dtype,p=l?[r.shape[0]]:[r.shape[0],r.shape[1]],c=eB({backend:n,attrs:{shape:l?[s]:[r.shape[0],s],value:0,dtype:d}}),h=new GV(p,u,o),f=[{type:"int32",data:[s]}],m=u?[r,i]:[r];return n.runWebGPUProgram(h,m,d,f,c)}},EU={kernelName:Mt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:i,dataFormat:s}=a,o=r.shape[0],l=("NHWC"===s?r.shape[1]:r.shape[2])*i,u=("NHWC"===s?r.shape[2]:r.shape[3])*i,d=("NHWC"===s?r.shape[3]:r.shape[1])/(i*i),p="NHWC"===s?[o,l,u,d]:[o,d,l,u],c=[{type:"int32",data:[i]}],h=new class{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(p,s);return n.runWebGPUProgram(h,[r],r.dtype,c)}},$U=class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=rL(r),this.dispatch=eL(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),wr.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return`\n      ${BW(this.activation,this.hasPreluActivation,!0,4)}\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ${Bz("index")} {\n        let width0 = uniforms.outShape[3] / ${this.outputComponent};\n        let d1 = (index % width0) * ${this.outputComponent};\n        var index1 = index / width0;\n        let width1 = uniforms.virtualWidth / ${this.workPerThread};\n        let c = (index1 % width1) * ${this.workPerThread};\n        index1 = index1 / width1;\n        let r = index1 % uniforms.outShape[1];\n        let batch = index1 / uniforms.outShape[1];\n\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${n}) - uniforms.pads;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ${e}>;\n        var dotProd : array<vec4<f32>, ${this.workPerThread}>;\n        for (var i = 0; i < ${this.workPerThread}; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ${e}; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ${this.workPerThread}; i++) {\n                dotProd[i] = fma(xVals[i * ${n} + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ${VW(this.addBias,this.activation)}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    `}},MU=class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`\n      ${BW(this.activation,this.hasPreluActivation,!1,4)}\n\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;\n          let d2 = coords[${this.isChannelsLast?3:1}];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilations[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilations[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ${VW(this.addBias,this.activation)}\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}},FU={kernelName:Ft,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=a,p=Pf.convertConv2DDataFormat(l),c=u;null==c&&(c=[1,1]);let h,f=Pf.computeConv2DInfo(r.shape,i.shape,s,c,o,d,!0,p),m=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],y="channelsLast"===f.dataFormat;return!y&&f.inHeight>16&&f.inWidth>16&&1===f.strideHeight&&1===f.strideWidth&&1===f.dilationWidth&&1===f.dilationHeight&&f.inChannels===f.outChannels?h=new class{constructor(e,t,n,a=!1,r=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=r,this.hasPreluActivation=i,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,a=this.workgroupSize[0]+this.filterWidth-1;return`\n      ${BW(this.activation,this.hasPreluActivation,!1,4)}\n\n      var<workgroup> mm_Asub : array<array<f32, ${a}>, ${n}>;\n      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ${Bz()} {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workgroupSize[1]}) {\n          for (var inputCol = localCol; inputCol < ${a}; inputCol = inputCol + ${this.workgroupSize[0]}) {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}\n\n        {\n          let wRow = wIndex / ${this.filterWidth};\n          let wCol = wIndex % ${this.filterWidth};\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {\n          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ${VW(this.addBias,this.activation)}\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}}(f.outShape,f.filterHeight,f.filterWidth):y&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&1===f.dilationHeight&&1===f.dilationWidth&&f.inChannels%4==0?(h=new $U(f),m.push({type:"int32",data:[h.virtualWidth]})):(h=new MU(f),m.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),n.runWebGPUProgram(h,[r,i],r.dtype,m)}},_U={kernelName:_t,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=a,p=Pf.computeConv2DInfo(r.shape,d,s,o,l,u,!0),c=new class{constructor(e){this.variableNames=["x","dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,\n      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`\n      ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let dm = coords[3];\n        let d2 = d1 * uniforms.channelMul + dm;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yR = 0; yR < uniforms.outHeight; yR++) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC++) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              let dyValue = getDy(b, yR, yC, d2);\n              let xValue = getX(b, xR, xC, d1);\n              dotProd += xValue * dyValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}(p),h=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return n.runWebGPUProgram(c,[r,i],"float32",h)}},PU={kernelName:Pt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=a,p=Pf.computeConv2DInfo(d,i.shape,s,o,l,u,!0),c=new class{constructor(e){this.variableNames=["dy","W"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`\n      ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[3];\n        let dyCorner = coords.yz - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n\n          let idyR = i32(dyR);\n          let wRPerm = uniforms.filterDims[0] - 1 - wR;\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n\n            let idyC = i32(dyC);\n            let wCPerm = uniforms.filterDims[1] - 1 - wC;\n\n            for (var dm = 0; dm < uniforms.channelMul; dm++) {\n              let d2 = d1 * uniforms.channelMul + dm;\n              let xValue = getDy(batch, idyR, idyC, d2);\n              let wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}(p),h=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return n.runWebGPUProgram(c,[r,i],r.dtype,h)}},OU={kernelName:Ot,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],i=wr.sizeFromShape(a.shape),s=nB({inputs:{x:a},backend:n,attrs:{shape:[i]}}),o=new class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}}(i),l=n.runWebGPUProgram(o,[s],s.dtype),u=nB({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeData(s.dataId),n.disposeData(l.dataId),u}},DU={kernelName:Dt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a,u=Pf.computeDilation2DInfo(r.shape,i.shape,s,o,"NHWC",l),d=[u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],c=new class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`\n       ${Bz("index")} {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilations[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilations[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     `}}(u);return n.runWebGPUProgram(c,[r,i],r.dtype,p)}},zU={kernelName:Lt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a,d=Pf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u),p=i.dtype,c=new class{constructor(e,t,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=rL(e.outShape),this.dispatch=eL(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error(`Dilation2DBackpropFilter only supports float32 and int32\n          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`\n       ${Bz("index")} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var wRMax = 0;\n           var wCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     wRMax = wR;\n                     wCMax = wC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);\n           let value = getDy(b, r, c, d);\n           ${Dz("&result[flatIndexIn]","value",this.type)}\n         }\n       }\n     `}}(d,i.shape,p),h=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[wr.sizeFromShape(d.outShape)]}],f=eB({backend:n,attrs:{shape:i.shape,value:0,dtype:p}});return n.runWebGPUProgram(c,[r,i,s],p,h,f)}},LU={kernelName:zt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a,d=Pf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u),p=r.dtype,c=new class{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=rL(e.outShape),this.dispatch=eL(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==t&&"int32"!==t)throw new Error(`Dilation2DBackpropInput only supports float32 and int32\n          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`\n       ${Bz("index")} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var xRMax = 0;\n           var xCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     xRMax = xR;\n                     xCMax = xC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.xShape[3] *\n               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));\n           let value = getDy(b, r, c, d);\n           ${Dz("&result[flatIndexIn]","value",this.type)}\n         }\n       }\n     `}}(d,p),h=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[wr.sizeFromShape(d.outShape)]}],f=eB({backend:n,attrs:{shape:d.inShape,value:0,dtype:p}});return n.runWebGPUProgram(c,[r,i,s],p,h,f)}},WU=fB({opType:lL.MUL,cpuKernelImpl:_B,supportsComplex:!0}),BU={kernelName:Bn,backendName:"webgpu",kernelFunc:WU};function VU(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;return pV(r,i,s,"sum",n)}var UU={kernelName:Ra,backendName:"webgpu",kernelFunc:VU},GU={kernelName:Vt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,i=t,{allDims:s,summedDims:o,idDims:l}=Pf.decodeEinsumEquation(r,i.length);Pf.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:d}=Pf.getEinsumComputePath(o,l),p=d.length,c=null,h=s.length,f=[];for(let e=0;e<p;++e){for(let t of d[e]){let e,{permutationIndices:a,expandDims:r}=Pf.getEinsumPermutation(h,l[t]);Pf.isIdentityPermutation(a)?e=i[t]:(e=lV({inputs:{x:i[t]},backend:n,attrs:{perm:a}}),f.push(e));let s=e.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);wr.arraysEqual(e.shape,s)||(e=nB({inputs:{x:e},backend:n,attrs:{shape:s}}),f.push(e)),null===c?c=e:(c=WU({inputs:{a:e,b:c},backend:n}),f.push(c))}e<p-1&&(u[e]>=0&&(c=VU({inputs:{x:c},backend:n,attrs:{axis:u[e]-(s.length-h),keepDims:!1}}),f.push(c)),h--)}for(let e of f)e!==c&&n.disposeData(e.dataId);return c}},HU=hB({opType:pL.ELU}),jU={kernelName:Ut,backendName:"webgpu",kernelFunc:HU},qU={kernelName:Gt,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,i=new oB(lL.ELU_DER,a.shape,r.shape);return n.runWebGPUProgram(i,[a,r],a.dtype)}},XU=fB({opType:lL.EQUAL,dtype:"bool",cpuKernelImpl:xB}),KU={kernelName:jt,backendName:"webgpu",kernelFunc:XU},ZU=hB({opType:pL.ERF}),YU={kernelName:Ht,backendName:"webgpu",kernelFunc:ZU},JU=hB({opType:pL.EXP,cpuKernelImpl:bB,dtype:"float32"}),QU={kernelName:qt,backendName:"webgpu",kernelFunc:JU};function eG(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:i}=t,s=i.shape.length,o=i.shape.slice(),l=r;return r<0&&(wr.assert(-(s+1)<=r,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),l=s+r+1),o.splice(l,0,1),nB({inputs:{x:i},backend:a,attrs:{shape:o}})}var tG={kernelName:Xt,backendName:"webgpu",kernelFunc:eG},nG=hB({opType:pL.EXPM1,cpuKernelImpl:vB}),aG={kernelName:Kt,backendName:"webgpu",kernelFunc:nG},rG=class{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ${"real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  `}};function iG(e,t,n){let a=n.tensorMap.get(e.dataId),r=wr.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],s=[],o=nB({inputs:{x:e},backend:n,attrs:{shape:[r/i,i]}});s.push(o);let l=o.shape,u=new rG("real",l),d=new rG("imag",l),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:l},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:l}],c=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?l[1]:1]}],h=n.runWebGPUProgram(u,p,"float32",c);s.push(h);let f=n.runWebGPUProgram(d,p,"float32",c);s.push(f);let m=dB({inputs:{real:h,imag:f},backend:n});s.push(m);let y=nB({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return s.forEach((e=>n.disposeData(e.dataId))),y}var sG,oG={kernelName:Zt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return iG(a,!1,n)}},lG={kernelName:Jt,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,a=t,r=new class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    `}}(n.shape);return a.runWebGPUProgram(r,[n],n.dtype)}},uG=hB({opType:pL.FLOOR,cpuKernelImpl:wB}),dG={kernelName:Qt,backendName:"webgpu",kernelFunc:uG},pG=fB({opType:lL.INT_DIV,cpuKernelImpl:kB,dtype:"int32"}),cG={kernelName:en,backendName:"webgpu",kernelFunc:pG},hG={kernelName:rr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:i}=a;if(null==r)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let s="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&r instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&r instanceof OffscreenCanvas,u="undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap,[d,p]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[p,d,i],h=s||o;if(u||l||h){let e;{if(h){let e=Le().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==sG||e!==fG)&&(fG=e,sG=document.createElement("canvas").getContext("2d",{willReadFrequently:fG})),sG.canvas.width=d,sG.canvas.height=p,sG.drawImage(r,0,0,d,p),r=sG.canvas}let t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,a="rgba8unorm",i=n.textureManager.acquireTexture(c[1],c[0],a,t);n.queue.copyExternalImageToTexture({source:r},{texture:i},[c[1],c[0]]),e=i}let t=wr.sizeFromShape(c),a=wr.computeStrides(c),s=new class{constructor(e,t,n=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};\n      ${Bz("index")} {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ${e};\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}}(c,i,!1),o=[{type:"uint32",data:[t]},{type:"uint32",data:[i]},{type:"uint32",data:[...a]}],l=n.makeTensorInfo([p,d],"int32");n.tensorMap.get(l.dataId).resource=e;let u=n.runWebGPUProgram(s,[l],"int32",o);return n.disposeData(l.dataId),u}let f=r.data,m=f;if(null!=i&&4!==i){m=new Uint8Array(r.width*r.height*i);let e=f.length,t=0;for(let n=0;n<e;n++)n%4<i&&(m[t++]=f[n])}let y=n.makeTensorInfo(c,"int32",new Int32Array(m));return n.uploadToGPU(y.dataId),y}},fG=Le().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),mG={kernelName:tn,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a,scale:r,offset:i,mean:s,variance:o}=e,{varianceEpsilon:l}=t,u=n,d=[a,s,o],p=null;null!=i&&(p=i.shape,d.push(i));let c=null;null!=r&&(c=r.shape,d.push(r));let h=new class{constructor(e,t,n,a,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Pf.assertAndGetBroadcastShape(e,t),Pf.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=a&&(Pf.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset")),null!=r&&(Pf.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`\n      ${Bz("index")} {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}}(a.shape,s.shape,o.shape,p,c),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(h,d,a.dtype,f)}},yG={kernelName:or,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=a,m=Pf.convertConv2DDataFormat(d);return dU({x:r,filter:i,convInfo:Pf.computeConv2DInfo(r.shape,i.shape,l,p,u,c,!1,m),backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:f,activation:h})}},gG={kernelName:lr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:c,leakyreluAlpha:h}=a,f=d;null==f&&(f=[1,1]),wr.assert(Pf.eitherStridesOrDilationsAreOne(l,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`));let m=Pf.computeConv2DInfo(r.shape,i.shape,l,f,u,p,!0),y=[r,i],g=null!=s,A=null!=o;g&&y.push(s),A&&y.push(o);let x,b=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&m.inChannels%4==0?(x=new $U(m,g,c,A),b.push({type:"int32",data:[x.virtualWidth]})):(x=new MU(m,g,c,A),b.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),"leakyrelu"===c&&(b.push({type:"float32",data:[h]}),x.uniforms+=" alpha : f32,"),n.runWebGPUProgram(x,y,"float32",b)}},AG={kernelName:an,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,i=r.shape,s=i[i.length-1],o=wr.sizeFromShape(a.shape),[l,u,d,p]=Pf.prepareAndValidate(a,r),c=nB({inputs:{x:r},backend:n,attrs:{shape:[u,s]}}),h=nB({inputs:{x:a},backend:n,attrs:{shape:[wr.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){let e=n.readSync(r.dataId),t=n.bufferSync(a),i=IB(e,t,a.dtype,u,s,d,p,a.shape,o);return n.makeTensorInfo(l,a.dtype,i.values)}let f=new class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Lz(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}}(s,[u,d]),m=[{type:"int32",data:[s]},{type:"int32",data:p}],y=n.runWebGPUProgram(f,[h,c],h.dtype,m),g=nB({inputs:{x:y},backend:n,attrs:{shape:l}});return n.disposeData(c.dataId),n.disposeData(h.dataId),n.disposeData(y.dataId),g}};function xG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:i}=t,{axis:s,batchDims:o}=a,l=wr.parseAxisParam(s,r.shape)[0],u=Pf.segment_util.collectGatherOpShapeInfo(r,i,l,o),d=wr.sizeFromShape(i.shape),p=[],c=nB({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=nB({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(c),p.push(h);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])){let e=n.tensorMap.get(h.dataId).values,t=Ws(h.shape,h.dtype,e),a=n.tensorMap.get(c.dataId).values,r=Ws(c.shape,c.dtype,a),i=SB(r,t,f);return p.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(u.outputShape,i.dtype,i.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let e=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("indexZ"):n.push(`${t[a]}`);return n.join()}(this.aShape);return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${e}));\n        }\n      }\n    `}}(c.shape,f),y=n.runWebGPUProgram(m,[c,h],c.dtype);p.push(y);let g=nB({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeData(e.dataId))),g}var bG={kernelName:nn,backendName:"webgpu",kernelFunc:xG},vG=fB({opType:lL.GREATER,cpuKernelImpl:NB,dtype:"bool"}),wG={kernelName:rn,backendName:"webgpu",kernelFunc:vG},kG=fB({opType:lL.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:CB}),IG={kernelName:sn,backendName:"webgpu",kernelFunc:kG},SG={kernelName:ln,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return iG(a,!0,n)}},CG=hB({opType:pL.IS_FINITE,dtype:"bool"}),NG={kernelName:dn,backendName:"webgpu",kernelFunc:CG},TG=hB({opType:pL.IS_INF,dtype:"bool"}),RG={kernelName:pn,backendName:"webgpu",kernelFunc:TG},EG=hB({opType:pL.IS_NAN,dtype:"bool"}),$G={kernelName:cn,backendName:"webgpu",kernelFunc:EG},MG={kernelName:hn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:i}=a,s=[{type:"float32",data:[i]}],o=new cB(r.shape,pL.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(o,[r],"float32",s)}},FG=fB({opType:lL.LESS,dtype:"bool",cpuKernelImpl:RB}),_G={kernelName:fn,backendName:"webgpu",kernelFunc:FG},PG=fB({opType:lL.LESS_EQUAL,dtype:"bool",cpuKernelImpl:TB}),OG={kernelName:mn,backendName:"webgpu",kernelFunc:PG},DG={kernelName:yn,backendName:"webgpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:i}=n,s=(r-a)/(i-1),o=new class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    `}}(i),l=[{type:"float32",data:[a]},{type:"float32",data:[s]}];return t.runWebGPUProgram(o,[],"float32",l)}},zG=hB({opType:pL.LOG,cpuKernelImpl:EB}),LG={kernelName:gn,backendName:"webgpu",kernelFunc:zG},WG=hB({opType:pL.LOG1P}),BG={kernelName:An,backendName:"webgpu",kernelFunc:WG},VG=fB({opType:lL.LOGICAL_AND,dtype:"bool"}),UG={kernelName:xn,backendName:"webgpu",kernelFunc:VG},GG=hB({opType:pL.LOGICAL_NOT}),HG={kernelName:bn,backendName:"webgpu",kernelFunc:GG},jG=fB({opType:lL.LOGICAL_OR}),qG={kernelName:vn,backendName:"webgpu",kernelFunc:jG},XG="\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n",KG={kernelName:Sn,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{depthRadius:s,bias:o,alpha:l,beta:u}=r;t=s>16?new class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`\n    ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ${XG}\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  `}}(i.shape):new class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,wr.assert(t<=this.maxAllowRadius,(()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`)),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=eL(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`\n    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;\n    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};\n    const maxAllowRadius = ${this.maxAllowRadius};\n\n    ${Bz()} {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ${XG}\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } `}}(i.shape,s);let d=[{type:"int32",data:[s]},{type:"float32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]}];return a.runWebGPUProgram(t,[i],i.dtype,d)}},ZG={kernelName:Cn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a,p=new class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`\n    ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n\n        let MIN_DEPTH_BEGIN = 0;\n        let MAX_DEPTH_END = uniforms.outShape[3];\n        var result = 0.0;\n        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {\n          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);\n          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);\n\n          var norm = 0.0;\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            } else {\n              break;\n            }\n          }\n\n          norm = uniforms.alpha * norm + uniforms.bias;\n\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              var dyi = -2.0 * uniforms.alpha * uniforms.beta\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * uniforms.beta);\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, result);\n      }\n    }\n  `}}(r.shape),c=[{type:"int32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[d]}];return n.runWebGPUProgram(p,[r,i,s],r.dtype,c)}},YG=fB({opType:lL.MAX,cpuKernelImpl:MB}),JG={kernelName:Rn,backendName:"webgpu",kernelFunc:YG},QG={kernelName:En,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;return FV(r,Pf.computePool2DInfo(r.shape,i,s,1,o,l),"max",n)}},eH={kernelName:Mn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dataFormat:l,dimRoundingMode:u}=a,d=Pf.computePool3DInfo(r.shape,i,s,[1,1,1],o,u,l),p=new TV(d,"max"),c=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(p,[r],r.dtype,c)}},tH={kernelName:Fn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=Pf.computePool3DInfo(s.shape,o,l,[1,1,1],u,d),c=new TV(p,"max",!0),h=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}],f=n.runWebGPUProgram(c,[s],"int32",h),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`\n      ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;\n\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;\n              let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}(p);h=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]}];let y=n.runWebGPUProgram(m,[r,f],s.dtype,h);return n.disposeData(f.dataId),y}},nH={kernelName:$n,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i,output:s}=t,o=i;oL([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=a,c=Pf.computePool2DInfo(o.shape,l,u,1,d,p),h=new NV(c,"max",!0),f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}],m=n.runWebGPUProgram(h,[o],"int32",f),y=new class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`\n      ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            let curPosValue = wR * uniforms.filterDims[1] + wC;\n            let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}(c);f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]}];let g=n.runWebGPUProgram(y,[r,m],o.dtype,f);return n.disposeData(m.dataId),g}},aH={kernelName:_n,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{filterSize:r,strides:i,pad:s,includeBatchInIndex:o}=a,{x:l}=t;wr.assert(4===l.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`));let u=[1,1];wr.assert(Pf.eitherStridesOrDilationsAreOne(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));let d=Pf.computePool2DInfo(l.shape,r,i,u,s),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}],c=new NV(d,"max",!1),h=n.runWebGPUProgram(c,[l],l.dtype,p);return c=new NV(d,"max",!0,!0,o),[h,n.runWebGPUProgram(c,[l],"int32",p)]}},rH={kernelName:On,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;return pV(r,i,s,"min",n)}},iH=fB({opType:lL.MIN,cpuKernelImpl:FB}),sH={kernelName:Dn,backendName:"webgpu",kernelFunc:iH},oH={kernelName:zn,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{paddings:r,mode:i}=t,s=n,o=r.map((e=>({type:"int32",data:[e[0],e[1]]}))),l=new class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),a=1===e?"start":"start[i]",r=1===e?"end":"end[i]",i=1===e?"outC":"outC[i]",s=Lz(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let start = ${s}(${t});\n          let end = ${s}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${i} < ${a}) {\n              ${i} = ${a} * 2 - ${i} - ${this.offset};\n            } else if(${i} >= ${r}) {\n              ${i} = (${r} - 1) * 2 - ${i} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${o}));\n        }\n      }\n    `}}(a.shape,r,i);return s.runWebGPUProgram(l,[a],a.dtype,o)}},lH=fB({opType:lL.MOD}),uH={kernelName:Ln,backendName:"webgpu",kernelFunc:lH};function dH(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:i}=a,s=nB({inputs:{x:r},backend:n,attrs:{shape:[wr.sizeFromShape(r.shape)/r.shape[i],r.shape[i]]}}),o=new class{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`\n    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;\n    var<workgroup> rowMaxShared : f32;\n    var<workgroup> rowSumShared : f32;\n    const blockSize = ${this.workgroupSize[0]};\n    ${Bz("index")} {\n      let row = index / blockSize;\n      let tid = i32(localId.x);\n      let cols = uniforms.outShape[1];\n\n      var threadMax = -3.402823e+38f;\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = getLogits(row, col);\n        threadMax = max(threadMax, value);\n      }\n      if (tid < cols) {\n        buf[tid] = threadMax;\n      }\n      workgroupBarrier();\n\n      var reduceSize = min(cols, blockSize);\n      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n        reduceSize = currSize + (reduceSize & 1);\n        if (tid < currSize) {\n          buf[tid] = max(buf[tid], buf[tid + reduceSize]);\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowMaxShared = buf[0];\n      }\n      workgroupBarrier();\n\n      var threadSum = 0.0;\n      for (var col = tid; col < cols; col += blockSize) {\n        let subExp = exp(getLogits(row, col) - rowMaxShared);\n        threadSum += subExp;\n      }\n      buf[tid] = threadSum;\n      workgroupBarrier();\n\n      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n        if (tid < currSize) {\n          buf[tid] = buf[tid] + buf[tid + currSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowSumShared = buf[0];\n      }\n      workgroupBarrier();\n\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;\n        setOutputAtCoords(row, col, value);\n      }\n  }\n    `}}(s.shape),l=n.runWebGPUProgram(o,[s],r.dtype),u=nB({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeData(s.dataId),n.disposeData(l.dataId),u}var pH={kernelName:Ma,backendName:"webgpu",kernelFunc:dH},cH={kernelName:Wn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a,l=o?r:dH({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],d=l.shape[1],p=new class{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {\n      let HASHSCALE1 = 443.8975;\n      let p = resultUV * seed;\n      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);\n      p3 = p3 + dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Bz("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n\n        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),\n            f32(coords[0]) / f32(uniforms.outShape[0]));\n        let r = random(uniforms.seed, resUV);\n        var cdf = 0.0;\n        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {\n          cdf = cdf + getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutputAtIndexI32(index, i);\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);\n      }\n    }\n  `}}(u,i),c=[{type:"float32",data:[s]},{type:"int32",data:[d]}],h=n.runWebGPUProgram(p,[l],"int32",c);return o||n.disposeData(l.dataId),h}},hH={kernelName:Vn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){let e=n.tensorMap.get(a.dataId),[t,r]=PB(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r=new cB(a.shape,pL.NEG);return n.runWebGPUProgram(r,[a],a.dtype)}},fH={kernelName:Gn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(i.dataId),{selectedIndices:p}=Um.nonMaxSuppressionV3Impl(u,d,s,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},mH={kernelName:jn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),p=n.readSync(i.dataId),c=s,h=o,f=l,m=u,{selectedIndices:y,selectedScores:g}=Um.nonMaxSuppressionV5Impl(d,p,c,h,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},yH={kernelName:Xn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a,u=wr.sizeFromShape(r.shape),d=new class{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`\n      ${Bz("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    `}}(u,s),p=nB({inputs:{x:r},backend:n,attrs:{shape:[u]}}),c=[{type:"float32",data:[o]},{type:"float32",data:[l]}],h=n.runWebGPUProgram(d,[p],i,c);n.disposeData(p.dataId);let f=nB({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeData(h.dataId),f}};function gH(e){let{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){let e=KV({inputs:{input:a},backend:n}),t=gH({inputs:{x:e},backend:n}),r=rU({inputs:{input:a},backend:n}),i=gH({inputs:{x:r},backend:n}),s=dB({inputs:{real:t,imag:i},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(r.dataId),n.disposeData(i.dataId),s}return eB({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}var AH={kernelName:nr,backendName:"webgpu",kernelFunc:gH},xH={kernelName:qn,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let t=KV({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),i=rU({inputs:{input:r},backend:a}),s=gH({inputs:{x:i},backend:a}),o=dB({inputs:{real:n,imag:s},backend:a});return a.disposeData(t.dataId),a.disposeData(n.dataId),a.disposeData(i.dataId),a.disposeData(s.dataId),o}return eB({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}},bH={kernelName:Kn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return eG({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach((e=>{wr.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),wr.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=oU({inputs:t.map((e=>{let t=eG({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeData(e.dataId))),l}};function vH(e,t=!1){let n=e.length,a=Lz(n),r=e.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),i=e.map(((e,t)=>`uniforms.pad${t}[0] + uniforms.xShape${n>1?`[${t}]`:""}`)).join(",");return`\n        let start = ${n>1?`${a}(${r})`:`${r}`};\n        let end = ${n>1?`${a}(${i})`:`${i}`};\n        if (${n>1?"any(paddedCoords < start)":"paddedCoords < start"} || ${n>1?"any(paddedCoords >= end)":"paddedCoords >= end"}) {\n          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});\n        } else {\n          let coords = paddedCoords - start;\n          setOutputAtIndex(index, getX(${n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords"}));\n        }\n  `}var wH={kernelName:Zn,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,constantValue:s}=a;if(i.every((e=>wr.arraysEqual(e,[0,0]))))return lB({inputs:{x:r},backend:n});if(0===wr.sizeFromShape(r.shape))return eB({backend:n,attrs:{shape:i.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:s,dtype:r.dtype}});let o=[{type:"float32",data:[s]}];i.map((e=>o.push({type:"int32",data:[e[0],e[1]]})));let l=new class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let paddedCoords = getCoordsFromIndex(index);\n          ${vH(this.xShape)}\n        }\n      }\n    `}}(r.shape,i);return n.runWebGPUProgram(l,[r],r.dtype,o)}},kH=fB({opType:lL.POW}),IH={kernelName:Jn,backendName:"webgpu",kernelFunc:kH},SH={kernelName:Qn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,i=new oB(lL.PRELU,a.shape,r.shape);return n.runWebGPUProgram(i,[a,r],"float32")}},CH={kernelName:ea,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;return pV(r,i,s,"prod",n)}},NH={kernelName:ra,backendName:"webgpu",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:i,dtype:s}=n,o=zB(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}},TH=fB({opType:lL.DIV}),RH={kernelName:Bt,backendName:"webgpu",kernelFunc:TH},EH=hB({opType:pL.RECIPROCAL}),$H={kernelName:sa,backendName:"webgpu",kernelFunc:EH},MH=hB({opType:pL.RELU}),FH={kernelName:oa,backendName:"webgpu",kernelFunc:MH},_H=hB({opType:pL.RELU6}),PH={kernelName:ha,backendName:"webgpu",kernelFunc:_H},OH={kernelName:pa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,size:s,halfPixelCenters:o}=a,[l,u]=s,d=[{type:"float32",data:[i&&l>1?1:0,i&&u>1?1:0]},{type:"float32",data:[o?.5:0]}],p=new class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}(r.shape,l,u);return n.runWebGPUProgram(p,[r],"float32",d)}},DH={kernelName:ca,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,[,o,l]=r.shape,[,u,d]=i.shape,p=[s&&u>1?o-1:o,s&&d>1?l-1:l],c=[s&&u>1?u-1:u,s&&d>1?d-1:d],h=p[0]/c[0],f=p[1]/c[1],m=1/h,y=1/f,g=2*Math.ceil(m)+2,A=2*Math.ceil(y)+2,x=new class{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,\n       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let dxR = f32(dyR) * uniforms.heightScale;\n              let topDxRIndex = i32(floor(dxR));\n              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));\n              let dxRLerp = dxR - f32(topDxRIndex);\n              let inverseDxRLerp = 1.0 - dxRLerp;\n\n              let dxC = f32(dyC) * uniforms.widthScale;\n              let leftDxCIndex = i32(floor(dxC));\n              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));\n              let dxCLerp = dxC - f32(leftDxCIndex);\n              let inverseDxCLerp = 1.0 - dxCLerp;\n\n              if (r == topDxRIndex && c == leftDxCIndex) {\n                // topLeft\n                accumulator +=\n                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n              }\n\n              if (r == topDxRIndex && c == rightDxCIndex) {\n                // topRight\n                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == leftDxCIndex) {\n                // bottomLeft\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == rightDxCIndex) {\n                // bottomRight\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `}}(r.shape,s),b=[{type:"int32",data:p},{type:"int32",data:c},{type:"float32",data:[h]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[y]},{type:"int32",data:[g]},{type:"int32",data:[A]}];return n.runWebGPUProgram(x,[i],i.dtype,b)}},zH={kernelName:ua,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,d=[{type:"float32",data:[i&&l>1?1:0,i&&u>1?1:0]},{type:"float32",data:[i?.5:0]}],p=new class{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=a,this.shaderKey=`resizeNearest_${a}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}(r.shape,l,u,s);return n.runWebGPUProgram(p,[r],r.dtype,d)}},LH={kernelName:da,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,[,o,l]=r.shape,[,u,d]=i.shape,p=[s&&u>1?o-1:o,s&&d>1?l-1:l],c=[s&&u>1?u-1:u,s&&d>1?d-1:d],h=1/(p[0]/c[0]),f=1/(p[1]/c[1]),m=2*Math.ceil(h)+2,y=2*Math.ceil(f)+2,g=new class{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,\n       winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *\n                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));\n\n              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *\n                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));\n\n              let sourceNearestRow =\n                  i32(min(f32(uniforms.outShape[1] - 1),\n                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));\n\n              let sourceNearestCol =\n                  i32(min(f32(uniforms.outShape[2] - 1),\n                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));\n\n              if (r == sourceNearestRow && c == sourceNearestCol) {\n                accumulator += getDy(b, dyR, dyC, d);\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `}}(r.shape,s),A=[{type:"int32",data:p},{type:"int32",data:c},{type:"float32",data:[h]},{type:"float32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[y]}];return n.runWebGPUProgram(g,[i],i.dtype,A)}},WH={kernelName:fa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a,s=r.shape.length;if(0===s)return lB({inputs:{x:r},backend:n});let o=r.shape,l=[1,1,1,1];o.forEach(((e,t)=>{l[t+4-s]=e}));let u=wr.parseAxisParam(i,r.shape),d=[0,0,0,0];u.forEach((e=>{d[e+4-s]=1}));let p=[{type:"int32",data:d}],c=nB({inputs:{x:r},backend:n,attrs:{shape:l}}),h=new class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`\n      \n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    \n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    `}}(l),f=n.runWebGPUProgram(h,[c],c.dtype,p);n.disposeData(c.dataId);let m=nB({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}},BH={kernelName:ir,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:i,center:s}=t,o=n,l=new class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        ${Bz("index")} {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}}(a.shape,i),[u,d]=Pf.getImageCenter(s,a.shape[1],a.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return"number"==typeof i?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i}),o.runWebGPUProgram(l,[a],a.dtype,p)}},VH=hB({opType:pL.ROUND}),UH={kernelName:ma,backendName:"webgpu",kernelFunc:VH},GH=hB({opType:pL.RSQRT,cpuKernelImpl:LB}),HH={kernelName:ya,backendName:"webgpu",kernelFunc:GH},jH=class{constructor(e,t,n,a,r,i,s,o=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=s,this.sumDupeIndices=o,this.dispatchLayout=rL(e),this.dispatch=eL(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${a}_${this.sliceDimGreaterThanOne}_${s}_${o}`;let l=Lz(r.length);this.uniforms=`sliceDim : i32, strides: ${l}, updatesSize: i32,`,this.updatesRank=a,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",a="",r="";1===this.dispatchLayout.x.length?(a="flattenedIndex",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(a="vec2<i32>(flattenedIndex, coords[1])",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");let i=`getUpdates(${Array.from({length:this.updatesRank},((e,t)=>`coords[${t}]`)).join(", ")})`;return`\n    ${r}\n      ${Bz("index")} {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue =\n              ${Xz(this.type)}(${i});\n          let flatIndex = getOutputIndexFromCoords(${a});\n\n          ${this.sumDupeIndices?Dz("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}\n        }\n      }`}},qH={kernelName:ga,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:i}=t,{shape:s}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Pf.calculateShapes(i,r,s),c=[p/u,u];if(0===p)return n.makeTensorInfo(s,r.dtype);let h=nB({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=nB({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,y=eB({backend:n,attrs:{shape:c,value:0,dtype:m}}),g=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[wr.sizeFromShape(f.shape)]}],A=new jH(f.shape,o,h.shape.length,f.shape.length,d,c,m),x=n.runWebGPUProgram(A,[f,h],m,g,y),b=nB({inputs:{x},backend:n,attrs:{shape:s}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(x.dataId),b}},XH={kernelName:xa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a,o=new class{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ${"left"===this.side?"<":"<="} value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    `}}([i.shape[0],i.shape[1]],s),l=[{type:"int32",data:[r.shape[1]]}];return n.runWebGPUProgram(o,[r,i],"int32",l)}},KH={kernelName:ba,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t,s=new class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],r=[];for(let e=0;e<this.outputShape.length;e++)r.push(`${n[e]}`),e<this.cRank&&a.push(`${n[e]}`);e=a.join(),t=r.join()}return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}}(a.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(s,[a,r,i],fi(r.dtype,i.dtype))}},ZH=hB({opType:pL.SELU}),YH={kernelName:va,backendName:"webgpu",kernelFunc:ZH},JH=hB({opType:pL.SIGMOID}),QH={kernelName:Ca,backendName:"webgpu",kernelFunc:JH},ej=hB({opType:pL.SIGN}),tj={kernelName:Sa,backendName:"webgpu",kernelFunc:ej},nj=hB({opType:pL.SIN}),aj={kernelName:ka,backendName:"webgpu",kernelFunc:nj},rj=hB({opType:pL.SINH}),ij={kernelName:Ia,backendName:"webgpu",kernelFunc:rj},sj=hB({opType:pL.SOFTPLUS}),oj={kernelName:Na,backendName:"webgpu",kernelFunc:sj},lj={kernelName:Ea,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a;wr.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));let o=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...s);for(let e=1+i.length;e<r.shape.length;++e)l.push([0,0]);let u=l.map(((e,t)=>e[0]+r.shape[t]+e[1])),d=Pf.getReshaped(u,i,o,!1),p=Pf.getPermuted(d.length,i.length,!1),c=Pf.getReshapedPermuted(u,i,o,!1),h=wr.computeStrides(u),f=new class{constructor(e,t,n,a,r,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let s=new Array(a.length);for(let e=0;e<s.length;e++)s[e]=a[r[e]];this.outputShape=s,this.newDim=r,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${Lz(a.length)}, paddedXShapeStrides : ${Lz(i)}, `,n.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.shaderKey=`spaceToBatchND_${r}`}getUserCode(){let e=Lz(this.outputShape.length),t=oV(this.newDim);return`\n      ${Hz(this.paddedXShape,"PaddedX")}\n      ${Bz("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);\n          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);\n          ${vH(this.xShape,!0)}\n        }\n      }\n    `}}(r.shape,u,l,d,p,h.length),m=[{type:"int32",data:d},{type:"int32",data:h}];l.map((e=>m.push({type:"int32",data:[e[0],e[1]]})));let y=n.runWebGPUProgram(f,[r],r.dtype,m),g=nB({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeData(y.dataId),g}};function uj(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:i}=a;if(n.shouldExecuteOnCPU([r])||"string"===r.dtype||r.shape.length>=5){let e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>wr.decodeString(e))):e,a=Ws(r.shape,r.dtype,t),s=jB(a,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}let s=new class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e;r++)a.push(`(${n[r]} % ${t}aShape[${r}])`);return a.join()}(this.rank,"uniforms.");return`\n      ${Bz("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${e}));\n        }\n      }\n    `}}(r.shape,i);return n.runWebGPUProgram(s,[r],r.dtype)}var dj={kernelName:Xa,backendName:"webgpu",kernelFunc:uj},pj={kernelName:Da,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:i,defaultValue:s}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:c}=Pf.calculateShapes(i,r,o),h=!1;if("string"===i.dtype){let e=n.bufferSync(r),t=n.bufferSync(i),a=wr.decodeString(n.readSync(s.dataId)[0]),f=WB(e,t,o,c,d,u,l,p,a,h);return n.makeTensorInfo(o,f.dtype,f.values)}let f=[c/d,d],m=nB({inputs:{x:r},backend:n,attrs:{shape:[u,l]}}),y=i.shape.length?nB({inputs:{x:i},backend:n,attrs:{shape:[u,d]}}):lB({inputs:{x:i},backend:n}),g=y.dtype,A=n.makeTensorInfo([],g,wr.makeZerosTypedArray(1,g)),x=nB({inputs:{x:s},backend:n,attrs:{shape:Array(f.length).fill(1)}}),b=uj({inputs:{x},backend:n,attrs:{reps:f}}),v=[{type:"int32",data:[l]},{type:"int32",data:p},{type:"int32",data:[wr.sizeFromShape([u,d])]}];switch(u){case 0:break;case 1:{let e=new jH([u,d],l,m.shape.length,y.shape.length,p,f,g,h);n.runWebGPUProgram(e,[y,m],g,v,b)}break;default:{let e=new jH([u,d],l,m.shape.length,A.shape.length,p,f,g,h);n.runWebGPUProgram(e,[A,m],g,v,b)}{let e=new jH([u,d],l,m.shape.length,y.shape.length,p,f,g);n.runWebGPUProgram(e,[y,m],g,v,b)}}let w=nB({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(A.dataId),n.disposeData(b.dataId),w}},cj={kernelName:$a,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=a,o=wr.parseAxisParam(s,r.shape)[0],l=Pf.prepareSplitSize(r,i,o),u=r.shape.length,d=new Array(u).fill(0),p=r.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let a=WV({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,a}))}},hj=hB({opType:pL.SQRT}),fj={kernelName:Ta,backendName:"webgpu",kernelFunc:hj},mj={kernelName:La,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,a=t,r=new cB(n.shape,pL.SQUARE);return a.runWebGPUProgram(r,[n],n.dtype)}},yj=fB({opType:lL.SQUARED_DIFFERENCE}),gj={kernelName:za,backendName:"webgpu",kernelFunc:yj},Aj={kernelName:ar,backendName:"webgpu",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:a}=e,r=new cB(a.shape,pL.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[t.alpha]}];return n.runWebGPUProgram(r,[a],a.dtype,i)}},xj={kernelName:Ba,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{begin:s,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:h}=r,{finalShapeSparse:f,finalShape:m,isIdentity:y,sliceDim0:g,isSimpleSlice:A,begin:x,end:b,strides:v}=uf.sliceInfo(i.shape,s,o,l,u,d,p,c,h);if(y)t=nB({inputs:{x:i},backend:a,attrs:{shape:m}});else if(g||A){wr.assert(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));let e=uf.computeOutShape(x,b,v),n=WV({inputs:{x:i},backend:a,attrs:{begin:x,size:e}});t=nB({inputs:{x:n},backend:a,attrs:{shape:m}}),a.disposeData(n.dataId)}else if(a.shouldExecuteOnCPU([i])){let e=a.readSync(i.dataId),n=Ws(i.shape,i.dtype,e),r=UB(f,n,v,x);t=a.makeTensorInfo(m,i.dtype,r.values)}else{let e=new class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let t=Lz(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       ${Bz("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}}(f),n=[{type:"int32",data:x},{type:"int32",data:v}],r=a.runWebGPUProgram(e,[i],i.dtype,n);t=nB({inputs:{x:r},backend:a,attrs:{shape:m}}),a.disposeData(r.dataId)}return t}},bj={kernelName:Va,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:d,dataSplits:p}=t,c=n.readSync(d.dataId),h=n.readSync(p.dataId),[f,m]=GB(c,h,r,i,s,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},vj=fB({opType:lL.SUB,cpuKernelImpl:HB,supportsComplex:!0}),wj={kernelName:Ha,backendName:"webgpu",kernelFunc:vj},kj=hB({opType:pL.TAN}),Ij={kernelName:ja,backendName:"webgpu",kernelFunc:kj},Sj=hB({opType:pL.TANH}),Cj={kernelName:qa,backendName:"webgpu",kernelFunc:Sj},Nj={kernelName:Aa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:i,updates:s}=t,{}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Pf.calculateShapes(s,i,r.shape),c=[p/u,u];if(0===p)return n.makeTensorInfo(r.shape,i.dtype);let h=[],f=nB({inputs:{x:i},backend:n,attrs:{shape:[l,o]}});h.push(f);let m=nB({inputs:{x:s},backend:n,attrs:{shape:[l,u]}});h.push(m);let y=nB({inputs:{x:r},backend:n,attrs:{shape:c}});h.push(y);let g=uj({inputs:{x:y},backend:n,attrs:{reps:Array(c.length).fill(1)}}),A=new jH([l,u],o,f.shape.length,m.shape.length,d,c,r.dtype,!1),x=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[wr.sizeFromShape([l,u])]}],b=n.runWebGPUProgram(A,[m,f],y.dtype,x,g);h.push(b);let v=nB({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return h.forEach((e=>n.disposeData(e.dataId))),v}},Tj=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`\n        ${Bz("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}};function Rj(e,t){null!==t&&e.disposeData(t.dataId)}function Ej(e){let t=1;for(;t<e;)t*=2;return t}var $j={kernelName:Ka,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:i,sorted:s}=a,o=r.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([r])){let e=n.readSync(r.dataId),[t,a]=qB(e,o,r.dtype,i,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===i)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(1===l)return[r,eB({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let u=wr.sizeFromShape(o)/l,d=nB({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),p=Ej(i),c=Ej(l),h=null,f=()=>null===h?[d,d]:[d,h],m=(e,t,a)=>{let r=f(),i=new class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return`\n        ${Bz("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}}(a),s=[{type:"int32",data:[l]},{type:"int32",data:[null===h?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=h;h=n.runWebGPUProgram(i,r,"int32",s),Rj(n,o)};for(let e=1;e<p;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)m(t,n,[u,c])}for(let e=c;e>p;e/=2){let t=f(),a=new Tj([u,e/2]),r=[{type:"int32",data:[l]},{type:"int32",data:[null===h?1:0]},{type:"int32",data:[p]}],i=h;h=n.runWebGPUProgram(a,t,"int32",r),Rj(n,i);let s=p/2,o=2*s;for(let e=s;e>=1;e/=2)m(o,e,h.shape)}let y=h;h=WV({inputs:{x:h},backend:n,attrs:{begin:0,size:[u,i]}}),Rj(n,y);let g=xG({inputs:{x:d,indices:h},backend:n,attrs:{axis:1,batchDims:1}});Rj(n,d);let A=o.slice(0,-1);A.push(i),y=h,h=nB({inputs:{x:h},attrs:{shape:A},backend:n}),Rj(n,y);let x=g;return g=nB({inputs:{x:g},attrs:{shape:A},backend:n}),Rj(n,x),[g,h]}},Mj={kernelName:Za,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{image:i,transforms:s}=n,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=r,[p,c,h,f]=i.shape,[m,y]=null!=d?d:[c,h],g=[p,m,y,f],A=new class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=rL(this.outputShape),this.dispatch=eL(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ${Bz("index")} {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        `}}(g),x="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}let b=[{type:"int32",data:[x]},{type:"int32",data:[t]},{type:"float32",data:[u]}];return a.runWebGPUProgram(A,[i,s],"float32",b)}},Fj={kernelName:Qa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r,o=s.shape.length,l=r.shape[i],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==i&&(u[d++]=s.shape[e]);let p=[],c=new Array(o).fill(0),h=s.shape.slice();h[i]=1;let f=new Array(l);for(let e=0;e<f.length;e++){c[i]=e;let t=WV({inputs:{x:s},backend:n,attrs:{begin:c,size:h}}),a=nB({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=a,p.push(t)}return p.forEach((e=>n.disposeData(e.dataId))),f}},_j={kernelName:er,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:i}=t,{numSegments:s}=a,o=r.shape.length,l=[],u=0,d=Pf.getAxesPermutation([u],o),p=r;null!=d&&(p=lV({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(p),u=Pf.getInnerMostAxes(1,o)[0]);let c=Pf.segment_util.computeOutShape(p.shape,u,s),h=wr.sizeFromShape([p.shape[u]]),f=nB({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=r.dtype,y=[f.shape[0],s],g=eB({backend:n,attrs:{shape:y,value:0,dtype:m}}),A=new class{constructor(e,t,n){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=rL(e),this.dispatch=eL(this.dispatchLayout,e,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error(`UnsortedSegmentSum only supports float32 and int32\n              types, does not support ${n} type.`);this.type=n,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`\n    ${Bz("index")} {\n      if (index < uniforms.xSize) {\n        let coords = getXCoordsFromIndex(index);\n        let b = coords[0];\n        let inCol = coords[1];\n\n        let segmentId = i32(getSegmentIds(inCol));\n        if (segmentId >= 0) {\n          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;\n          let value = getX(b, inCol);\n\n          ${Dz("&result[flatIndex]","value",this.type)}\n        }\n      }\n    }\n  `}}(f.shape,y,m),x=[{type:"int32",data:[s]},{type:"int32",data:[wr.sizeFromShape(f.shape)]}],b=n.runWebGPUProgram(A,[f,i],m,x,g),v=nB({inputs:{x:b},backend:n,attrs:{shape:c}});l.push(b);let w=v;if(null!=d){l.push(v);let e=Pf.getUndoAxesPermutation(d);w=lV({inputs:{x:w},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeData(e.dataId))),w}},Pj=[iB,YB,QB,tV,aV,rV,cV,hV,mV,yV,AV,bV,wV,IV,CV,_V,PV,OV,DV,zV,VV,HV,jV,YV,QV,eU,pB,nU,lU,cU,hU,fU,mU,yU,gU,xU,vU,wU,NU,TU,RU,EU,_U,PU,FU,OU,DU,zU,LU,GU,jU,qU,KU,YU,QU,tG,aG,oG,tB,lG,hG,dG,cG,mG,yG,gG,AG,bG,wG,IG,uB,SG,iU,NG,RG,$G,MG,_G,OG,DG,BG,LG,UG,HG,qG,KG,ZG,EV,JG,QG,nH,eH,tH,aH,MV,rH,sH,oH,uH,cH,BU,hH,fH,mH,XV,yH,xH,bH,wH,IH,SH,CH,NH,ZV,RH,$H,FH,PH,aB,OH,DH,zH,LH,WH,BH,UH,HH,qH,XH,KH,YH,QH,tj,aj,ij,BV,Aj,xj,bj,pH,oj,lj,pj,cj,fj,mj,gj,wj,UU,Ij,Cj,Nj,dj,$j,Mj,uV,Fj,_j,AH];for(let e of Pj)yr(e);var Oj="4.7.0",Dj={tfjs:Oj,"tfjs-core":Oj,"tfjs-converter":"4.7.0","tfjs-backend-cpu":"4.7.0","tfjs-backend-webgl":"4.7.0","tfjs-backend-wasm":"4.7.0","tfjs-backend-webgpu":"4.7.0"};function zj(...e){const t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}var Lj=()=>"undefined"!=typeof performance?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function Wj(e,t,n="config",a=[]){for(const r of Object.keys(t))if("object"==typeof t[r])Wj(e[r],t[r],r,a);else{const i=e&&void 0!==e[r];i||a.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});const s=e&&typeof e[r]==typeof t[r];i&&!s&&a.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&"config"===n&&a.length>0&&zj("invalid configuration",a),a}function Bj(...e){const t=e=>e&&"object"==typeof e;return e.reduce(((e,n)=>(Object.keys(n||{}).forEach((a=>{const r=e[a],i=n[a];Array.isArray(r)&&Array.isArray(i)?e[a]=r.concat(...i):t(r)&&t(i)?e[a]=Bj(r,i):e[a]=i})),e)),{})}var Vj={backend:"",modelBasePath:"",cacheModels:!0,validateModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,flags:{},softwareKernels:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,autoBrightness:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!1,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,minSize:0,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-lite.json"}},object:{enabled:!1,modelPath:"centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"rvm.json",ratio:.5,mode:"default"}},Uj="\n  precision highp float;\n  attribute vec2 pos;\n  attribute vec2 uv;\n  varying vec2 vUv;\n  uniform float flipY;\n  void main(void) {\n    vUv = uv;\n    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);\n  }\n",Gj="\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];\n    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];\n  }\n",Hj="\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];\n    gl_FragColor.a = c.a;\n  }\n",jj="\n  precision highp float;\n  varying vec2 vUv;\n  uniform vec2 size;\n  uniform sampler2D texture;\n  vec2 pixelate(vec2 coord, vec2 size) {\n    return floor( coord / size ) * size;\n  }\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    vec2 coord = pixelate(vUv, size);\n    gl_FragColor += texture2D(texture, coord);\n  }\n",qj="\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;\n    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;\n    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;\n  }\n",Xj="\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  uniform float m[9];\n  void main(void) {\n    vec4 c11 = texture2D(texture, vUv - px); // top left\n    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center\n    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right\n    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left\n    vec4 c22 = texture2D(texture, vUv); // mid center\n    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right\n    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left\n    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center\n    vec4 c33 = texture2D(texture, vUv + px ); // bottom right\n    gl_FragColor = \n    c11 * m[0] + c12 * m[1] + c22 * m[2] +\n    c21 * m[3] + c22 * m[4] + c23 * m[5] +\n    c31 * m[6] + c32 * m[7] + c33 * m[8];\n    gl_FragColor.a = c22.a;\n  }\n",Kj=(e,t,n)=>{const a=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(a,((e,t)=>(n[t]=0,e)))},Zj=class{constructor(e,t,n){r(this,"uniform",{}),r(this,"attribute",{}),r(this,"gl"),r(this,"id"),r(this,"compile",((e,t)=>{const n=this.gl.createShader(t);return n?(this.gl.shaderSource(n,e),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)?n:(zj(`filter: gl compile failed: ${this.gl.getShaderInfoLog(n)||"unknown"}`),null)):(zj("filter: could not create shader"),null)})),this.gl=e;const a=this.compile(t,this.gl.VERTEX_SHADER),i=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),a&&i)if(this.id)if(this.gl.attachShader(this.id,a),this.gl.attachShader(this.id,i),this.gl.linkProgram(this.id),this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){this.gl.useProgram(this.id),Kj(t,"attribute",this.attribute);for(const e in this.attribute)this.attribute[e]=this.gl.getAttribLocation(this.id,e);Kj(t,"uniform",this.uniform),Kj(n,"uniform",this.uniform);for(const e in this.uniform)this.uniform[e]=this.gl.getUniformLocation(this.id,e)}else zj(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)||"unknown"}`);else zj("filter: could not create webgl program")}};function Yj(){let e=0,t=null,n=!1,a=-1,r=[null,null],i=[],s=null,o=null;const l=uq(100,100),u={},d=l.getContext("webgl");if(!d)return void zj("filter: cannot get webgl context");function p(e){return r[e]=r[e]||function(e,t){const n=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,n);const a=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,a);const r=d.createTexture();return d.bindTexture(d.TEXTURE_2D,r),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,e,t,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,r,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:n,texture:r}}(l.width,l.height),r[e]}function c(r=0){if(!o)return;let i=null,s=null,l=!1;i=0===e?t:p(a).texture||null,e++,!n||1&r?(a=(a+1)%2,s=p(a).fbo||null):(s=null,l=e%2==0),d.bindTexture(d.TEXTURE_2D,i),d.bindFramebuffer(d.FRAMEBUFFER,s),d.uniform1f(o.uniform.flipY,l?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function h(e){if(u[e])return o=u[e],d.useProgram((o?o.id:null)||null),o;if(o=new Zj(d,Uj,e),!o)return zj("filter: could not get webgl program"),null;const t=Float32Array.BYTES_PER_ELEMENT,n=4*t;return d.enableVertexAttribArray(o.attribute.pos),d.vertexAttribPointer(o.attribute.pos,2,d.FLOAT,!1,n,0*t),d.enableVertexAttribArray(o.attribute.uv),d.vertexAttribPointer(o.attribute.uv,2,d.FLOAT,!1,n,2*t),u[e]=o,o}this.gl=d;const f={colorMatrix:e=>{const t=new Float32Array(e);t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255;const n=h(1===t[18]&&0===t[3]&&0===t[8]&&0===t[13]&&0===t[15]&&0===t[16]&&0===t[17]&&0===t[19]?Hj:Gj);n&&(d.uniform1fv(n.uniform.m,t),c())},brightness:e=>{const t=(e||0)+1;f.colorMatrix([t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0])},saturation:e=>{const t=2*(e||0)/3+1,n=-.5*(t-1);f.colorMatrix([t,n,n,0,0,n,t,n,0,0,n,n,t,0,0,0,0,0,1,0])},desaturate:()=>{f.saturation(-1)},contrast:e=>{const t=(e||0)+1,n=-128*(t-1);f.colorMatrix([t,0,0,0,n,0,t,0,0,n,0,0,t,0,n,0,0,0,1,0])},negative:()=>{f.contrast(-2)},hue:e=>{e=(e||0)/180*Math.PI;const t=Math.cos(e),n=Math.sin(e),a=.213,r=.715,i=.072;f.colorMatrix([a+.787*t+n*-a,r+t*-r+n*-r,i+t*-i+.928*n,0,0,a+t*-a+.143*n,r+t*(1-r)+.14*n,i+t*-i+-.283*n,0,0,a+t*-a+-.787*n,r+t*-r+n*r,i+.928*t+n*i,0,0,0,0,0,1,0])},desaturateLuminance:()=>{f.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{f.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{f.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{f.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{f.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{f.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{f.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{f.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:e=>{const t=new Float32Array(e),n=1/l.width,a=1/l.height,r=h(Xj);r&&(d.uniform1fv(r.uniform.m,t),d.uniform2f(r.uniform.px,n,a),c())},detectEdges:()=>{f.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{f.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{f.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:e=>{const t=e||1;f.convolution.call(this,[0,-1*t,0,-1*t,1+4*t,-1*t,0,-1*t,0])},emboss:e=>{const t=e||1;f.convolution.call(this,[-2*t,-1*t,0,-1*t,1,1*t,0,1*t,2*t])},blur:e=>{const t=e/7/l.width,n=e/7/l.height,a=h(qj);a&&(d.uniform2f(a.uniform.px,0,n),c(1),d.uniform2f(a.uniform.px,t,0),c())},pixelate:e=>{const t=e/l.width,n=e/l.height,a=h(jj);a&&(d.uniform2f(a.uniform.size,t,n),c())}};this.add=function(e){const t=Array.prototype.slice.call(arguments,1),n=f[e];i.push({func:n,args:t})},this.reset=function(){i=[]},this.get=function(){return i},this.apply=function(a){!function(e,t){if(e!==l.width||t!==l.height){if(l.width=e,l.height=t,!s){const e=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);s=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,s),d.bufferData(d.ARRAY_BUFFER,e,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),r=[null,null]}}(a.width,a.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,a);for(let e=0;e<i.length;e++){n=e===i.length-1;const t=i[e];t.func.apply(this,t.args||[])}return l},this.draw=function(e){return this.add("brightness",0),this.apply(e)}}async function Jj(e){const t=4===e.shape.length?kp(e):e,n=bp(t,3,2),a=[eu(n[0]),eu(n[1]),eu(n[2])],r=[Ql(n[0]),Ql(n[1]),Ql(n[2])],i=await Promise.all(r.map((e=>e.data()))),s=Math.max(i[0][0],i[1][0],i[2][0]),o=(s>1?255:1)/s;let l;if(o>1){const e=[Lu(n[0],a[0]),Lu(n[1],a[1]),Lu(n[2],a[2])],i=[Lu(r[0],a[0]),Lu(r[1],a[1]),Lu(r[2],a[2])],s=[mo(e[0],o),mo(e[1],o),mo(e[2],o)],u=Ip([s[0],s[1],s[2]],2);l=Go(u,[1,t.shape[0]||0,t.shape[1]||0,3]),Qs([...e,...i,...s,u])}else l=du(t,0);return Qs([...n,...a,...r,n,t,e]),l}var Qj,eq,tq,nq,aq=3840,rq=null,iq=null,sq=null,oq={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function lq(){oq.inputSum=0,oq.cacheDiff=1,oq.sumMethod=0,oq.inputTensor=void 0}function uq(e,t){let n;if(cq.browser)if(cq.worker){if("undefined"==typeof OffscreenCanvas)throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else if("undefined"!=typeof document)n=document.createElement("canvas"),n.width=e,n.height=t;else{if("undefined"==typeof navigator||"ReactNative"!==navigator.product)throw new Error("canvas error: attempted to run in browser but DOM is not defined");if(void 0!==cq.Canvas)n=new cq.Canvas(e,t);else{if(void 0===globalThis.Canvas)throw new Error("canvas error: attempted to use canvas in react-native without canvas support installed");n=new globalThis.Canvas(e,t)}}else void 0!==cq.Canvas?n=new cq.Canvas(e,t):void 0!==globalThis.Canvas&&(n=new globalThis.Canvas(e,t));return n}function dq(e,t){const n=t||uq(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function pq(e,t,n=!0){var a,r,i;if(!e)return t.debug&&zj("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof ri||"undefined"!=typeof Image&&e instanceof Image||void 0!==globalThis.Canvas&&e instanceof globalThis.Canvas||"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLMediaElement&&e instanceof HTMLMediaElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas))throw new Error("input error: type not recognized");if(e instanceof ri){let n=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(3===e.shape.length){if(3===e.shape[2])n=du(e,0);else if(4===e.shape[2]){const t=fp(e,[0,0,0],[-1,-1,3]);n=du(t,0),Qs(t)}}else 4===e.shape.length&&(3===e.shape[3]?n=Vs(e):4===e.shape[3]&&(n=mp(e,[0,0,0,0],[-1,-1,-1,3])));if(null==n||4!==n.shape.length||1!==n.shape[0]||3!==n.shape[3])throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape.toString()}`);if("int32"===n.dtype){const e=Bs(n,"float32");Qs(n),n=e}return{tensor:n,canvas:t.filter.return?iq:null}}if(void 0!==e.readyState&&e.readyState<=2)return t.debug&&zj("input stream is not ready"),{tensor:null,canvas:rq};const s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,o=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!o)return t.debug&&zj("cannot determine input dimensions"),{tensor:null,canvas:rq};let l=s,u=o;if(l>aq&&(l=aq,u=Math.trunc(l*o/s)),u>aq&&(u=aq,l=Math.trunc(u*s/o)),((null==(a=t.filter)?void 0:a.width)||0)>0?l=t.filter.width:((null==(r=t.filter)?void 0:r.height)||0)>0&&(l=s*((t.filter.height||0)/o)),(t.filter.height||0)>0?u=t.filter.height:(t.filter.width||0)>0&&(u=o*((t.filter.width||0)/s)),!l||!u)throw new Error("input error: cannot determine dimension");rq&&rq.width===l&&rq.height===u||(rq=uq(l,u));const d=rq.getContext("2d");if("undefined"!=typeof ImageData&&e instanceof ImageData?d.putImageData(e,0,0):t.filter.flip&&void 0!==d.translate?(d.translate(s,0),d.scale(-1,1),d.drawImage(e,0,0,s,o,0,0,rq.width,rq.height),d.setTransform(1,0,0,1,0,0)):d.drawImage(e,0,0,s,o,0,0,rq.width,rq.height),iq&&rq.width===iq.width&&rq.height===iq.height||(iq=uq(rq.width,rq.height)),t.filter.enabled&&cq.webgl.supported?(Qj||(Qj=cq.browser?new Yj:null),cq.filter=!!Qj,(null==Qj?void 0:Qj.add)?(Qj.reset(),0!==t.filter.brightness&&Qj.add("brightness",t.filter.brightness),0!==t.filter.contrast&&Qj.add("contrast",t.filter.contrast),0!==t.filter.sharpness&&Qj.add("sharpen",t.filter.sharpness),0!==t.filter.blur&&Qj.add("blur",t.filter.blur),0!==t.filter.saturation&&Qj.add("saturation",t.filter.saturation),0!==t.filter.hue&&Qj.add("hue",t.filter.hue),t.filter.negative&&Qj.add("negative"),t.filter.sepia&&Qj.add("sepia"),t.filter.vintage&&Qj.add("brownie"),t.filter.sepia&&Qj.add("sepia"),t.filter.kodachrome&&Qj.add("kodachrome"),t.filter.technicolor&&Qj.add("technicolor"),t.filter.polaroid&&Qj.add("polaroid"),0!==t.filter.pixelate&&Qj.add("pixelate",t.filter.pixelate),iq=(null==(i=Qj.get())?void 0:i.length)>1?Qj.apply(rq):Qj.draw(rq)):(t.debug&&zj("input process error: cannot initialize filters"),cq.webgl.supported=!1,t.filter.enabled=!1,dq(rq,iq))):(dq(rq,iq),Qj&&(Qj=null),cq.filter=!!Qj),!n)return{tensor:null,canvas:iq};if(!iq)throw new Error("canvas error: cannot create output");let p,c=3;if("undefined"!=typeof ImageData&&e instanceof ImageData||e.data&&e.width&&e.height)cq.browser&&Jh?p=Jh?Jh.fromPixels(e):null:(c=e.data.length/e.height/e.width,p=Gi(new Uint8Array(e.data.buffer),[e.height,e.width,c],"int32"));else if(sq&&iq.width===sq.width&&iq.height===sq.height||(sq=uq(iq.width,iq.height)),Jh&&cq.browser)"webgl"===t.backend||"humangl"===t.backend||"webgpu"===t.backend?p=Jh.fromPixels(iq):(sq=dq(iq),p=Jh.fromPixels(sq));else{const e=dq(iq).getContext("2d").getImageData(0,0,l,u);c=e.data.length/l/u,p=Gi(new Uint8Array(e.data.buffer),[l,u,c])}if(4===c){const e=fp(p,[0,0,0],[-1,-1,3]);Qs(p),p=e}if(!p)throw new Error("input error: cannot create tensor");const h=Bs(p,"float32"),f=t.filter.equalization?await Jj(h):du(h,0);if(Qs([p,h]),t.filter.autoBrightness){const e=Ql(f),n=await e.data();t.filter.brightness=n[0]>1?1-n[0]/255:1-n[0],Qs(e)}return{tensor:f,canvas:t.filter.return?iq:null}}eq=new WeakMap,tq=new WeakMap,nq=new WeakMap;var cq=new class{constructor(){if(r(this,"browser"),r(this,"node"),r(this,"worker"),r(this,"platform",""),r(this,"agent",""),r(this,"backends",[]),r(this,"initial"),r(this,"filter"),r(this,"tfjs"),r(this,"offscreen"),r(this,"perfadd",!1),r(this,"tensorflow",{version:void 0,gpu:void 0}),r(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),r(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0,shader:void 0,vendor:void 0}),r(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),r(this,"cpu",{model:void 0,flags:[]}),r(this,"kernels",[]),o(this,eq,void 0),o(this,tq,void 0),o(this,nq,void 0),this.browser="undefined"!=typeof navigator,this.node="undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node,this.tfjs={version:Dj["tfjs-core"]},this.offscreen="undefined"!=typeof OffscreenCanvas,this.initial=!0,this.worker=this.browser&&this.offscreen?"undefined"!=typeof WorkerGlobalScope:void 0,"undefined"!=typeof navigator&&void 0!==navigator.userAgent){const e=navigator.userAgent||"",t=e.match(/\(([^()]+)\)/g);if(null==t?void 0:t[0]){const n=t[0].match(/\(([^()]+)\)/g);this.platform=(null==n?void 0:n[0])?n[0].replace(/\(|\)/g,""):"",this.agent=e.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else"undefined"!=typeof process&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}get Canvas(){return s(this,eq)}set Canvas(e){l(this,eq,e),globalThis.Canvas=e}get Image(){return s(this,tq)}set Image(e){l(this,tq,e),globalThis.Image=e}get ImageData(){return s(this,nq)}set ImageData(e){l(this,nq,e),globalThis.ImageData=e}async updateBackend(){this.backends=Object.keys(Ks().registryFactory);try{this.tensorflow={version:uo().binding?uo().binding.TF_Version:void 0,gpu:uo().binding?uo().binding.isUsingGpuDevice():void 0}}catch(e){}this.wasm.supported="undefined"!=typeof WebAssembly,this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&(this.wasm.simd=await Le().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Le().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));const e=uq(100,100),t=e?e.getContext("webgl2"):void 0;this.webgl.supported=void 0!==t,this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&t&&(this.webgl.version=t.getParameter(t.VERSION),this.webgl.vendor=t.getParameter(t.VENDOR),this.webgl.renderer=t.getParameter(t.RENDERER),this.webgl.shader=t.getParameter(t.SHADING_LANGUAGE_VERSION)),this.webgpu.supported=this.browser&&"undefined"!=typeof navigator&&void 0!==navigator.gpu,this.webgpu.backend=this.backends.includes("webgpu");try{if(this.webgpu.supported){const e=await navigator.gpu.requestAdapter();this.webgpu.adapter=await(null==e?void 0:e.requestAdapterInfo())}}catch(e){this.webgpu.supported=!1}try{this.kernels=mr(ro()).map((e=>e.kernelName.toLowerCase()))}catch(e){}}updateCPU(){const e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},hq={};a(hq,{"affectnet-mobilenet":()=>Cq,age:()=>Nq,"anti-spoofing":()=>iX,antispoof:()=>fq,blazeface:()=>mq,"blazeface-back":()=>Tq,"blazeface-front":()=>Rq,"blazepose-detector":()=>Eq,"blazepose-full":()=>$q,"blazepose-heavy":()=>Mq,"blazepose-lite":()=>Fq,centernet:()=>yq,default:()=>AX,efficientpose:()=>_q,"efficientpose-i-lite":()=>sX,"efficientpose-ii-lite":()=>oX,"efficientpose-iv":()=>lX,emotion:()=>gq,faceboxes:()=>Pq,facemesh:()=>Aq,"facemesh-attention":()=>Dq,"facemesh-attention-pinto":()=>Oq,"facemesh-detection-full":()=>zq,"facemesh-detection-short":()=>Lq,faceres:()=>xq,"faceres-deep":()=>Wq,gear:()=>Uq,"gear-e1":()=>Bq,"gear-e2":()=>Vq,gender:()=>Hq,"gender-ssrnet-imdb":()=>Gq,handdetect:()=>jq,"handlandmark-full":()=>qq,"handlandmark-lite":()=>bq,"handlandmark-sparse":()=>Xq,handskeleton:()=>Kq,handtrack:()=>vq,"insightface-efficientnet-b0":()=>uX,"insightface-ghostnet-strides1":()=>dX,"insightface-ghostnet-strides2":()=>pX,"insightface-mobilenet-emore":()=>cX,"insightface-mobilenet-swish":()=>hX,iris:()=>wq,liveness:()=>kq,meet:()=>Zq,mobileface:()=>Yq,mobilefacenet:()=>Jq,models:()=>Iq,"movenet-lightning":()=>Sq,"movenet-multipose":()=>Qq,"movenet-thunder":()=>eX,nanodet:()=>tX,"nanodet-e":()=>fX,"nanodet-g":()=>mX,"nanodet-m":()=>yX,"nanodet-t":()=>gX,posenet:()=>nX,rvm:()=>aX,selfie:()=>rX});var fq=853098,mq=538928,yq=4030290,gq=820516,Aq=1477958,xq=6978814,bq=2023432,vq=2964837,wq=2599092,kq=592976,Iq=0,Sq=4650216,Cq=6920630,Nq=161240,Tq=538928,Rq=402048,Eq=5928856,$q=6339202,Mq=27502466,Fq=2726402,_q=5651240,Pq=2013002,Oq=2387598,Dq=2382414,zq=1026192,Lq=201268,Wq=13957620,Bq=112438,Vq=112438,Uq=1498916,Gq=161236,Hq=201808,jq=3515612,qq=5431368,Xq=5286322,Kq=5502280,Zq=372228,Yq=2183192,Jq=5171976,Qq=9448838,eX=12477112,tX=7574558,nX=5032780,aX=3739355,rX=212886,iX=853098,sX=2269064,oX=5651240,lX=25643252,uX=13013224,dX=8093408,pX=8049584,cX=6938536,hX=12168584,fX=12319156,mX=7574558,yX=1887474,gX=5294216,AX={antispoof:fq,blazeface:mq,centernet:yq,emotion:gq,facemesh:Aq,faceres:xq,"handlandmark-lite":bq,handtrack:vq,iris:wq,liveness:kq,models:Iq,"movenet-lightning":Sq,"affectnet-mobilenet":Cq,age:Nq,"blazeface-back":Tq,"blazeface-front":Rq,"blazepose-detector":Eq,"blazepose-full":$q,"blazepose-heavy":Mq,"blazepose-lite":Fq,efficientpose:_q,faceboxes:Pq,"facemesh-attention-pinto":Oq,"facemesh-attention":Dq,"facemesh-detection-full":zq,"facemesh-detection-short":Lq,"faceres-deep":Wq,"gear-e1":Bq,"gear-e2":Vq,gear:Uq,"gender-ssrnet-imdb":Gq,gender:Hq,handdetect:jq,"handlandmark-full":qq,"handlandmark-sparse":Xq,handskeleton:Kq,meet:Zq,mobileface:Yq,mobilefacenet:Jq,"movenet-multipose":Qq,"movenet-thunder":eX,nanodet:tX,posenet:nX,rvm:aX,selfie:rX,"anti-spoofing":iX,"efficientpose-i-lite":sX,"efficientpose-ii-lite":oX,"efficientpose-iv":lX,"insightface-efficientnet-b0":uX,"insightface-ghostnet-strides1":dX,"insightface-ghostnet-strides2":pX,"insightface-mobilenet-emore":cX,"insightface-mobilenet-swish":hX,"nanodet-e":fX,"nanodet-g":mX,"nanodet-m":yX,"nanodet-t":gX},xX={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},bX={};async function vX(e){var t,n,a,r;let i=function(e,t){const n=e.endsWith("/")?"":"/",a=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!a.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${a}`);return a}(xX.modelBasePath,e||"");i.toLowerCase().endsWith(".json")||(i+=".json");const s=i.includes("/")?i.split("/"):i.split("\\"),o=s[s.length-1].replace(".json",""),l="indexeddb://"+o;bX[o]={name:o,sizeFromManifest:0,sizeLoadedWeights:0,sizeDesired:hq[o],inCache:!1,url:""},xX.cacheSupported="undefined"!=typeof indexedDB;let u={};try{u=xX.cacheSupported&&xX.cacheModels?await Th.listModels():{}}catch(e){xX.cacheSupported=!1}bX[o].inCache=xX.cacheSupported&&xX.cacheModels&&Object.keys(u).includes(l),bX[o].url=bX[o].inCache?l:i;const d="undefined"==typeof fetch?{}:{fetchFunc:(e,t)=>async function(e,t){return xX.debug&&zj("load model fetch:",e,t),fetch(e,t)}(e,t)};let p=new Ig(bX[o].url,d),c=!1;try{p.findIOHandler(),xX.debug&&zj("model load handler:",p.handler)}catch(e){zj("error finding model i/o handler:",i,e)}try{const e=await(null==(t=p.handler)?void 0:t.load())||null;bX[o].sizeFromManifest=(null==(n=null==e?void 0:e.weightData)?void 0:n.byteLength)||0,e?p.loadSync(e):p=await Sg(bX[o].inCache?l:i,d),bX[o].sizeLoadedWeights=(null==(r=null==(a=p.artifacts)?void 0:a.weightData)?void 0:r.byteLength)||0,xX.verbose&&zj("load:",{model:o,url:p.modelUrl,bytes:bX[o].sizeLoadedWeights}),c=!0}catch(e){zj("error loading model:",i,e)}if(c&&xX.cacheModels&&xX.cacheSupported&&!bX[o].inCache)try{const e=await p.save(l);xX.debug&&zj("model saved:",l,e)}catch(e){zj("error saving model:",i,e)}return p}var wX="3.0.7",kX={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};var IX={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]},SX={};async function CX(e,t=!1){var n,a;if(e.state="backend",0===(null==(n=e.config.backend)?void 0:n.length)&&(e.config.backend=await async function(){var e;return await cq.updateBackend(),(null==(e=cq.tensorflow)?void 0:e.version)?"tensorflow":cq.webgpu.supported&&cq.webgpu.backend?"webgpu":cq.webgl.supported&&cq.webgl.backend?"webgl":cq.wasm.supported&&cq.wasm.backend?"wasm":"cpu"}()),t||cq.initial||e.config.backend&&e.config.backend.length>0&&ro()!==e.config.backend){const t=Lj();if(e.config.backend&&e.config.backend.length>0){"undefined"==typeof window&&"undefined"!=typeof WorkerGlobalScope&&e.config.debug&&e.config.debug&&zj("running inside web worker"),"undefined"!=typeof navigator&&(null==(a=null==navigator?void 0:navigator.userAgent)?void 0:a.toLowerCase().includes("electron"))&&e.config.debug&&zj("running inside electron");let t=Object.keys(Ks().registryFactory);if("humangl"!==e.config.backend||t.includes("humangl")||(function(e){var t;if("humangl"===e.config.backend&&(kX.name in Ks().registry&&!(null==(t=null==kX?void 0:kX.gl)?void 0:t.getParameter(kX.gl.VERSION))&&(zj("humangl error: backend invalid context"),e.models.reset()),!so(kX.name))){try{kX.canvas=uq(100,100)}catch(e){return void zj("humangl error: cannot create canvas:",e)}try{if(kX.gl=kX.canvas.getContext("webgl2",kX.webGLattr),!kX.gl)return void zj("humangl error: cannot get webgl context");if(!kX.gl.getParameter(kX.gl.VERSION).includes("2.0"))return zj("backend override: using fallback webgl backend as webgl 2.0 is not detected"),void(e.config.backend="webgl");kX.canvas&&(kX.canvas.addEventListener("webglcontextlost",(t=>{throw zj("humangl error:",t.type),zj("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")})),kX.canvas.addEventListener("webglcontextrestored",(e=>{zj("humangl error: context restored:",e)})),kX.canvas.addEventListener("webglcontextcreationerror",(e=>{zj("humangl error: context create:",e)})))}catch(e){return void zj("humangl error: cannot get webgl context:",e)}try{mI(2,kX.gl)}catch(e){return void zj("humangl error: cannot set webgl context:",e)}try{const e=new hC(kX.gl);lo(kX.name,(()=>new FN(e)),kX.priority)}catch(e){return void zj("humangl error: cannot register webgl backend:",e)}try{mr("webgl").forEach((e=>{yr({...e,backendName:kX.name})}))}catch(e){return void zj("humangl error: cannot update webgl backend registration:",e)}try{Le().flagRegistry.WEBGL_VERSION&&Le().set("WEBGL_VERSION",2)}catch(e){return void zj("humangl error: cannot set WebGL backend flags:",e)}!function(){const e=kX.gl;e&&(kX.extensions=e.getSupportedExtensions())}();const t=uo(),n=void 0!==t.gpgpu?t.getGPGPUContext().gl:null;n?e.config.debug&&zj("humangl backend registered:",{webgl:n.getParameter(n.VERSION),renderer:n.getParameter(n.RENDERER)}):zj("humangl error: no current gl context:",n,kX.gl)}}(e),t=Object.keys(Ks().registryFactory)),e.config.debug&&zj("available backends:",t),cq.browser&&!cq.node&&"tensorflow"===e.config.backend&&t.includes("webgl")&&(e.config.debug&&zj("override: backend set to tensorflow while running in browser"),e.config.backend="webgl"),!cq.node||cq.browser||"webgl"!==e.config.backend&&"humangl"!==e.config.backend||!t.includes("tensorflow")||(e.config.debug&&zj(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),cq.browser&&"webgpu"===e.config.backend)if("undefined"==typeof navigator||void 0===navigator.gpu)zj("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="webgl";else{const t=await navigator.gpu.requestAdapter();e.config.debug&&zj("enumerated webgpu adapter:",t),t?zj("webgpu adapter info:","requestAdapterInfo"in t?await t.requestAdapterInfo():void 0):(zj("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="webgl")}if(t.includes(e.config.backend)||(zj(`error: backend ${e.config.backend} not found in registry`),e.config.backend=cq.node?"tensorflow":"webgl",e.config.debug&&zj(`override: setting backend ${e.config.backend}`)),e.config.debug&&zj("setting backend:",[e.config.backend]),"wasm"===e.config.backend){if(Le().flagRegistry.CANVAS2D_WILL_READ_FREQUENTLY&&Le().set("CANVAS2D_WILL_READ_FREQUENTLY",!0),e.config.debug&&zj("wasm path:",e.config.wasmPath),void 0===Cz)throw new Error("backend error: attempting to use wasm backend but wasm path is not set");Cz(e.config.wasmPath,e.config.wasmPlatformFetch);let t=!1,n=!1;try{t=await Le().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"),n=await Le().getAsync("WASM_HAS_SIMD_SUPPORT"),e.config.debug&&zj(`wasm execution: ${n?"simd":"no simd"} ${t?"multithreaded":"singlethreaded"}`),e.config.debug&&!n&&zj("warning: wasm simd support is not enabled")}catch(e){zj("wasm detection failed")}}try{await no(e.config.backend),await ao()}catch(t){return zj("error: cannot set backend:",e.config.backend,t),!1}e.config.debug&&(SX=JSON.parse(JSON.stringify(Le().flags)))}if("humangl"!==ro()&&"webgl"!==ro()||(Le().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&Le().set("WEBGL_USE_SHAPES_UNIFORMS",!0),Le().flagRegistry.WEBGL_EXP_CONV&&Le().set("WEBGL_EXP_CONV",!0),e.config.debug&&void 0!==e.config.deallocate&&e.config.deallocate&&(zj("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Le().set("WEBGL_DELETE_TEXTURE_THRESHOLD",0))),ro(),e.config.debug){const t=Le().flags,n={};for(const e of Object.keys(t))SX[e]!==t[e]&&(n[e]=t[e]);e.config.debug&&Object.keys(n).length>0&&zj("backend:",ro(),"flags:",n)}if(e.config.flags&&Object.keys(e.config.flags).length>0){e.config.debug&&zj("flags:",e.config.flags);for(const[t,n]of Object.entries(e.config.flags))Le().set(t,n)}Gs(),IX.tf255=nu(255,"float32"),IX.tf1=nu(1,"float32"),IX.tf2=nu(2,"float32"),IX.tf05=nu(.5,"float32"),IX.tf127=nu(127.5,"float32"),IX.rgb=Tp([.2989,.587,.114],"float32"),e.performance.initBackend=Math.trunc(Lj()-t),e.config.backend=ro(),await cq.updateBackend(),function(e){const t=[];cq.kernels.includes("mod")||(yr({kernelName:"Mod",backendName:ro(),kernelFunc:e=>Js((()=>Lu(e.inputs.a,mo(fo(e.inputs.a,e.inputs.b),e.inputs.b))))}),cq.kernels.push("mod"),t.push("mod")),cq.kernels.includes("floormod")||(yr({kernelName:"FloorMod",backendName:ro(),kernelFunc:e=>Js((()=>co(mo(ho(e.inputs.a,e.inputs.b),e.inputs.b),id(e.inputs.a,e.inputs.b))))}),cq.kernels.push("floormod"),t.push("floormod")),!cq.kernels.includes("rotatewithoffset")&&e.softwareKernels&&(yr({kernelName:"RotateWithOffset",backendName:ro(),kernelFunc:e=>Js((()=>{const t=ro();no("cpu");const n=dh.rotateWithOffset(e.inputs.image,e.attrs.radians,e.attrs.fillValue,e.attrs.center);return no(t),n}))}),cq.kernels.push("rotatewithoffset"),t.push("rotatewithoffset")),t.length>0&&e.debug&&zj("registered kernels:",t)}(e.config)}return!0}function NX(e,t){for(const n of e)yr({kernelName:n,backendName:t.backend,kernelFunc:e=>{var a;return t.debug&&zj("kernelFunc",n,t.backend,e),null==(a=null==e?void 0:e.inputs)?void 0:a.info}});cq.kernels=mr(ro()).map((e=>e.kernelName.toLowerCase()))}var TX={};a(TX,{all:()=>mK,body:()=>oK,canvas:()=>fK,face:()=>sK,gesture:()=>dK,hand:()=>lK,init:()=>yK,object:()=>uK,options:()=>LX,person:()=>hK});var RX=e=>{if(e)if(e.getContext){const t=e.getContext("2d",{willReadFrequently:!0});if(t)return t;zj("draw error: cannot get canvas context")}else zj("draw error: canvas context not defined");else zj("draw error: invalid canvas");return null},EX=e=>Math.round(180*e/Math.PI),$X=(e,t,n)=>e.replace(t,"number"==typeof n?n.toFixed(1):n),MX=(e,t)=>{if(!t.useDepth||void 0===e)return t.color;const n=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${n[0]}, ${n[1]}, ${n[2]}, ${t.alpha})`};function FX(e,t,n,a,r){const i=t.replace(/\[.*\]/g,"").split("\n").map((e=>e.trim())),s=Math.max(0,n);for(let t=i.length-1;t>=0;t--){const n=t*r.lineHeight+a;r.shadowColor&&""!==r.shadowColor&&(e.fillStyle=r.shadowColor,e.fillText(i[t],s+5,n+16)),e.fillStyle=r.labelColor,e.fillText(i[t],s+4,n+15)}}function _X(e,t,n,a,r){e.fillStyle=MX(a,r),e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function PX(e,t,n,a,r,i){if(e.beginPath(),e.lineWidth=i.lineWidth,i.useCurves){const i=(t+t+a)/2,s=(n+n+r)/2;e.ellipse(i,s,a/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+i.roundRect,n),e.lineTo(t+a-i.roundRect,n),e.quadraticCurveTo(t+a,n,t+a,n+i.roundRect),e.lineTo(t+a,n+r-i.roundRect),e.quadraticCurveTo(t+a,n+r,t+a-i.roundRect,n+r),e.lineTo(t+i.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-i.roundRect),e.lineTo(t,n+i.roundRect),e.quadraticCurveTo(t,n,t+i.roundRect,n),e.closePath();e.stroke()}function OX(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(const a of t)e.strokeStyle=MX(a[2]||0,n),e.lineTo(Math.trunc(a[0]),Math.trunc(a[1]));e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function DX(e,t,n){if(!(t.length<2))if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2)OX(e,t,n);else{e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){const a=(t[n][0]+t[n+1][0])/2,r=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],a,r)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function zX(e,t,n,a=5){let r,i,s;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),i=a*Math.cos(r)+n[0],s=a*Math.sin(r)+n[1],e.moveTo(i,s),r+=1/3*(2*Math.PI),i=a*Math.cos(r)+n[0],s=a*Math.sin(r)+n[1],e.lineTo(i,s),r+=1/3*(2*Math.PI),i=a*Math.cos(r)+n[0],s=a*Math.sin(r)+n[1],e.lineTo(i,s),e.closePath(),e.stroke(),e.fill()}var LX={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1,faceLabels:"",bodyLabels:"",bodyPartLabels:"",objectLabels:"",handLabels:"",fingerLabels:"",gestureLabels:""},WX={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},BX={count:468,mouth:13,symmetryLine:[13,WX.midwayBetweenEyes[0]]},VX={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},UX=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],GX=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],HX=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];function jX(e){const t=e.map((e=>e[0]));return t.push(e[e.length-1][1]),t}function qX(e){const t=e.map((e=>e[0]));return t.push(e[e.length-1][1]),t}[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178].map((e=>GX[e])),[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152].map((e=>GX[e])),[33,133,362,263,1,78,308].map((e=>GX[e])),jX([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),jX([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),jX([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),jX([[474,475],[475,476],[476,477],[477,474]]),jX([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),jX([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),jX([[469,470],[470,471],[471,472],[472,469]]),jX([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]]);var XX,KX={lips:qX([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),leftEye:qX([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),leftEyebrow:qX([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),leftIris:qX([[474,475],[475,476],[476,477],[477,474]]),rightEye:qX([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),rightEyebrow:qX([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),rightIris:qX([[469,470],[470,471],[471,472],[472,469]]),faceOval:qX([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]])},ZX=Object.entries(KX).map((([e,t])=>t.map((t=>[t,e])))).flat(),YX=(new Map(ZX),[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407]),JX=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],QX=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417];function eK(e,t){var n,a,r,i,s,o,l,u,d;if(!XX.drawLabels||0===(null==(n=XX.faceLabels)?void 0:n.length))return;let p=XX.faceLabels.slice();if(p=$X(p,"[id]",e.id.toFixed(0)),e.score&&(p=$X(p,"[score]",100*e.score)),e.gender&&(p=$X(p,"[gender]",e.gender)),e.genderScore&&(p=$X(p,"[genderScore]",100*e.genderScore)),e.age&&(p=$X(p,"[age]",e.age)),e.distance&&(p=$X(p,"[distance]",100*e.distance)),e.real&&(p=$X(p,"[real]",100*e.real)),e.live&&(p=$X(p,"[live]",100*e.live)),e.emotion&&e.emotion.length>0){const t=e.emotion.map((e=>`${Math.trunc(100*e.score)}% ${e.emotion}`));t.length>3&&(t.length=3),p=$X(p,"[emotions]",t.join(" "))}(null==(r=null==(a=e.rotation)?void 0:a.angle)?void 0:r.roll)&&(p=$X(p,"[roll]",EX(e.rotation.angle.roll))),(null==(s=null==(i=e.rotation)?void 0:i.angle)?void 0:s.yaw)&&(p=$X(p,"[yaw]",EX(e.rotation.angle.yaw))),(null==(l=null==(o=e.rotation)?void 0:o.angle)?void 0:l.pitch)&&(p=$X(p,"[pitch]",EX(e.rotation.angle.pitch))),(null==(d=null==(u=e.rotation)?void 0:u.gaze)?void 0:d.bearing)&&(p=$X(p,"[gaze]",EX(e.rotation.gaze.bearing))),FX(t,p,e.box[0],e.box[1],XX)}function tK(e,t){var n;if(XX.drawGaze&&(null==(n=e.rotation)?void 0:n.angle)&&"undefined"!=typeof Path2D){t.strokeStyle="pink";const n=e.box[0]+e.box[2]/2-e.box[3]*EX(e.rotation.angle.yaw)/90,a=e.box[1]+e.box[3]/2+e.box[2]*EX(e.rotation.angle.pitch)/90,r=new Path2D(`\n      M ${e.box[0]+e.box[2]/2} ${e.box[1]}\n      C\n        ${n} ${e.box[1]},\n        ${n} ${e.box[1]+e.box[3]},\n        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}\n    `),i=new Path2D(`\n      M ${e.box[0]} ${e.box[1]+e.box[3]/2}\n      C \n        ${e.box[0]} ${a},\n        ${e.box[0]+e.box[2]} ${a},\n        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}\n    `);t.stroke(i),t.stroke(r)}}function nK(e,t){var n;if(XX.drawGaze&&(null==(n=e.rotation)?void 0:n.gaze.strength)&&e.rotation.gaze.bearing&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";const n=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];zX(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[n[0],n[1]],4);const a=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];zX(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[a[0],a[1]],4)}}function aK(e,t){if(XX.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let n=0;n<HX.length/3;n++)OX(t,[HX[3*n+0],HX[3*n+1],HX[3*n+2]].map((t=>e.mesh[t])),XX);!function(e,t){var n,a,r,i;if((null==(n=e.annotations)?void 0:n.leftEyeIris)&&(null==(a=e.annotations)?void 0:a.leftEyeIris[0])){t.strokeStyle=XX.useDepth?"rgba(255, 200, 255, 0.3)":XX.color,t.beginPath();const n=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,a=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],n,a,0,0,2*Math.PI),t.stroke(),XX.fillPolygons&&(t.fillStyle=XX.useDepth?"rgba(255, 255, 200, 0.3)":XX.color,t.fill())}if((null==(r=e.annotations)?void 0:r.rightEyeIris)&&(null==(i=e.annotations)?void 0:i.rightEyeIris[0])){t.strokeStyle=XX.useDepth?"rgba(255, 200, 255, 0.3)":XX.color,t.beginPath();const n=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,a=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],n,a,0,0,2*Math.PI),t.stroke(),XX.fillPolygons&&(t.fillStyle=XX.useDepth?"rgba(255, 255, 200, 0.3)":XX.color,t.fill())}}(e,t)}}function rK(e,t){if(XX.drawPoints)if((null==e?void 0:e.mesh.length)>=468)for(let n=0;n<e.mesh.length;n++)_X(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2],XX),XX.drawAttention&&(YX.includes(n)&&_X(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]+127,XX),JX.includes(n)&&_X(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,XX),QX.includes(n)&&_X(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,XX));else for(const[n,a]of Object.entries((null==e?void 0:e.annotations)||{})){if(!(null==a?void 0:a[0]))continue;const e=a[0];_X(t,e[0],e[1],0,XX),XX.drawLabels&&FX(t,n,e[0],e[1],XX)}}function iK(e,t){XX.drawBoxes&&PX(t,e.box[0],e.box[1],e.box[2],e.box[3],XX)}function sK(e,t,n){if(XX=Bj(LX,n),!t||!e)return;const a=RX(e);if(a){a.font=XX.font,a.strokeStyle=XX.color,a.fillStyle=XX.color;for(const e of t)iK(e,a),eK(e,a),e.mesh&&e.mesh.length>0&&(rK(e,a),aK(e,a),tK(e,a),nK(e,a))}}function oK(e,t,n){var a,r;const i=Bj(LX,n);if(!t||!e)return;const s=RX(e);if(s){s.lineJoin="round";for(let e=0;e<t.length;e++){if(s.strokeStyle=i.color,s.fillStyle=i.color,s.lineWidth=i.lineWidth,s.font=i.font,i.drawBoxes&&t[e].box&&4===t[e].box.length&&(PX(s,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],i),i.drawLabels&&(null==(a=i.bodyLabels)?void 0:a.length)>0)){let n=i.bodyLabels.slice();n=$X(n,"[id]",t[e].id.toFixed(0)),n=$X(n,"[score]",100*t[e].score),FX(s,n,t[e].box[0],t[e].box[1],i)}if(i.drawPoints&&t[e].keypoints)for(let n=0;n<t[e].keypoints.length;n++)t[e].keypoints[n].score&&0!==t[e].keypoints[n].score&&(s.fillStyle=MX(t[e].keypoints[n].position[2],i),_X(s,t[e].keypoints[n].position[0],t[e].keypoints[n].position[1],0,i));if(i.drawLabels&&(null==(r=i.bodyPartLabels)?void 0:r.length)>0&&t[e].keypoints){s.font=i.font;for(const n of t[e].keypoints){if(!n.score||0===n.score)continue;let e=i.bodyPartLabels.slice();e=$X(e,"[label]",n.part),e=$X(e,"[score]",100*n.score),FX(s,e,n.position[0],n.position[1],i)}}if(i.drawPolygons&&t[e].keypoints&&t[e].annotations)for(const n of Object.values(t[e].annotations))for(const e of n)DX(s,e,i)}}}function lK(e,t,n){var a,r;const i=Bj(LX,n);if(!t||!e)return;const s=RX(e);if(s){s.lineJoin="round",s.font=i.font;for(const e of t){if(i.drawBoxes){if(s.strokeStyle=i.color,s.fillStyle=i.color,PX(s,e.box[0],e.box[1],e.box[2],e.box[3],i),i.drawLabels&&(null==(a=i.handLabels)?void 0:a.length)>0){let t=i.handLabels.slice();t=$X(t,"[id]",e.id.toFixed(0)),t=$X(t,"[label]",e.label),t=$X(t,"[score]",100*e.score),FX(s,t,e.box[0],e.box[1],i)}s.stroke()}if(i.drawPoints&&e.keypoints&&e.keypoints.length>0)for(const t of e.keypoints)s.fillStyle=MX(t[2],i),_X(s,t[0],t[1],0,i);if(i.drawLabels&&e.annotations&&(null==(r=i.fingerLabels)?void 0:r.length)>0)for(const[t,n]of Object.entries(e.annotations)){let e=i.fingerLabels.slice();e=$X(e,"[label]",t),FX(s,e,n[n.length-1][0],n[n.length-1][1],i)}if(i.drawPolygons&&e.annotations){const t=e=>{if(e&&0!==e.length&&e[0])for(let t=0;t<e.length;t++){s.beginPath();const n=e[t][2]||0;s.strokeStyle=MX(t*n,i),s.moveTo(e[t>0?t-1:0][0],e[t>0?t-1:0][1]),s.lineTo(e[t][0],e[t][1]),s.stroke()}};s.lineWidth=i.lineWidth,t(e.annotations.index),t(e.annotations.middle),t(e.annotations.ring),t(e.annotations.pinky),t(e.annotations.thumb)}}}}function uK(e,t,n){var a;const r=Bj(LX,n);if(!t||!e)return;const i=RX(e);if(i){i.lineJoin="round",i.font=r.font;for(const e of t)if(r.drawBoxes){if(i.strokeStyle=r.color,i.fillStyle=r.color,PX(i,e.box[0],e.box[1],e.box[2],e.box[3],r),r.drawLabels&&(null==(a=r.objectLabels)?void 0:a.length)>0){let t=r.objectLabels.slice();t=$X(t,"[id]",e.id.toFixed(0)),t=$X(t,"[label]",e.label),t=$X(t,"[score]",100*e.score),FX(i,t,e.box[0],e.box[1],r)}i.stroke()}}}function dK(e,t,n){var a;const r=Bj(LX,n);if(t&&e&&r.drawGestures&&(null==(a=r.gestureLabels)?void 0:a.length)>0){const n=RX(e);if(!n)return;n.font=r.font,n.fillStyle=r.color;let a=1;for(let e=0;e<t.length;e++){const[i,s]=Object.entries(t[e]);if(s.length>1&&s[1].length>0){const e=i[1]>0?`#${i[1]}`:"";let t=r.gestureLabels.slice();t=$X(t,"[where]",i[0]),t=$X(t,"[who]",e),t=$X(t,"[what]",s[1]),FX(n,t,8,2+a*r.lineHeight,r),a+=1}}}}var pK={face:"face\n    confidence: [score]%\n    [gender] [genderScore]%\n    age: [age] years\n    distance: [distance]cm\n    real: [real]%\n    live: [live]%\n    [emotions]\n    roll: [roll]° yaw:[yaw]° pitch:[pitch]°\n    gaze: [gaze]°",body:"body [score]%",bodyPart:"[label] [score]%",object:"[label] [score]%",hand:"[label] [score]%",finger:"[label]",gesture:"[where] [who]: [what]"},cK=0;function hK(e,t,n){const a=Bj(LX,n);if(!t||!e)return;const r=RX(e);if(r){r.lineJoin="round",r.font=a.font;for(let e=0;e<t.length;e++)if(a.drawBoxes){if(r.strokeStyle=a.color,r.fillStyle=a.color,PX(r,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],a),a.drawLabels){const n=`person #${e}`;a.shadowColor&&""!==a.shadowColor&&(r.fillStyle=a.shadowColor,r.fillText(n,t[e].box[0]+3,1+t[e].box[1]+a.lineHeight,t[e].box[2])),r.fillStyle=a.labelColor,r.fillText(n,t[e].box[0]+2,0+t[e].box[1]+a.lineHeight,t[e].box[2])}r.stroke()}}}function fK(e,t){if(!e||!t)return;const n=RX(t);n&&n.drawImage(e,0,0)}async function mK(e,t,n){if(!(null==t?void 0:t.performance)||!e)return null;const a=Lj(),r=Bj(LX,n),i=Promise.all([sK(e,t.face,r),oK(e,t.body,r),lK(e,t.hand,r),uK(e,t.object,r),dK(e,t.gesture,r)]);return cK=cq.perfadd?cK+Math.round(Lj()-a):Math.round(Lj()-a),t.performance.draw=cK,i}function yK(){LX.faceLabels=pK.face,LX.bodyLabels=pK.body,LX.bodyPartLabels=pK.bodyPart,LX.handLabels=pK.hand,LX.fingerLabels=pK.finger,LX.objectLabels=pK.object,LX.gestureLabels=pK.gesture}var gK={};a(gK,{connected:()=>vK,kpt:()=>bK});var AK,xK,bK=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],vK={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},wK=224,kK=[8,16,32,32,32];var IK,SK=[5,5];function CK(e,t=[1,1]){const n=[e.map((e=>e[0])),e.map((e=>e[1]))],a=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],i=[a[0],a[1],r[0]-a[0],r[1]-a[1]];return{box:i,boxRaw:[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]]}}function NK(e,t=[1,1]){const n=[e.map((e=>e[0])),e.map((e=>e[1]))],a=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],i=[(a[0]+r[0])/2,(a[1]+r[1])/2],s=Math.max(i[0]-a[0],i[1]-a[1],-i[0]+r[0],-i[1]+r[1]),o=[Math.trunc(i[0]-s),Math.trunc(i[1]-s),Math.trunc(2*s),Math.trunc(2*s)];return{box:o,boxRaw:[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]]}}function TK(e,t){const n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var RK=256,EK=Number.MAX_SAFE_INTEGER,$K={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},MK=[],FK=[[0,0],[0,0],[0,0],[0,0]],_K=0,PK=e=>1-1/(1+Math.exp(e));function OK(e,t,n){var a,r;const i={};if(!(null==(a=null==e?void 0:e.shape)?void 0:a[1])||!(null==(r=null==e?void 0:e.shape)?void 0:r[2]))return e;let s;if(n&&(i.cropped=dh.cropAndResize(e,[n],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){const n=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];FK=[[0,0],n,a,[0,0]],i.pad=hd(i.cropped||e,FK),i.resize=dh.resizeBilinear(i.pad,[t,t]),s=fo(i.resize,IX.tf255)}else e.shape[1]!==t?(i.resize=dh.resizeBilinear(i.cropped||e,[t,t]),s=fo(i.resize,IX.tf255)):s=fo(i.cropped||e,IX.tf255);return Object.keys(i).forEach((e=>Qs(i[e]))),s}async function DK(e,t,n){if(!(null==IK?void 0:IK.executor))return null;const a={};[a.ld,a.segmentation,a.heatmap,a.world,a.poseflag]=null==IK?void 0:IK.execute(e,$K.landmarks);const r=(await a.poseflag.data())[0],i=await a.ld.data(),s=await a.world.data();Object.keys(a).forEach((e=>Qs(a[e])));const o=[];for(let e=0;e<i.length/5;e++){const t=PK(i[5*e+3]),a=PK(i[5*e+4]),l=Math.trunc(100*t*a*r)/100,u=[i[5*e+0]/RK,i[5*e+1]/RK,i[5*e+2]+0],d=[Math.trunc(n[0]*u[0]),Math.trunc(n[1]*u[1]),u[2]],p=[s[5*e+0],s[5*e+1],s[5*e+2]+0];o.push({part:bK[e],positionRaw:u,position:d,distance:p,score:l})}if(r<(t.body.minConfidence||0))return null;!function(e){const t=e.find((e=>"leftPalm"===e.part)),n=e.find((e=>"leftWrist"===e.part)),a=e.find((e=>"leftIndex"===e.part));t.position[2]=((n.position[2]||0)+(a.position[2]||0))/2;const r=e.find((e=>"rightPalm"===e.part)),i=e.find((e=>"rightWrist"===e.part)),s=e.find((e=>"rightIndex"===e.part));r.position[2]=((i.position[2]||0)+(s.position[2]||0))/2}(o);const l=function(e,t,n){for(const n of e)n.position=[Math.trunc(n.position[0]*(t[0]+FK[2][0]+FK[2][1])/t[0]-FK[2][0]),Math.trunc(n.position[1]*(t[1]+FK[1][0]+FK[1][1])/t[1]-FK[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];return e}(o,n),u=CK(l.map((e=>e.position)),[n[0],n[1]]),d={};for(const[e,t]of Object.entries(vK)){const n=[];for(let e=0;e<t.length-1;e++){const a=l.find((n=>n.part===t[e])),r=l.find((n=>n.part===t[e+1]));a&&r&&n.push([a.position,r.position])}d[e]=n}return{id:0,score:Math.trunc(100*r)/100,box:u.box,boxRaw:u.boxRaw,keypoints:l,annotations:d}}async function zK(e,t){var n,a,r;const i=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>Lj()-_K,o=EK<(t.body.skipFrames||0);if(t.skipAllowed&&s&&o&&null!==MK)EK++;else{let s=[];if(null==(a=null==(n=t.body)?void 0:n.detector)?void 0:a.enabled){const n=OK(e,224);s=await async function(e,t,n){const a={};a.res=null==AK?void 0:AK.execute(e,["Identity"]),a.logitsRaw=Zo(a.res,[0,0,0],[1,-1,1]),a.boxesRaw=Zo(a.res,[0,0,1],[1,-1,-1]),a.logits=kp(a.logitsRaw),a.boxes=kp(a.boxesRaw);const r=await async function(e,t,n,a){var r,i;const s=[],o={};o.boxes=function(e,t){return Js((()=>{const n=bp(e,12,1);let a=kp(n[0]),r=kp(n[1]),i=kp(n[2]),s=kp(n[3]);a=co(fo(a,wK),t.x),r=co(fo(r,wK),t.y),i=mo(fo(i,wK),SK[0]),s=mo(fo(s,wK),SK[1]);const o=Lu(a,fo(i,2)),l=Lu(r,fo(s,2)),u=co(o,i),d=co(l,s);return Ip([o,l,u,d],1)}))}(e,xK),o.scores=Ko(t),o.nms=await dh.nonMaxSuppressionAsync(o.boxes,o.scores,1,(null==(r=n.body.detector)?void 0:r.minConfidence)||.1,(null==(i=n.body.detector)?void 0:i.iouThreshold)||.1);const l=await o.nms.data(),u=await o.scores.data(),d=await o.boxes.array();for(const e of Array.from(l)){const t=u[e],n=d[e],r={score:t,boxRaw:n,box:[Math.round(n[0]*a[0]),Math.round(n[1]*a[1]),Math.round(n[2]*a[0]),Math.round(n[3]*a[1])]};s.push(r)}return Object.keys(o).forEach((e=>Qs(o[e]))),s}(a.boxes,a.logits,t,n);return Object.keys(a).forEach((e=>Qs(a[e]))),r}(n,t,i),Qs(n)}else s=[{box:[0,0,0,0],boxRaw:[0,0,1,1],score:0}];for(let n=0;n<s.length;n++){const a=OK(e,256,null==(r=s[n])?void 0:r.boxRaw);MK.length=0;const o=await DK(a,t,i);Qs(a),o&&(o.id=n,MK.push(o))}_K=Lj(),EK=0}return MK}var LK,WK=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],BK=0,VK=[],UK=0,GK=Number.MAX_SAFE_INTEGER;async function HK(e,t){if(!(null==LK?void 0:LK.executor))return[];const n=(t.object.skipTime||0)>Lj()-UK,a=GK<(t.object.skipFrames||0);return t.skipAllowed&&n&&a&&VK.length>0?(GK++,VK):(GK=0,new Promise((async n=>{const a=[e.shape[2]||0,e.shape[1]||0],r=dh.resizeBilinear(e,[BK,BK]),i=t.object.enabled?null==LK?void 0:LK.execute(r,["tower_0/detections"]):null;UK=Lj(),Qs(r);const s=await async function(e,t,n){if(!e)return[];const a={},r=[],i=await e.array();a.squeeze=kp(e);const s=bp(a.squeeze,6,1);a.stack=Ip([s[1],s[0],s[3],s[2]],1),a.boxes=kp(a.stack),a.scores=kp(s[4]),a.classes=kp(s[5]),Qs([e,...s]),a.nms=await dh.nonMaxSuppressionAsync(a.boxes,a.scores,n.object.maxDetected||0,n.object.iouThreshold,n.object.minConfidence||0);const o=await a.nms.data();let l=0;for(const e of Array.from(o)){const n=Math.trunc(100*i[0][e][4])/100,a=i[0][e][5];if(Number.isNaN(a))continue;const s=WK[a].label,[o,u]=[i[0][e][0]/BK,i[0][e][1]/BK],d=[o,u,i[0][e][2]/BK-o,i[0][e][3]/BK-u],p=[Math.trunc(d[0]*t[0]),Math.trunc(d[1]*t[1]),Math.trunc(d[2]*t[0]),Math.trunc(d[3]*t[1])];r.push({id:l++,score:n,class:a,label:s,box:p,boxRaw:d})}return Object.keys(a).forEach((e=>Qs(a[e]))),r}(i,a,t);VK=s,n(s)})))}var jK={};a(jK,{connected:()=>KK,kpt:()=>XK});var qK,XK=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],KK={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},ZK=0,YK={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},JK=Number.MAX_SAFE_INTEGER;async function QK(e,t){const[n,a]=e.shape,r=Go(e,[a*n]),i=Ql(r,0),s=(await i.data())[0];if(s>t){const e=wo(r,0),t=id(e,n),a=(await t.data())[0],o=fo(e,n),l=(await o.data())[0];return Qs([r,i,e,t,o]),[a,l,s]}return Qs([r,i]),[0,0,s]}async function eZ(e,t){if(!(null==qK?void 0:qK.executor)||!(null==qK?void 0:qK.inputs[0].shape))return[];const n=(t.body.skipTime||0)>Lj()-ZK,a=JK<(t.body.skipFrames||0);return t.skipAllowed&&n&&a&&Object.keys(YK.keypoints).length>0?(JK++,[YK]):(JK=0,new Promise((async n=>{const a=Js((()=>{var t,n;const a=dh.resizeBilinear(e,[(null==(t=null==qK?void 0:qK.inputs[0].shape)?void 0:t[2])||0,(null==(n=null==qK?void 0:qK.inputs[0].shape)?void 0:n[1])||0],!1),r=mo(a,IX.tf2);return Lu(r,IX.tf1)}));let r;if(t.body.enabled&&(r=null==qK?void 0:qK.execute(a)),ZK=Lj(),Qs(a),r){YK.keypoints.length=0;const n=kp(r);Qs(r);const a=Up(n,2);Qs(n);for(let n=0;n<a.length;n++){const[r,i,s]=await QK(a[n],t.body.minConfidence);s>(t.body.minConfidence||0)&&YK.keypoints.push({score:Math.round(100*s)/100,part:XK[n],positionRaw:[r/qK.inputs[0].shape[2],i/qK.inputs[0].shape[1]],position:[Math.round(e.shape[2]*r/qK.inputs[0].shape[2]),Math.round(e.shape[1]*i/qK.inputs[0].shape[1])]})}a.forEach((e=>Qs(e)))}YK.score=YK.keypoints.reduce(((e,t)=>t.score>e?t.score:e),0);const i=YK.keypoints.map((e=>e.position[0])),s=YK.keypoints.map((e=>e.position[1]));YK.box=[Math.min(...i),Math.min(...s),Math.max(...i)-Math.min(...i),Math.max(...s)-Math.min(...s)];const o=YK.keypoints.map((e=>e.positionRaw[0])),l=YK.keypoints.map((e=>e.positionRaw[1]));YK.boxRaw=[Math.min(...o),Math.min(...l),Math.max(...o)-Math.min(...o),Math.max(...l)-Math.min(...l)];for(const[e,n]of Object.entries(KK)){const a=[];for(let e=0;e<n.length-1;e++){const r=YK.keypoints.find((t=>t.part===n[e])),i=YK.keypoints.find((t=>t.part===n[e+1]));r&&i&&r.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&a.push([r.position,i.position])}YK.annotations[e]=a}n([YK])})))}var tZ=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],nZ=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],aZ=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],rZ=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],iZ=(e,t,n)=>({startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],landmarks:e.landmarks.map((e=>[(e[0]+n[0])*t[0],(e[1]+n[1])*t[1]])),confidence:e.confidence}),sZ=(e,t,n)=>{const a=t.shape[1],r=t.shape[2],i=[e.startPoint[1]/a,e.startPoint[0]/r,e.endPoint[1]/a,e.endPoint[0]/r],s=dh.cropAndResize(t,[i],[0],n),o=fo(s,IX.tf255);return Qs(s),o},oZ=(e,t)=>{const n=nZ(e),a=tZ(e),r=[t*a[0]/2,t*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence,size:a}},lZ=e=>{const t=nZ(e),n=tZ(e),a=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-a),Math.round(t[1]-a)],endPoint:[Math.round(t[0]+a),Math.round(t[1]+a)],landmarks:e.landmarks,confidence:e.confidence,size:[Math.round(n[0]),Math.round(n[1])]}},uZ=[[1,0,0],[0,1,0],[0,0,1]],dZ=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],pZ=(e,t)=>{let n=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a];return n},cZ=(e,t)=>{const n=[];for(let a=0;a<e.length;a++)n.push(e[a][t]);return n},hZ=(e,t)=>{const n=[],a=e.length;for(let r=0;r<a;r++){n.push([]);for(let i=0;i<a;i++)n[r].push(pZ(e[r],cZ(t,i)))}return n},fZ=(e,t)=>{const n=Math.cos(e),a=Math.sin(e),r=[[n,-a,0],[a,n,0],[0,0,1]],i=dZ(t[0],t[1]),s=hZ(i,r),o=dZ(-t[0],-t[1]);return hZ(s,o)},mZ=(e,t)=>[pZ(e,t[0]),pZ(e,t[1])];function yZ(e,t,n,a,r){const i=tZ(t),s=e.map((e=>[i[0]/r*(e[0]-r/2),i[1]/r*(e[1]-r/2),e[2]||0])),o=n&&0!==n&&Math.abs(n)>.2,l=o?fZ(n,[0,0]):uZ,u=o?s.map((e=>[...mZ(e,l),e[2]])):s,d=o?(e=>{const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],a=[-pZ(t[0],n),-pZ(t[1],n)];return[t[0].concat(a[0]),t[1].concat(a[1]),[0,0,1]]})(a):uZ,p=nZ(t),c=[pZ(p,d[0]),pZ(p,d[1])];return u.map((e=>[Math.trunc(e[0]+c[0]),Math.trunc(e[1]+c[1]),Math.trunc(e[2]||0)]))}function gZ(e,t,n,a){const r=t.landmarks.length>=BX.count?BX.symmetryLine:VX.symmetryLine;let i,s=0,o=uZ;if(e&&cq.kernels.includes("rotatewithoffset"))if(s=((e,t)=>{return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n})(t.landmarks[r[0]],t.landmarks[r[1]]),s&&0!==s&&Math.abs(s)>.2){const e=nZ(t),r=[e[0]/n.shape[2],e[1]/n.shape[1]],l=dh.rotateWithOffset(n,s,0,[r[0],r[1]]);o=fZ(-s,e),i=sZ(t,l,[a,a]),Qs(l)}else i=sZ(t,n,[a,a]);else i=sZ(t,n,[a,a]);return[s,o,i]}var AZ,xZ,bZ=(e,t)=>{const n=(e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]})(e),a=tZ(t);return{startPoint:[n[0]-a[0]/2,n[1]-a[1]/2],endPoint:[n[0]+a[0]/2,n[1]+a[1]/2]}},vZ=null,wZ=0,kZ=null;var IZ=0,SZ=WX.leftEyeLower0,CZ=WX.rightEyeLower0,NZ={leftBounds:[SZ[0],SZ[SZ.length-1]],rightBounds:[CZ[0],CZ[CZ.length-1]]},TZ=3,RZ=4,EZ=71,$Z=76;function MZ(e,t,n,a){for(let r=0;r<UX.length;r++){const{key:i,indices:s}=UX[r],o=WX[`${n}${i}`];if(!a||a.includes(i))for(let n=0;n<s.length;n++){const a=s[n];e[o[n]]=[t[a][0],t[a][1],(t[a][2]+e[o[n]][2])/2]}}}var FZ=(e,t,n,a,r,i=!1)=>{const s=lZ(oZ((e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}})([e[n],e[a]]),2.3)),o=tZ(s);let l=dh.cropAndResize(t,[[s.startPoint[1]/r,s.startPoint[0]/r,s.endPoint[1]/r,s.endPoint[0]/r]],[0],[IZ,IZ]);if(i&&cq.kernels.includes("flipleftright")){const e=dh.flipLeftRight(l);Qs(l),l=e}return{box:s,boxSize:o,crop:l}},_Z=(e,t,n,a=!1)=>{const r=[];for(let i=0;i<$Z;i++){const s=e[3*i],o=e[3*i+1],l=e[3*i+2];r.push([(a?1-s/IZ:s/IZ)*n[0]+t.startPoint[0],o/IZ*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(EZ)}},PZ=(e,t,n)=>{const a=e[WX[`${n}EyeUpper0`][TZ]][2],r=e[WX[`${n}EyeLower0`][RZ]][2],i=(a+r)/2;return t.map(((e,t)=>{let n=i;return 2===t?n=a:4===t&&(n=r),[e[0],e[1],n]}))};async function OZ(e,t,n){if(!(null==xZ?void 0:xZ.executor))return e;const{box:a,boxSize:r,crop:i}=FZ(e,t,NZ.leftBounds[0],NZ.leftBounds[1],n,!0),{box:s,boxSize:o,crop:l}=FZ(e,t,NZ.rightBounds[0],NZ.rightBounds[1],n,!0),u=qo([i,l]);Qs(i),Qs(l);const d=xZ.execute(u);Qs(u);const p=await d.data();Qs(d);const c=p.slice(0,3*$Z),{rawCoords:h,iris:f}=_Z(c,a,r,!0),m=p.slice(3*$Z),{rawCoords:y,iris:g}=_Z(m,s,o,!1),A=(e=>e[NZ.leftBounds[0]][2]-e[NZ.rightBounds[0]][2])(e);Math.abs(A)<30?(MZ(e,h,"left",null),MZ(e,y,"right",null)):A<1?MZ(e,h,"left",["EyeUpper0","EyeLower0"]):MZ(e,y,"right",["EyeUpper0","EyeLower0"]);const x=PZ(e,f,"left"),b=PZ(e,g,"right");return e.concat(x).concat(b)}async function DZ(e,t){var n,a,r,i,s,o,l,u,d,p;const c={lips:await(null==(a=null==(n=t.filter((e=>160===e.size)))?void 0:n[0])?void 0:a.data()),irisL:await(null==(i=null==(r=t.filter((e=>10===e.size)))?void 0:r[0])?void 0:i.data()),eyeL:await(null==(o=null==(s=t.filter((e=>142===e.size)))?void 0:s[0])?void 0:o.data()),irisR:await(null==(u=null==(l=t.filter((e=>10===e.size)))?void 0:l[1])?void 0:u.data()),eyeR:await(null==(p=null==(d=t.filter((e=>142===e.size)))?void 0:d[1])?void 0:p.data())};for(const t of Object.values(c))if(!t)return e;const h=JX.reduce(((t,n)=>t+e[n][2]),0)/JX.length;for(let t=0;t<c.irisL.length/2;t++)e.push([c.irisL[2*t+0],c.irisL[2*t+1],h]);const f=QX.reduce(((t,n)=>t+e[n][2]),0)/QX.length;for(let t=0;t<c.irisR.length/2;t++)e.push([c.irisR[2*t+0],c.irisR[2*t+1],f]);for(let t=0;t<c.eyeL.length/2;t++)e[JX[t]]=[c.eyeL[2*t+0],c.eyeL[2*t+1],e[JX[t]][2]];for(let t=0;t<c.eyeR.length/2;t++)e[QX[t]]=[c.eyeR[2*t+0],c.eyeR[2*t+1],e[QX[t]][2]];for(let t=0;t<c.lips.length/2;t++)e[YX[t]]=[c.lips[2*t+0],c.lips[2*t+1],e[YX[t]][2]];return e}var zZ,LZ,WZ={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},BZ=null,VZ=0,UZ=HX,GZ=GX,HZ=[],jZ=[],qZ=0,XZ=0,KZ=Number.MAX_SAFE_INTEGER,ZZ=!1;async function YZ(e,t,n,a){var r,i;if(!zZ)return[];const s=KZ<((null==(r=t.face.emotion)?void 0:r.skipFrames)||0),o=((null==(i=t.face.emotion)?void 0:i.skipTime)||0)>Lj()-XZ;return t.skipAllowed&&o&&s&&qZ===a&&jZ[n]&&jZ[n].length>0?(KZ++,jZ[n]):(KZ=0,new Promise((async r=>{var i,s,o;const l=[];if(null==(i=t.face.emotion)?void 0:i.enabled){const n={},a=(null==zZ?void 0:zZ.inputs[0].shape)?zZ.inputs[0].shape[2]:0;if((null==(s=t.face.emotion)?void 0:s.crop)>0){const r=null==(o=t.face.emotion)?void 0:o.crop,i=[[r,r,1-r,1-r]];n.resize=dh.cropAndResize(e,i,[0],[a,a])}else n.resize=dh.resizeBilinear(e,[a,a],!1);ZZ?(n.mul=mo(n.resize,255),n.normalize=Lu(n.mul,[103.939,116.779,123.68]),n.emotion=null==zZ?void 0:zZ.execute(n.normalize)):(n.channels=mo(n.resize,IX.rgb),n.grayscale=iu(n.channels,3,!0),n.grayscaleSub=Lu(n.grayscale,IX.tf05),n.grayscaleMul=mo(n.grayscaleSub,IX.tf2),n.emotion=null==zZ?void 0:zZ.execute(n.grayscaleMul)),XZ=Lj();const r=await n.emotion.data();for(let e=0;e<r.length;e++)r[e]>(t.face.emotion.minConfidence||0)&&l.push({score:Math.min(.99,Math.trunc(100*r[e])/100),emotion:HZ[e]});l.sort(((e,t)=>t.score-e.score)),Object.keys(n).forEach((e=>Qs(n[e])))}jZ[n]=l,qZ=a,r(l)})))}var JZ=[],QZ=0,eY=0,tY=Number.MAX_SAFE_INTEGER;async function nY(e,t,n,a){var r,i,s,o;const l={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(!(null==LZ?void 0:LZ.executor))return l;const u=tY<((null==(r=t.face.description)?void 0:r.skipFrames)||0),d=((null==(i=t.face.description)?void 0:i.skipTime)||0)>Lj()-QZ;return t.skipAllowed&&u&&d&&eY===a&&(null==(s=null==JZ?void 0:JZ[n])?void 0:s.age)>0&&(null==(o=null==JZ?void 0:JZ[n])?void 0:o.genderScore)>0?(tY++,JZ[n]):(tY=0,new Promise((async r=>{var i;if(null==(i=t.face.description)?void 0:i.enabled){const n=function(e,t){var n,a;const r=e.image||e.tensor||e;if(!(null==LZ?void 0:LZ.inputs[0].shape))return r;let i;if((null==(n=t.face.description)?void 0:n.crop)>0){const e=null==(a=t.face.description)?void 0:a.crop,n=[[e,e,1-e,1-e]];i=dh.cropAndResize(r,n,[0],[LZ.inputs[0].shape[2],LZ.inputs[0].shape[1]])}else i=dh.resizeBilinear(r,[LZ.inputs[0].shape[2],LZ.inputs[0].shape[1]],!1);const s=mo(i,IX.tf255);return Qs(i),s}(e,t),a=null==LZ?void 0:LZ.execute(n);QZ=Lj(),Qs(n);const r=a.find((e=>1===e.shape[1])),i=await r.data(),s=Math.trunc(200*Math.abs(i[0]-.5))/100;s>(t.face.description.minConfidence||0)&&(l.gender=i[0]<=.5?"female":"male",l.genderScore=Math.min(.99,s));const o=wo(a.find((e=>100===e.shape[1])),1),u=(await o.data())[0];Qs(o);const d=a.find((e=>100===e.shape[1])),p=await d.data();l.age=Math.round(p[u-1]>p[u+1]?10*u-100*p[u-1]:10*u+100*p[u+1])/10,(Number.isNaN(i[0])||Number.isNaN(p[0]))&&zj("faceres error:",{model:LZ,result:a});const c=a.find((e=>1024===e.shape[1])),h=c?await c.data():[];l.descriptor=Array.from(h),a.forEach((e=>Qs(e)))}JZ[n]=l,eY=a,r(l)})))}var aY,rY=.1;function iY(e,t,n){let a=!1,r=n.length-1;for(let i=0;i<n.length;r=i++)n[i].y>t!=n[r].y>t&&e<(n[r].x-n[i].x)*(t-n[i].y)/(n[r].y-n[i].y)+n[i].x&&(a=!a);return a}async function sY(e){if(!e.tensor)return e.tensor;if(!e.mesh||e.mesh.length<100)return e.tensor;const t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,a=await e.tensor.buffer();let r=[];for(const t of WX.silhouette)r.push({x:(e.mesh[t][0]-e.box[0])/e.box[2],y:(e.mesh[t][1]-e.box[1])/e.box[3]});r=r.map((e=>({x:e.x>.5?e.x+rY:e.x-rY,y:e.y>.5?e.y+rY:e.y-rY})));for(let e=0;e<t;e++)for(let i=0;i<n;i++)iY(e/t,i/t,r)||(a.set(.5*a.get(0,i,e,0),0,i,e,0),a.set(.5*a.get(0,i,e,1),0,i,e,1),a.set(.5*a.get(0,i,e,2),0,i,e,2));return a.toTensor()}var oY,lY=[],uY=Number.MAX_SAFE_INTEGER,dY=0,pY=0;async function cY(e,t,n,a){var r,i;if(!(null==aY?void 0:aY.executor))return 0;const s=((null==(r=t.face.antispoof)?void 0:r.skipTime)||0)>Lj()-pY,o=uY<((null==(i=t.face.antispoof)?void 0:i.skipFrames)||0);return t.skipAllowed&&s&&o&&dY===a&&lY[n]?(uY++,lY[n]):(uY=0,new Promise((async t=>{const r=dh.resizeBilinear(e,[(null==aY?void 0:aY.inputs[0].shape)?aY.inputs[0].shape[2]:0,(null==aY?void 0:aY.inputs[0].shape)?aY.inputs[0].shape[1]:0],!1),i=null==aY?void 0:aY.execute(r),s=(await i.data())[0];lY[n]=Math.round(100*s)/100,dY=a,pY=Lj(),Qs([r,i]),t(lY[n])})))}var hY,fY=[],mY=Number.MAX_SAFE_INTEGER,yY=0,gY=0;async function AY(e,t,n,a){var r,i;if(!(null==oY?void 0:oY.executor))return 0;const s=((null==(r=t.face.liveness)?void 0:r.skipTime)||0)>Lj()-gY,o=mY<((null==(i=t.face.liveness)?void 0:i.skipFrames)||0);return t.skipAllowed&&s&&o&&yY===a&&fY[n]?(mY++,fY[n]):(mY=0,new Promise((async t=>{const r=dh.resizeBilinear(e,[(null==oY?void 0:oY.inputs[0].shape)?oY.inputs[0].shape[2]:0,(null==oY?void 0:oY.inputs[0].shape)?oY.inputs[0].shape[1]:0],!1),i=null==oY?void 0:oY.execute(r),s=(await i.data())[0];fY[n]=Math.round(100*s)/100,yY=a,gY=Lj(),Qs([r,i]),t(fY[n])})))}var xY,bY=[],vY=["white","black","asian","indian","other"],wY=[15,23,28,35.5,45.5,55.5,65],kY=0,IY=0,SY=Number.MAX_SAFE_INTEGER;async function CY(e,t,n,a){var r,i;if(!hY)return{age:0,gender:"unknown",genderScore:0,race:[]};const s=SY<((null==(r=t.face.gear)?void 0:r.skipFrames)||0),o=((null==(i=t.face.gear)?void 0:i.skipTime)||0)>Lj()-IY;return t.skipAllowed&&o&&s&&kY===a&&bY[n]?(SY++,bY[n]):(SY=0,new Promise((async r=>{var i,s,o,l;if(!(null==hY?void 0:hY.inputs[0].shape))return;const u={};let d=[[0,.1,.9,.9]];if((null==(i=t.face.gear)?void 0:i.crop)>0){const e=null==(s=t.face.gear)?void 0:s.crop;d=[[e,e,1-e,1-e]]}u.resize=dh.cropAndResize(e,d,[0],[hY.inputs[0].shape[2],hY.inputs[0].shape[1]]);const p={age:0,gender:"unknown",genderScore:0,race:[]};(null==(o=t.face.gear)?void 0:o.enabled)&&([u.age,u.gender,u.race]=hY.execute(u.resize,["age_output","gender_output","race_output"]));const c=await u.gender.data();p.gender=c[0]>c[1]?"male":"female",p.genderScore=Math.round(100*(c[0]>c[1]?c[0]:c[1]))/100;const h=await u.race.data();for(let e=0;e<h.length;e++)h[e]>((null==(l=t.face.gear)?void 0:l.minConfidence)||.2)&&p.race.push({score:Math.round(100*h[e])/100,race:vY[e]});p.race.sort(((e,t)=>t.score-e.score));const f=Array.from(await u.age.data()).map(((e,t)=>[wY[t],e])).sort(((e,t)=>t[1]-e[1]));let m=f[0][0];for(let e=1;e<f.length;e++)m+=f[e][1]*(f[e][0]-m);p.age=Math.round(10*m)/10,Object.keys(u).forEach((e=>Qs(u[e]))),bY[n]=p,kY=a,IY=Lj(),r(p)})))}var NY,TY=[],RY=0,EY=0,$Y=Number.MAX_SAFE_INTEGER;async function MY(e,t,n,a){var r,i,s,o;if(!xY)return{age:0};const l=$Y<((null==(r=t.face.ssrnet)?void 0:r.skipFrames)||0),u=((null==(i=t.face.ssrnet)?void 0:i.skipTime)||0)>Lj()-EY;return t.skipAllowed&&l&&u&&RY===a&&(null==(s=TY[n])?void 0:s.age)&&(null==(o=TY[n])?void 0:o.age)>0?($Y++,TY[n]):($Y=0,new Promise((async r=>{var i,s,o;if(!(null==xY?void 0:xY.inputs)||!xY.inputs[0]||!xY.inputs[0].shape)return;const l={};if((null==(i=t.face.ssrnet)?void 0:i.crop)>0){const n=null==(s=t.face.ssrnet)?void 0:s.crop,a=[[n,n,1-n,1-n]];l.resize=dh.cropAndResize(e,a,[0],[xY.inputs[0].shape[2],xY.inputs[0].shape[1]])}else l.resize=dh.resizeBilinear(e,[xY.inputs[0].shape[2],xY.inputs[0].shape[1]],!1);l.enhance=mo(l.resize,IX.tf255);const u={age:0};if((null==(o=t.face.ssrnet)?void 0:o.enabled)&&(l.age=xY.execute(l.enhance)),l.age){const e=await l.age.data();u.age=Math.trunc(10*e[0])/10}Object.keys(l).forEach((e=>Qs(l[e]))),TY[n]=u,RY=a,EY=Lj(),r(u)})))}var FY,_Y=[],PY=0,OY=0,DY=Number.MAX_SAFE_INTEGER,zY=[.2989,.587,.114];async function LY(e,t,n,a){var r,i,s,o;if(!NY)return{gender:"unknown",genderScore:0};const l=DY<((null==(r=t.face.ssrnet)?void 0:r.skipFrames)||0),u=((null==(i=t.face.ssrnet)?void 0:i.skipTime)||0)>Lj()-OY;return t.skipAllowed&&l&&u&&PY===a&&(null==(s=_Y[n])?void 0:s.gender)&&(null==(o=_Y[n])?void 0:o.genderScore)>0?(DY++,_Y[n]):(DY=0,new Promise((async r=>{var i,s,o;if(!(null==NY?void 0:NY.inputs[0].shape))return;const l={};if((null==(i=t.face.ssrnet)?void 0:i.crop)>0){const n=null==(s=t.face.ssrnet)?void 0:s.crop,a=[[n,n,1-n,1-n]];l.resize=dh.cropAndResize(e,a,[0],[NY.inputs[0].shape[2],NY.inputs[0].shape[1]])}else l.resize=dh.resizeBilinear(e,[NY.inputs[0].shape[2],NY.inputs[0].shape[1]],!1);l.enhance=Js((()=>{var e,t;let n;if(1===(null==(t=null==(e=null==NY?void 0:NY.inputs)?void 0:e[0].shape)?void 0:t[3])){const[e,t,a]=bp(l.resize,3,3),r=mo(e,zY[0]),i=mo(t,zY[1]),s=mo(a,zY[2]),o=xo([r,i,s]);n=mo(Lu(o,IX.tf05),2)}else n=mo(Lu(l.resize,IX.tf05),2);return n}));const u={gender:"unknown",genderScore:0};(null==(o=t.face.ssrnet)?void 0:o.enabled)&&(l.gender=NY.execute(l.enhance));const d=await l.gender.data();u.gender=d[0]>d[1]?"female":"male",u.genderScore=d[0]>d[1]?Math.trunc(100*d[0])/100:Math.trunc(100*d[1])/100,Object.keys(l).forEach((e=>Qs(l[e]))),_Y[n]=u,PY=a,OY=Lj(),r(u)})))}var WY,BY=[],VY=0,UY=0,GY=Number.MAX_SAFE_INTEGER;async function HY(e,t,n,a){var r,i;if(!(null==FY?void 0:FY.executor))return[];const s=GY<((null==(r=t.face.mobilefacenet)?void 0:r.skipFrames)||0),o=((null==(i=t.face.mobilefacenet)?void 0:i.skipTime)||0)>Lj()-UY;return t.skipAllowed&&o&&s&&VY===a&&BY[n]?(GY++,BY[n]):new Promise((async r=>{var i;let s=[];if((null==(i=t.face.mobilefacenet)?void 0:i.enabled)&&(null==FY?void 0:FY.inputs[0].shape)){const t={};t.crop=dh.resizeBilinear(e,[FY.inputs[0].shape[2],FY.inputs[0].shape[1]],!1),t.data=FY.execute(t.crop);const n=await t.data.data();s=Array.from(n),Object.keys(t).forEach((e=>Qs(t[e])))}BY[n]=s,VY=a,UY=Lj(),r(s)}))}var jY=[],qY=0,XY=0,KY=Number.MAX_SAFE_INTEGER;async function ZY(e,t,n,a){var r,i;if(!(null==WY?void 0:WY.executor))return[];const s=KY<((null==(r=t.face.insightface)?void 0:r.skipFrames)||0),o=((null==(i=t.face.insightface)?void 0:i.skipTime)||0)>Lj()-XY;return t.skipAllowed&&o&&s&&qY===a&&jY[n]?(KY++,jY[n]):new Promise((async r=>{var i;let s=[];if((null==(i=t.face.insightface)?void 0:i.enabled)&&(null==WY?void 0:WY.inputs[0].shape)){const t={};t.crop=dh.resizeBilinear(e,[WY.inputs[0].shape[2],WY.inputs[0].shape[1]],!1),t.data=WY.execute(t.crop);const n=await t.data.data();s=Array.from(n),Object.keys(t).forEach((e=>Qs(t[e])))}jY[n]=s,qY=a,XY=Lj(),r(s)}))}var YY=(e,t)=>{const n=e=>{const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return e[0]/=t,e[1]/=t,e[2]/=t,e},a=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]],r=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};const s=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,o=[i[10],i[152],i[234],i[454]].map((e=>[e[0]*t[0]/s,e[1]*t[1]/s,e[2]])),l=n(a(o[1],o[0]));let u=n(a(o[3],o[2]));const d=n(r(u,l));u=r(l,d);const p=[u[0],u[1],u[2],l[0],l[1],l[2],d[0],d[1],d[2]],c=(e=>{const[t,n,a,r,i,s,o,l,u]=e;let d,p,c;return r<1?r>-1?(c=Math.asin(r),p=Math.atan2(-o,t),d=Math.atan2(-s,i)):(c=-Math.PI/2,p=-Math.atan2(l,u),d=0):(c=Math.PI/2,p=Math.atan2(l,u),d=0),Number.isNaN(d)&&(d=0),Number.isNaN(p)&&(p=0),Number.isNaN(c)&&(c=0),{pitch:2*-d,yaw:2*-p,roll:2*-c}})(p),h=478===i.length?(e=>{if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};const t=[0,-.1],n=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=n?e.mesh[473]:e.mesh[468],r=n?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=n?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],s=[(r[0]-a[0])/i[0]-t[0],1*(a[1]-r[1])/i[1]-t[1]];let o=Math.sqrt(s[0]*s[0]+s[1]*s[1]);var l,u;return o=Math.min(o,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(l=[0,0],u=s,(Math.atan2(l[1]-u[1],l[0]-u[0])+Math.PI/2)%Math.PI),strength:o}})(e):{bearing:0,strength:0};return{angle:c,matrix:p,gaze:h}};function JY(e,t){const n=null==e?void 0:e.annotations;if(!(null==n?void 0:n.leftEyeIris)||!(null==n?void 0:n.rightEyeIris))return 0;const a=Math.max(Math.abs(n.leftEyeIris[3][0]-n.leftEyeIris[1][0]),Math.abs(n.rightEyeIris[3][0]-n.rightEyeIris[1][0]))/t;return Math.round(1.17/a)/100}var QY=async(e,t)=>{var n,a,r,i,s,o,l,u,d,p,c,h,f,m,y,g,A,x,b,v,w,k,I;let S,C,N,T,R,E,$,M,F,_=Lj();const P=[];e.state="run:face";const O=await async function(e,t){var n,a,r,i,s,o,l,u,d,p;const c=((null==(n=t.face.detector)?void 0:n.skipTime)||0)>Lj()-WZ.timestamp,h=WZ.skipped<((null==(a=t.face.detector)?void 0:a.skipFrames)||0);t.skipAllowed&&c&&h&&0!==WZ.boxes.length?WZ.skipped++:(WZ.boxes=await async function(e,t){var n,a,r,i,s,o;if(!e||e.isDisposedInternal||4!==e.shape.length||e.shape[1]<1||e.shape[2]<1)return[];const l={};l.resized=dh.resizeBilinear(e,[wZ,wZ]),l.div=fo(l.resized,IX.tf127),l.normalized=Lu(l.div,IX.tf05);const u=null==AZ?void 0:AZ.execute(l.normalized);if(Array.isArray(u)&&u.length>2){const e=u.sort(((e,t)=>e.size-t.size));l.concat384=qo([e[0],e[2]],2),l.concat512=qo([e[1],e[3]],2),l.concat=qo([l.concat512,l.concat384],1),l.batch=kp(l.concat,[0])}else Array.isArray(u)?l.batch=kp(u[0]):l.batch=kp(u);Qs(u),l.boxes=function(e){if(!vZ||!kZ)return ed([0,0]);const t={};t.boxStarts=Zo(e,[0,1],[-1,2]),t.centers=co(t.boxStarts,vZ),t.boxSizes=Zo(e,[0,3],[-1,2]),t.boxSizesNormalized=fo(t.boxSizes,kZ),t.centersNormalized=fo(t.centers,kZ),t.halfBoxSize=fo(t.boxSizesNormalized,IX.tf2),t.starts=Lu(t.centersNormalized,t.halfBoxSize),t.ends=co(t.centersNormalized,t.halfBoxSize),t.startNormalized=mo(t.starts,kZ),t.endNormalized=mo(t.ends,kZ);const n=hl([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach((e=>Qs(t[e]))),n}(l.batch),l.logits=Zo(l.batch,[0,0],[-1,1]),l.sigmoid=Ko(l.logits),l.scores=kp(l.sigmoid),l.nms=await dh.nonMaxSuppressionAsync(l.boxes,l.scores,(null==(n=t.face.detector)?void 0:n.maxDetected)||0,(null==(a=t.face.detector)?void 0:a.iouThreshold)||0,(null==(r=t.face.detector)?void 0:r.minConfidence)||0);const d=await l.nms.array(),p=[],c=await l.scores.data();for(let n=0;n<d.length;n++){const a=c[d[n]];if(a>((null==(i=t.face.detector)?void 0:i.minConfidence)||0)){const r={};r.bbox=Zo(l.boxes,[d[n],0],[1,-1]),r.slice=Zo(l.batch,[d[n],5],[1,-1]),r.squeeze=kp(r.slice),r.landmarks=Go(r.squeeze,[6,-1]);const i=await r.bbox.data(),u={startPoint:[i[0],i[1]],endPoint:[i[2],i[3]],landmarks:await r.landmarks.array(),confidence:a};r.anchor=Zo(vZ,[d[n],0],[1,2]);const c=await r.anchor.data(),h=iZ(u,[(e.shape[2]||0)/wZ,(e.shape[1]||0)/wZ],c),f=oZ(h,t.face.scale||1.4),m=lZ(f);m.size[0]>((null==(s=t.face.detector)?void 0:s.minSize)||0)&&m.size[1]>((null==(o=t.face.detector)?void 0:o.minSize)||0)&&p.push(m),Object.keys(r).forEach((e=>Qs(r[e])))}}return Object.keys(l).forEach((e=>Qs(l[e]))),p}(e,t),WZ.timestamp=Lj(),WZ.skipped=0);const f=[],m=[];let y=0;const g=VZ;for(let n=0;n<WZ.boxes.length;n++){const a=WZ.boxes[n];let c,h=0;const A={id:y++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,size:[0,0],annotations:{}};if([h,c,A.tensor]=gZ(null==(r=t.face.detector)?void 0:r.rotation,a,e,(null==(i=t.face.mesh)?void 0:i.enabled)?VZ:wZ),t.filter.equalization){const e=A.tensor?await Jj(A.tensor):void 0;Qs(A.tensor),e&&(A.tensor=e)}if(A.boxScore=Math.round(100*a.confidence)/100,(null==(s=t.face.mesh)?void 0:s.enabled)&&(null==BZ?void 0:BZ.executor))if(BZ){if((null==(o=t.face.attention)?void 0:o.enabled)&&!cq.kernels.includes("atan2"))return t.face.attention.enabled=!1,Qs(A.tensor),f;const n=BZ.execute(A.tensor),r=n.find((e=>1===e.shape[e.shape.length-1])),i=await r.data();if(A.faceScore=Math.round(100*i[0])/100,A.faceScore<((null==(l=t.face.detector)?void 0:l.minConfidence)||1)){if(a.confidence=A.faceScore,t.face.mesh.keepInvalid){A.box=aZ(a,e),A.boxRaw=rZ(a,e),A.size=a.size,A.score=A.boxScore,A.mesh=a.landmarks,A.meshRaw=A.mesh.map((t=>[t[0]/(e.shape[2]||1),t[1]/(e.shape[1]||1),(t[2]||0)/g]));for(const e of Object.keys(VX))A.annotations[e]=[A.mesh[VX[e]]]}}else{const r=n.find((e=>1404===e.shape[e.shape.length-1])),i=Go(r,[-1,3]);let s=await i.array();Qs(i),(null==(u=t.face.attention)?void 0:u.enabled)?s=await DZ(s,n):(null==(d=t.face.iris)?void 0:d.enabled)&&(s=await OZ(s,A.tensor,VZ)),A.mesh=yZ(s,a,h,c,VZ),A.meshRaw=A.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/g]));for(const e of Object.keys(WX))A.annotations[e]=WX[e].map((e=>A.mesh[e]));A.score=A.faceScore;const o={...bZ(A.mesh,a),confidence:a.confidence,landmarks:a.landmarks,size:a.size};A.box=aZ(o,e),A.boxRaw=rZ(o,e),A.size=o.size,m.push(o)}Qs(n)}else t.debug&&zj("face mesh detection requested, but model is not loaded");else{A.box=aZ(a,e),A.boxRaw=rZ(a,e),A.score=A.boxScore,A.size=a.size,A.mesh=a.landmarks,A.meshRaw=A.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/g]));for(const e of Object.keys(VX))A.annotations[e]=[A.mesh[VX[e]]]}A.score>((null==(p=t.face.detector)?void 0:p.minConfidence)||1)?f.push(A):Qs(A.tensor)}return WZ.boxes=m,f}(t,e.config);if(e.performance.face=cq.perfadd?(e.performance.face||0)+Math.trunc(Lj()-_):Math.trunc(Lj()-_),!t.shape||4!==t.shape.length)return[];if(!O)return[];for(let D=0;D<O.length;D++){if(e.analyze("Get Face"),!O[D].tensor||O[D].tensor.isDisposedInternal){zj("Face object is disposed:",O[D].tensor);continue}if(null==(n=e.config.face.detector)?void 0:n.mask){const e=await sY(O[D]);Qs(O[D].tensor),e&&(O[D].tensor=e)}const z=O[D].mesh&&O[D].mesh.length>200?YY(O[D],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?T=(null==(a=e.config.face.emotion)?void 0:a.enabled)?YZ(O[D].tensor||Gi([]),e.config,D,O.length):[]:(e.state="run:emotion",_=Lj(),T=(null==(r=e.config.face.emotion)?void 0:r.enabled)?await YZ(O[D].tensor||Gi([]),e.config,D,O.length):[],e.performance.emotion=cq.perfadd?(e.performance.emotion||0)+Math.trunc(Lj()-_):Math.trunc(Lj()-_)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?$=(null==(i=e.config.face.antispoof)?void 0:i.enabled)?cY(O[D].tensor||Gi([]),e.config,D,O.length):0:(e.state="run:antispoof",_=Lj(),$=(null==(s=e.config.face.antispoof)?void 0:s.enabled)?await cY(O[D].tensor||Gi([]),e.config,D,O.length):0,e.performance.antispoof=cq.perfadd?(e.performance.antispoof||0)+Math.trunc(Lj()-_):Math.trunc(Lj()-_)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?M=(null==(o=e.config.face.liveness)?void 0:o.enabled)?AY(O[D].tensor||Gi([]),e.config,D,O.length):0:(e.state="run:liveness",_=Lj(),M=(null==(l=e.config.face.liveness)?void 0:l.enabled)?await AY(O[D].tensor||Gi([]),e.config,D,O.length):0,e.performance.liveness=cq.perfadd?(e.performance.antispoof||0)+Math.trunc(Lj()-_):Math.trunc(Lj()-_)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?C=(null==(u=e.config.face.gear)?void 0:u.enabled)?CY(O[D].tensor||Gi([]),e.config,D,O.length):null:(e.state="run:gear",_=Lj(),C=(null==(d=e.config.face.gear)?void 0:d.enabled)?await CY(O[D].tensor||Gi([]),e.config,D,O.length):null,e.performance.gear=Math.trunc(Lj()-_)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(S=(null==(p=e.config.face.ssrnet)?void 0:p.enabled)?MY(O[D].tensor||Gi([]),e.config,D,O.length):null,N=(null==(c=e.config.face.ssrnet)?void 0:c.enabled)?LY(O[D].tensor||Gi([]),e.config,D,O.length):null):(e.state="run:ssrnet",_=Lj(),S=(null==(h=e.config.face.ssrnet)?void 0:h.enabled)?await MY(O[D].tensor||Gi([]),e.config,D,O.length):null,N=(null==(f=e.config.face.ssrnet)?void 0:f.enabled)?await LY(O[D].tensor||Gi([]),e.config,D,O.length):null,e.performance.ssrnet=Math.trunc(Lj()-_)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?R=(null==(m=e.config.face.mobilefacenet)?void 0:m.enabled)?HY(O[D].tensor||Gi([]),e.config,D,O.length):null:(e.state="run:mobilefacenet",_=Lj(),R=(null==(y=e.config.face.mobilefacenet)?void 0:y.enabled)?await HY(O[D].tensor||Gi([]),e.config,D,O.length):null,e.performance.mobilefacenet=Math.trunc(Lj()-_)),e.analyze("End MobileFaceNet:"),e.analyze("Start InsightFace:"),e.config.async?E=(null==(g=e.config.face.insightface)?void 0:g.enabled)?ZY(O[D].tensor||Gi([]),e.config,D,O.length):null:(e.state="run:mobilefacenet",_=Lj(),E=(null==(A=e.config.face.insightface)?void 0:A.enabled)?await ZY(O[D].tensor||Gi([]),e.config,D,O.length):null,e.performance.mobilefacenet=Math.trunc(Lj()-_)),e.analyze("End InsightFace:"),e.analyze("Start Description:"),e.config.async?F=nY(O[D].tensor||Gi([]),e.config,D,O.length):(e.state="run:description",_=Lj(),F=await nY(O[D].tensor||Gi([]),e.config,D,O.length),e.performance.description=cq.perfadd?(e.performance.description||0)+Math.trunc(Lj()-_):Math.trunc(Lj()-_)),e.analyze("End Description:"),e.config.async&&([S,N,T,R,E,F,C,$,M]=await Promise.all([S,N,T,R,E,F,C,$,M])),e.analyze("Finish Face:"),(null==(x=e.config.face.ssrnet)?void 0:x.enabled)&&S&&N&&(F={...F,age:S.age,gender:N.gender,genderScore:N.genderScore}),(null==(b=e.config.face.gear)?void 0:b.enabled)&&C&&(F={...F,age:C.age,gender:C.gender,genderScore:C.genderScore,race:C.race}),(null==(v=e.config.face.mobilefacenet)?void 0:v.enabled)&&R&&(F.descriptor=R),(null==(w=e.config.face.insightface)?void 0:w.enabled)&&E&&(F.descriptor=E);const L=(null==(k=e.config.face.iris)?void 0:k.enabled)?JY(O[D],t.shape[2]):0,W=(null==(I=e.config.face.detector)?void 0:I.return)?kp(O[D].tensor):null;Qs(O[D].tensor),O[D].tensor&&delete O[D].tensor;const B={...O[D],id:D};F.age&&(B.age=F.age),F.gender&&(B.gender=F.gender),F.genderScore&&(B.genderScore=F.genderScore),F.descriptor&&(B.embedding=F.descriptor),F.race&&(B.race=F.race),T&&(B.emotion=T),$&&(B.real=$),M&&(B.live=M),L>0&&(B.distance=L),z&&(B.rotation=z),W&&(B.tensor=W),P.push(B),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),P},eJ={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>eJ.nameMapping[e],getPoints:e=>eJ.pointsMapping[e]},tJ={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>tJ.nameMapping[e]},nJ={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>nJ.nameMapping[e]},aJ=class{constructor(e){r(this,"name"),r(this,"curls"),r(this,"directions"),r(this,"weights"),r(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,n){void 0===this.curls[e]&&(this.curls[e]=[]),this.curls[e].push([t,n])}direction(e,t,n){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,n])}weight(e,t){this.weights[e]=t;const n=this.weights.reduce(((e,t)=>e+t),0);this.weightsRelative=this.weights.map((e=>5*e/n))}matchAgainst(e,t){let n=0;for(const t in e){const a=e[t],r=this.curls[t];if(void 0!==r){for(const[e,i]of r)if(a===e){n+=i*this.weightsRelative[t];break}}else n+=this.weightsRelative[t]}for(const e in t){const a=t[e],r=this.directions[e];if(void 0!==r){for(const[t,i]of r)if(a===t){n+=i*this.weightsRelative[e];break}}else n+=this.weightsRelative[e]}return n/10}},{thumb:rJ,index:iJ,middle:sJ,ring:oJ,pinky:lJ}=eJ,{none:uJ,half:dJ,full:pJ}=tJ,{verticalUp:cJ,verticalDown:hJ,horizontalLeft:fJ,horizontalRight:mJ,diagonalUpRight:yJ,diagonalUpLeft:gJ,diagonalDownRight:AJ,diagonalDownLeft:xJ}=nJ,bJ=new aJ("thumbs up");bJ.curl(rJ,uJ,1),bJ.direction(rJ,cJ,1),bJ.direction(rJ,gJ,.25),bJ.direction(rJ,yJ,.25);for(const e of[eJ.index,eJ.middle,eJ.ring,eJ.pinky])bJ.curl(e,pJ,1),bJ.direction(e,fJ,1),bJ.direction(e,mJ,1);var vJ=new aJ("victory");vJ.curl(rJ,dJ,.5),vJ.curl(rJ,uJ,.5),vJ.direction(rJ,cJ,1),vJ.direction(rJ,gJ,1),vJ.curl(iJ,uJ,1),vJ.direction(iJ,cJ,.75),vJ.direction(iJ,gJ,1),vJ.curl(sJ,uJ,1),vJ.direction(sJ,cJ,1),vJ.direction(sJ,gJ,.75),vJ.curl(oJ,pJ,1),vJ.direction(oJ,cJ,.2),vJ.direction(oJ,gJ,1),vJ.direction(oJ,fJ,.2),vJ.curl(lJ,pJ,1),vJ.direction(lJ,cJ,.2),vJ.direction(lJ,gJ,1),vJ.direction(lJ,fJ,.2),vJ.weight(iJ,2),vJ.weight(sJ,2);var wJ=new aJ("point");wJ.curl(rJ,pJ,1),wJ.curl(iJ,uJ,.5),wJ.curl(sJ,pJ,.5),wJ.curl(oJ,pJ,.5),wJ.curl(lJ,pJ,.5),wJ.weight(iJ,2),wJ.weight(sJ,2);var kJ=new aJ("middle finger");kJ.curl(rJ,uJ,1),kJ.curl(iJ,pJ,.5),kJ.curl(sJ,pJ,.5),kJ.curl(oJ,pJ,.5),kJ.curl(lJ,pJ,.5),kJ.weight(iJ,2),kJ.weight(sJ,2);var IJ=new aJ("open palm");IJ.curl(rJ,uJ,.75),IJ.curl(iJ,uJ,.75),IJ.curl(sJ,uJ,.75),IJ.curl(oJ,uJ,.75),IJ.curl(lJ,uJ,.75);var SJ=[bJ,vJ,wJ,kJ,IJ],CJ={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function NJ(e,t,n,a){const r=(t-a)/(e-n);let i=180*Math.atan(r)/Math.PI;return i<=0?i=-i:i>0&&(i=180-i),i}function TJ(e,t){if(!e||!t)return[0,0];const n=NJ(e[0],e[1],t[0],t[1]);return 2===e.length?n:[n,NJ(e[1],e[2],t[1],t[2])]}function RJ(e,t=1){let n=0,a=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?a=1*t:r=1*t,[n,a,r]}function EJ(e,t,n){const a=e[0]-t[0],r=e[0]-n[0],i=t[0]-n[0],s=e[1]-t[1],o=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],d=e[2]-n[2],p=t[2]-n[2],c=Math.sqrt(a*a+s*s+u*u),h=Math.sqrt(r*r+o*o+d*d),f=Math.sqrt(i*i+l*l+p*p);let m=(f*f+c*c-h*h)/(2*f*c);m>1?m=1:m<-1&&(m=-1);let y,g=Math.acos(m);return g=57.2958*g%180,y=g>CJ.NO_CURL_START_LIMIT?tJ.none:g>CJ.HALF_CURL_START_LIMIT?tJ.half:tJ.full,y}function $J(e,t,n,a){let r;return r=a===Math.abs(e)?e>0?nJ.horizontalLeft:nJ.horizontalRight:a===Math.abs(t)?t>0?nJ.horizontalLeft:nJ.horizontalRight:n>0?nJ.horizontalLeft:nJ.horizontalRight,r}function MJ(e,t,n,a){let r;return r=a===Math.abs(e)?e<0?nJ.verticalDown:nJ.verticalUp:a===Math.abs(t)?t<0?nJ.verticalDown:nJ.verticalUp:n<0?nJ.verticalDown:nJ.verticalUp,r}function FJ(e,t,n,a){const r=e[0]-t[0],i=e[0]-n[0],s=t[0]-n[0],o=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],d=Math.max(Math.abs(r),Math.abs(i),Math.abs(s)),p=Math.max(Math.abs(o),Math.abs(l),Math.abs(u));let c=0,h=0,f=0;const m=p/(d+1e-5);m>1.5?c+=CJ.DISTANCE_VOTE_POWER:m>.66?h+=CJ.DISTANCE_VOTE_POWER:f+=CJ.DISTANCE_VOTE_POWER;const y=Math.sqrt(r*r+o*o),g=Math.sqrt(i*i+l*l),A=Math.sqrt(s*s+u*u),x=Math.max(y,g,A);let b=e[0],v=e[1],w=n[0],k=n[1];x===y?(w=n[0],k=n[1]):x===A&&(b=t[0],v=t[1]);const I=RJ(TJ([b,v],[w,k]),CJ.TOTAL_ANGLE_VOTE_POWER);c+=I[0],h+=I[1],f+=I[2];for(const e of a){const t=RJ(e,CJ.SINGLE_ANGLE_VOTE_POWER);c+=t[0],h+=t[1],f+=t[2]}let S;return S=c===Math.max(c,h,f)?MJ(l,o,u,p):f===Math.max(h,f)?$J(i,r,s,d):function(e,t,n,a,r,i,s,o){let l;const u=MJ(e,t,n,a),d=$J(r,i,s,o);return l=u===nJ.verticalUp?d===nJ.horizontalLeft?nJ.diagonalUpLeft:nJ.diagonalUpRight:d===nJ.horizontalLeft?nJ.diagonalDownLeft:nJ.diagonalDownRight,l}(l,o,u,p,i,r,s,d),S}function _J(e){const t=[],n=[],a=[],r=[];if(!e)return{curls:a,directions:r};for(const a of eJ.all){const r=eJ.getPoints(a),i=[],s=[];for(const t of r){const n=TJ(e[t[0]],e[t[1]]),a=n[0],r=n[1];i.push(a),s.push(r)}t.push(i),n.push(s)}for(const n of eJ.all){const i=n===eJ.thumb?1:0,s=eJ.getPoints(n),o=e[s[i][0]],l=e[s[i+1][1]],u=e[s[3][1]],d=EJ(o,l,u),p=FJ(o,l,u,t[n].slice(i));a[n]=d,r[n]=p}return{curls:a,directions:r}}function PJ(e){if(!e||0===e.length)return null;const t=_J(e),n={};for(const e of eJ.all)n[eJ.getName(e)]={curl:tJ.getName(t.curls[e]),direction:nJ.getName(t.directions[e])};return n}function OJ(e){const t=[];if(!e||0===e.length)return t;const n=_J(e);for(const e of SJ){const a=e.matchAgainst(n.curls,n.directions);a>=.7&&t.push({name:e.name,confidence:a})}return t}var DJ=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const a=e[n].keypoints.find((e=>"leftWrist"===e.part)),r=e[n].keypoints.find((e=>"rightWrist"===e.part)),i=e[n].keypoints.find((e=>"nose"===e.part));i&&a&&r&&a.position[1]<i.position[1]&&r.position[1]<i.position[1]?t.push({body:n,gesture:"i give up"}):i&&a&&a.position[1]<i.position[1]?t.push({body:n,gesture:"raise left hand"}):i&&r&&r.position[1]<i.position[1]&&t.push({body:n,gesture:"raise right hand"});const s=e[n].keypoints.find((e=>"leftShoulder"===e.part)),o=e[n].keypoints.find((e=>"rightShoulder"===e.part));s&&o&&Math.abs(s.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:n,gesture:"leaning "+(s.position[1]>o.position[1]?"left":"right")})}return t},zJ=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){const a=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(a/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:"facing "+(a<0?"left":"right")}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});const i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});const s=e[n].mesh[152][2]||0;Math.abs(s)>10&&t.push({face:n,gesture:"head "+(s<0?"up":"down")})}return t},LJ=e=>{var t,n,a,r;if(!e)return[];const i=[];for(let s=0;s<e.length;s++){if(!(null==(n=null==(t=e[s].annotations)?void 0:t.leftEyeIris)?void 0:n[0])||!(null==(r=null==(a=e[s].annotations)?void 0:a.rightEyeIris)?void 0:r[0]))continue;const o=e[s].annotations.leftEyeIris[3][0]-e[s].annotations.leftEyeIris[1][0],l=e[s].annotations.leftEyeIris[4][1]-e[s].annotations.leftEyeIris[2][1],u=Math.abs(o*l),d=e[s].annotations.rightEyeIris[3][0]-e[s].annotations.rightEyeIris[1][0],p=e[s].annotations.rightEyeIris[4][1]-e[s].annotations.rightEyeIris[2][1],c=Math.abs(d*p);let h=!1;Math.abs(u-c)/Math.max(u,c)<.25&&(h=!0,i.push({iris:s,gesture:"facing center"}));const f=Math.abs(e[s].mesh[263][0]-e[s].annotations.leftEyeIris[0][0])/e[s].box[2],m=Math.abs(e[s].mesh[33][0]-e[s].annotations.rightEyeIris[0][0])/e[s].box[2];(f>.06||m>.06)&&(h=!1),f>m?m>.04&&i.push({iris:s,gesture:"looking right"}):f>.04&&i.push({iris:s,gesture:"looking left"});const y=Math.abs(e[s].mesh[145][1]-e[s].annotations.rightEyeIris[0][1])/e[s].box[3],g=Math.abs(e[s].mesh[374][1]-e[s].annotations.leftEyeIris[0][1])/e[s].box[3];(g<.01||y<.01||g>.022||y>.022)&&(h=!1),(g<.01||y<.01)&&i.push({iris:s,gesture:"looking down"}),(g>.022||y>.022)&&i.push({iris:s,gesture:"looking up"}),h&&i.push({iris:s,gesture:"looking center"})}return i},WJ=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const a=[];if(e[n].annotations)for(const[t,r]of Object.entries(e[n].annotations))"palmBase"!==t&&Array.isArray(r)&&r[0]&&a.push({name:t.toLowerCase(),position:r[0]});if(a&&a.length>0){const e=a.reduce(((e,t)=>(e.position[2]||0)<(t.position[2]||0)?e:t));t.push({hand:n,gesture:`${e.name} forward`});const r=a.reduce(((e,t)=>e.position[1]<t.position[1]?e:t));t.push({hand:n,gesture:`${r.name} up`})}if(e[n].keypoints){const a=OJ(e[n].keypoints);for(const e of a)t.push({hand:n,gesture:e.name})}}return t};function BJ(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function VJ(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function UJ(e,t,n){const a=t.shape[1],r=t.shape[2],i=[[e.startPoint[1]/a,e.startPoint[0]/r,e.endPoint[1]/a,e.endPoint[0]/r]];return dh.cropAndResize(t,i,[0],n)}function GJ(e,t){return{startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],palmLandmarks:e.palmLandmarks.map((e=>[e[0]*t[0],e[1]*t[1]])),confidence:e.confidence}}function HJ(e,t=1.5){const n=VJ(e),a=BJ(e),r=[t*a[0]/2,t*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],palmLandmarks:e.palmLandmarks}}function jJ(e){const t=VJ(e),n=BJ(e),a=Math.max(...n)/2;return{startPoint:[t[0]-a,t[1]-a],endPoint:[t[0]+a,t[1]+a],palmLandmarks:e.palmLandmarks}}function qJ(e,t){return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n}var XJ=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function KJ(e,t){let n=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a];return n}function ZJ(e,t){const n=[];for(let a=0;a<e.length;a++)n.push(e[a][t]);return n}function YJ(e,t){const n=[],a=e.length;for(let r=0;r<a;r++){n.push([]);for(let i=0;i<a;i++)n[r].push(KJ(e[r],ZJ(t,i)))}return n}function JJ(e,t){const n=Math.cos(e),a=Math.sin(e),r=[[n,-a,0],[a,n,0],[0,0,1]],i=YJ(XJ(t[0],t[1]),r);return YJ(i,XJ(-t[0],-t[1]))}function QJ(e,t){return[KJ(e,t[0]),KJ(e,t[1])]}var eQ,tQ,nQ,aQ=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],rQ=[0,5,9,13,17,1,2],iQ=0,sQ={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function oQ(e,t){nQ||function(){const e=eQ?new class{constructor(e){var t,n,a,i;r(this,"model"),r(this,"anchors"),r(this,"anchorsTensor"),r(this,"inputSize"),r(this,"inputSizeTensor"),r(this,"doubleInputSizeTensor"),this.model=e,this.anchors=aQ.map((e=>[e.x,e.y])),this.anchorsTensor=Rp(this.anchors),this.inputSize=(null==(i=null==(a=null==(n=null==(t=null==this?void 0:this.model)?void 0:t.inputs)?void 0:n[0])?void 0:a.shape)?void 0:i[2])||0,this.inputSizeTensor=Tp([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Tp([2*this.inputSize,2*this.inputSize])}normalizeBoxes(e){const t={};t.boxOffsets=Zo(e,[0,0],[-1,2]),t.boxSizes=Zo(e,[0,2],[-1,2]),t.div=fo(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=co(t.div,this.anchorsTensor),t.halfBoxSizes=fo(t.boxSizes,this.doubleInputSizeTensor),t.sub=Lu(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=mo(t.sub,this.inputSizeTensor),t.add=co(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=mo(t.add,this.inputSizeTensor);const n=hl([t.startPoints,t.endPoints],1);return Object.keys(t).forEach((e=>Qs(t[e]))),n}normalizeLandmarks(e,t){const n={};n.reshape=Go(e,[-1,7,2]),n.div=fo(n.reshape,this.inputSizeTensor),n.landmarks=co(n.div,this.anchors[t]?this.anchors[t]:0);const a=mo(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach((e=>Qs(n[e]))),a}async predict(e,t){var n;const a={};a.resize=dh.resizeBilinear(e,[this.inputSize,this.inputSize]),a.div=fo(a.resize,IX.tf127),a.image=Lu(a.div,IX.tf1),a.batched=this.model.execute(a.image),a.predictions=kp(a.batched),a.slice=Zo(a.predictions,[0,0],[-1,1]),a.sigmoid=Ko(a.slice),a.scores=kp(a.sigmoid);const r=await a.scores.data();a.boxes=Zo(a.predictions,[0,1],[-1,4]),a.norm=this.normalizeBoxes(a.boxes),a.nms=await dh.nonMaxSuppressionAsync(a.norm,a.scores,3*((null==(n=t.hand)?void 0:n.maxDetected)||1),t.hand.iouThreshold,t.hand.minConfidence);const i=await a.nms.array(),s=[];for(const t of i){const n={};n.box=Zo(a.norm,[t,0],[1,-1]),n.slice=Zo(a.predictions,[t,5],[1,14]),n.norm=this.normalizeLandmarks(n.slice,t),n.palmLandmarks=Go(n.norm,[-1,2]);const i=await n.box.data(),o=GJ({startPoint:i.slice(0,2),endPoint:i.slice(2,4),palmLandmarks:await n.palmLandmarks.array(),confidence:r[t]},[(e.shape[2]||1)/this.inputSize,(e.shape[1]||0)/this.inputSize]);s.push(o),Object.keys(n).forEach((e=>Qs(n[e])))}return Object.keys(a).forEach((e=>Qs(a[e]))),s}}(eQ):void 0;e&&tQ&&(nQ=new class{constructor(e,t){var n,a,i;r(this,"handDetector"),r(this,"handPoseModel"),r(this,"inputSize"),r(this,"storedBoxes"),r(this,"skipped"),r(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=(null==(i=null==(a=null==(n=this.handPoseModel)?void 0:n.inputs)?void 0:a[0].shape)?void 0:i[2])||0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)]}}getBoxForPalmLandmarks(e,t){const n=e.map((e=>QJ([...e,1],t)));return HJ(jJ(this.calculateLandmarksBoundingBox(n)),5)}getBoxForHandLandmarks(e){const t=HJ(jJ(this.calculateLandmarksBoundingBox(e)),1.65);t.palmLandmarks=[];for(let n=0;n<rQ.length;n++)t.palmLandmarks.push(e[rQ[n]].slice(0,2));return t}transformRawCoords(e,t,n,a){const r=BJ(t),i=[r[0]/this.inputSize,r[1]/this.inputSize,(r[0]+r[1])/this.inputSize/2],s=e.map((e=>[i[0]*(e[0]-this.inputSize/2),i[1]*(e[1]-this.inputSize/2),i[2]*e[2]])),o=JJ(n,[0,0]),l=s.map((e=>[...QJ(e,o),e[2]])),u=function(e){const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],a=[-KJ(t[0],n),-KJ(t[1],n)];return[t[0].concat(a[0]),t[1].concat(a[1]),[0,0,1]]}(a),d=[...VJ(t),1],p=[KJ(d,u[0]),KJ(d,u[1])];return l.map((e=>[Math.trunc(e[0]+p[0]),Math.trunc(e[1]+p[1]),Math.trunc(e[2])]))}async estimateHands(e,t){let n,a=!1;const r=(t.hand.skipTime||0)>Lj()-iQ,i=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&r&&i?this.skipped++:(n=await this.handDetector.predict(e,t),this.skipped=0),n&&n.length>0&&(n.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...n],this.storedBoxes.length>0&&(a=!0));const s=[];for(let n=0;n<this.storedBoxes.length;n++){const r=this.storedBoxes[n];if(r)if(t.hand.landmarks){const i=t.hand.rotation?qJ(r.palmLandmarks[0],r.palmLandmarks[2]):0,o=VJ(r),l=[o[0]/e.shape[2],o[1]/e.shape[1]],u=t.hand.rotation&&cq.kernels.includes("rotatewithoffset")?dh.rotateWithOffset(e,i,0,l):e.clone(),d=JJ(-i,o),p=a?this.getBoxForPalmLandmarks(r.palmLandmarks,d):r,c=UJ(p,u,[this.inputSize,this.inputSize]),h=fo(c,IX.tf255);Qs(c),Qs(u);const[f,m]=this.handPoseModel.execute(h);iQ=Lj(),Qs(h);const y=(await f.data())[0];if(Qs(f),y>=t.hand.minConfidence/4){const e=Go(m,[-1,3]),t=await e.array();Qs(m),Qs(e);const a=this.transformRawCoords(t,p,i,d),o=this.getBoxForHandLandmarks(a);this.storedBoxes[n]={...o,confidence:y};const l={landmarks:a,confidence:y,boxConfidence:r.confidence,fingerConfidence:y,box:{topLeft:o.startPoint,bottomRight:o.endPoint}};s.push(l)}else this.storedBoxes[n]=null;Qs(m)}else{const e=HJ(jJ(r),1.65),t={confidence:r.confidence,boxConfidence:r.confidence,fingerConfidence:0,box:{topLeft:e.startPoint,bottomRight:e.endPoint},landmarks:[]};s.push(t)}}return this.storedBoxes=this.storedBoxes.filter((e=>null!==e)),this.detectedHands=s.length,s.length>t.hand.maxDetected&&(s.length=t.hand.maxDetected),s}}(e,tQ))}();const n=await nQ.estimateHands(e,t);if(!n)return[];const a=[];for(let t=0;t<n.length;t++){const r={};if(n[t].landmarks)for(const e of Object.keys(sQ))r[e]=sQ[e].map((e=>n[t].landmarks[e]));const i=n[t].landmarks;let s=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],o=[0,0,0,0];if(i&&i.length>0){for(const e of i)e[0]<s[0]&&(s[0]=e[0]),e[1]<s[1]&&(s[1]=e[1]),e[0]>s[2]&&(s[2]=e[0]),e[1]>s[3]&&(s[3]=e[1]);s[2]-=s[0],s[3]-=s[1],o=[s[0]/(e.shape[2]||0),s[1]/(e.shape[1]||0),s[2]/(e.shape[2]||0),s[3]/(e.shape[1]||0)]}else s=n[t].box?[Math.trunc(Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.max(0,n[t].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[t].box.bottomRight[0])-Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[t].box.bottomRight[1])-Math.max(0,n[t].box.topLeft[1]))]:[0,0,0,0],o=[n[t].box.topLeft[0]/(e.shape[2]||0),n[t].box.topLeft[1]/(e.shape[1]||0),(n[t].box.bottomRight[0]-n[t].box.topLeft[0])/(e.shape[2]||0),(n[t].box.bottomRight[1]-n[t].box.topLeft[1])/(e.shape[1]||0)];const l=PJ(i);a.push({id:t,score:Math.round(100*n[t].confidence)/100,boxScore:Math.round(100*n[t].boxConfidence)/100,fingerScore:Math.round(100*n[t].fingerConfidence)/100,label:"hand",box:s,boxRaw:o,keypoints:i,annotations:r,landmarks:l})}return a}var lQ=[null,null],uQ=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],dQ=[[0,0],[0,0]],pQ=["hand","fist","pinch","point","face","tip","pinchtip"],cQ=Number.MAX_SAFE_INTEGER,hQ=0,fQ=[0,0],mQ={boxes:[],hands:[]},yQ={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function gQ(e,t,n){const a={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&lQ[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){const r={},i=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=dh.cropAndResize(e,[i],[0],[dQ[1][0],dQ[1][1]],"bilinear"),r.div=fo(r.crop,IX.tf255),[r.score,r.keypoints]=lQ[1].execute(r.div,["Identity_1","Identity"]);const s=(await r.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(s))))/100;if(o>=(n.hand.minConfidence||0)){a.fingerScore=o,r.reshaped=Go(r.keypoints,[-1,3]);const e=(await r.reshaped.array()).map((e=>[e[0]/dQ[1][1],e[1]/dQ[1][0],e[2]||0])).map((e=>[e[0]*t.boxRaw[2],e[1]*t.boxRaw[3],e[2]||0]));a.keypoints=e.map((e=>[fQ[0]*(e[0]+t.boxRaw[0]),fQ[1]*(e[1]+t.boxRaw[1]),e[2]||0])),a.landmarks=PJ(a.keypoints);for(const e of Object.keys(yQ))a.annotations[e]=yQ[e].map((e=>a.landmarks&&a.keypoints[e]?a.keypoints[e]:null))}Object.keys(r).forEach((e=>Qs(r[e])))}return a}async function AQ(e,t){var n,a;if(!((null==(n=lQ[0])?void 0:n.executor)&&(null==(a=lQ[1])?void 0:a.executor)&&lQ[0].inputs[0].shape&&lQ[1].inputs[0].shape))return[];fQ=[e.shape[2]||0,e.shape[1]||0],cQ++;const r=(t.hand.skipTime||0)>Lj()-hQ,i=cQ<(t.hand.skipFrames||0);return t.skipAllowed&&r&&i?mQ.hands:new Promise((async n=>{const a=3*(t.hand.skipTime||0)>Lj()-hQ,r=cQ<3*(t.hand.skipFrames||0);t.skipAllowed&&mQ.hands.length===t.hand.maxDetected||t.skipAllowed&&a&&r&&mQ.hands.length>0?mQ.hands=await Promise.all(mQ.boxes.map((n=>gQ(e,n,t)))):(mQ.boxes=await async function(e,t){const n=[];if(!e||!lQ[0])return n;const a={},r=(e.shape[2]||1)/(e.shape[1]||1),i=Math.min(8*Math.round((e.shape[1]||0)/8),512),s=8*Math.round(i*r/8);a.resize=dh.resizeBilinear(e,[i,s]),a.cast=Bs(a.resize,"int32"),[a.rawScores,a.rawBoxes]=await lQ[0].executeAsync(a.cast,uQ),a.boxes=kp(a.rawBoxes,[0,2]),a.scores=kp(a.rawScores,[0]);const o=Up(a.scores,1);Qs(o[4]),o.splice(4,1),a.filtered=Ip(o,1),Qs(o),a.max=Ql(a.filtered,1),a.argmax=wo(a.filtered,1);let l=0;a.nms=await dh.nonMaxSuppressionAsync(a.boxes,a.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);const u=await a.nms.data(),d=await a.max.data(),p=await a.argmax.data();for(const e of Array.from(u)){const t=Zo(a.boxes,e,1),r=await t.data();Qs(t);const i=[r[1],r[0],r[3]-r[1],r[2]-r[0]],s=TK(i,1.4),o=[Math.trunc(i[0]*fQ[0]),Math.trunc(i[1]*fQ[1]),Math.trunc(i[2]*fQ[0]),Math.trunc(i[3]*fQ[1])],u={id:l++,score:d[e],box:o,boxRaw:s,label:pQ[p[e]]};n.push(u)}return Object.keys(a).forEach((e=>Qs(a[e]))),n.sort(((e,t)=>t.score-e.score)),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}(e,t),hQ=Lj(),mQ.hands=await Promise.all(mQ.boxes.map((n=>gQ(e,n,t)))),cQ=0);const i=[...mQ.boxes];if(mQ.boxes.length=0,t.cacheSensitivity>0)for(let n=0;n<mQ.hands.length;n++){const a=NK(mQ.hands[n].keypoints,fQ);if(a.box[2]/(e.shape[2]||1)>.05&&a.box[3]/(e.shape[1]||1)>.05&&mQ.hands[n].fingerScore&&mQ.hands[n].fingerScore>(t.hand.minConfidence||0)){const e=TK(a.box,1.6),t=TK(a.boxRaw,1.6);mQ.boxes.push({...i[n],box:e,boxRaw:t})}}for(let e=0;e<mQ.hands.length;e++){const t=CK(mQ.hands[e].keypoints,fQ);mQ.hands[e].box=t.box,mQ.hands[e].boxRaw=t.boxRaw}n(mQ.hands)}))}var xQ=(e=null)=>({face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,width:0,height:0,error:e}),bQ={};a(bQ,{connected:()=>CQ,horizontal:()=>kQ,kpt:()=>wQ,relative:()=>SQ,vertical:()=>IQ});var vQ,wQ=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],kQ=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],IQ=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],SQ=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],CQ={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},NQ=xQ(),TQ=0;async function RQ(e){return!vQ||cq.initial?vQ=await vX(e.segmentation.modelPath):e.debug&&zj("cached model:",vQ.modelUrl),vQ}var EQ={};function $Q(e,t,n={order:2,multiplier:25}){if(!e||!e)return Number.MAX_SAFE_INTEGER;let a=0;for(let r=0;r<e.length;r++){const i=n.order&&2!==n.order?Math.abs(e[r]-t[r]):e[r]-t[r];a+=n.order&&2!==n.order?i**n.order:i*i}return(n.multiplier||20)*a}a(EQ,{distance:()=>$Q,find:()=>_Q,similarity:()=>FQ});var MQ=(e,t,n,a)=>{if(0===e)return 1;const r=(1-(2===t?Math.sqrt(e):e**(1/t))/100-n)/(a-n);return Math.max(Math.min(r,1),0)};function FQ(e,t,n={order:2,multiplier:25,min:.2,max:.8}){const a=$Q(e,t,n);return MQ(a,n.order||2,n.min||0,n.max||1)}function _Q(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||0===t.length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let a=Number.MAX_SAFE_INTEGER,r=-1;for(let i=0;i<t.length;i++){const s=t[i].length===e.length?$Q(e,t[i],n):Number.MAX_SAFE_INTEGER;if(s<a&&(a=s,r=i),a<(n.threshold||0))break}return{index:r,distance:a,similarity:MQ(a,n.order||2,n.min||0,n.max||1)}}a({},{Models:()=>P1,validateModel:()=>R1});var PQ,OQ=.005,DQ={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function zQ(e){for(const t of kQ){const n=e.keypoints.findIndex((e=>e.part===t[0])),a=e.keypoints.findIndex((e=>e.part===t[1]));if(e.keypoints[n]&&e.keypoints[a]&&e.keypoints[n].position[0]<e.keypoints[a].position[0]){const t=e.keypoints[n];e.keypoints[n]=e.keypoints[a],e.keypoints[a]=t}}for(const t of IQ){const n=e.keypoints.findIndex((e=>e&&e.part===t[0])),a=e.keypoints.findIndex((e=>e&&e.part===t[1]));e.keypoints[n]&&e.keypoints[a]&&e.keypoints[n].position[1]<e.keypoints[a].position[1]&&e.keypoints.splice(n,1)}for(const[t,n]of SQ){const a=e.keypoints.findIndex((e=>e&&e.part===t[0])),r=e.keypoints.findIndex((e=>e&&e.part===t[1])),i=e.keypoints.findIndex((e=>e&&e.part===n[0])),s=e.keypoints.findIndex((e=>e&&e.part===n[1]));if(!e.keypoints[i]||!e.keypoints[s])continue;const o=e.keypoints[a]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[a].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[a].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){const t=e.keypoints[a];e.keypoints[a]=e.keypoints[r],e.keypoints[r]=t}}}function LQ(e){for(let t=0;t<e.length;t++)if(e[t]&&DQ.keypoints[t]){const n=[Math.abs(e[t].positionRaw[0]-DQ.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-DQ.keypoints[t].positionRaw[1])];n[0]<OQ&&n[1]<OQ?e[t]=DQ.keypoints[t]:DQ.keypoints[t]=e[t]}else DQ.keypoints[t]=e[t];return e}function WQ(e,t){e.keypoints=e.keypoints.filter((e=>null==e?void 0:e.position));for(const n of e.keypoints)n.position=[n.position[0]*(t[0]+DQ.padding[2][0]+DQ.padding[2][1])/t[0]-DQ.padding[2][0],n.position[1]*(t[1]+DQ.padding[1][0]+DQ.padding[1][1])/t[1]-DQ.padding[1][0]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1]];const n=CK(e.keypoints.map((e=>e.position)),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var BQ,VQ=0,UQ=Number.MAX_SAFE_INTEGER,GQ={boxes:[],bodies:[],last:0};async function HQ(e,t){var n;if(!(null==PQ?void 0:PQ.executor)||!(null==(n=null==PQ?void 0:PQ.inputs)?void 0:n[0].shape))return[];t.skipAllowed||(GQ.boxes.length=0),UQ++;const a=(t.body.skipTime||0)>Lj()-GQ.last,r=UQ<(t.body.skipFrames||0);return t.skipAllowed&&a&&r?GQ.bodies:new Promise((async n=>{const a={};UQ=0,a.input=function(e,t){var n,a;const r={};if(!(null==(n=null==e?void 0:e.shape)?void 0:n[1])||!(null==(a=null==e?void 0:e.shape)?void 0:a[2]))return e;DQ.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],r.pad=hd(e,DQ.padding),r.resize=dh.resizeBilinear(r.pad,[t,t]);const i=Bs(r.resize,"int32");return Object.keys(r).forEach((e=>Qs(r[e]))),i}(e,VQ),a.res=null==PQ?void 0:PQ.execute(a.input),GQ.last=Lj();const r=await a.res.array();GQ.bodies=17===a.res.shape[2]?function(e,t,n){const a=e[0][0],r=[];let i=0;for(let e=0;e<a.length;e++)if(i=a[e][2],i>t.body.minConfidence){const t=[a[e][1],a[e][0]];r.push({score:Math.round(100*i)/100,part:wQ[e],positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}i=r.reduce(((e,t)=>t.score>e?t.score:e),0);const s=[],o=CK(r.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[e,n]of Object.entries(CQ)){const a=[];for(let e=0;e<n.length-1;e++){const i=r.find((t=>t.part===n[e])),s=r.find((t=>t.part===n[e+1]));i&&s&&i.score>(t.body.minConfidence||0)&&s.score>(t.body.minConfidence||0)&&a.push([i.position,s.position])}l[e]=a}const u={id:0,score:i,box:o.box,boxRaw:o.boxRaw,keypoints:r,annotations:l};return zQ(u),s.push(u),s}(r,t,e):function(e,t,n){const a=[];for(let r=0;r<e[0].length;r++){const i=e[0][r],s=Math.round(100*i[55])/100;if(s>t.body.minConfidence){const e=[];for(let a=0;a<17;a++){const r=i[3*a+2];if(r>t.body.minConfidence){const t=[i[3*a+1],i[3*a+0]];e.push({part:wQ[a],score:Math.round(100*r)/100,positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}}const o=[i[52],i[51],i[54]-i[52],i[53]-i[51]],l=[Math.trunc(o[0]*(n.shape[2]||0)),Math.trunc(o[1]*(n.shape[1]||0)),Math.trunc(o[2]*(n.shape[2]||0)),Math.trunc(o[3]*(n.shape[1]||0))],u={};for(const[n,a]of Object.entries(CQ)){const r=[];for(let n=0;n<a.length-1;n++){const i=e.find((e=>e.part===a[n])),s=e.find((e=>e.part===a[n+1]));i&&s&&i.score>(t.body.minConfidence||0)&&s.score>(t.body.minConfidence||0)&&r.push([i.position,s.position])}u[n]=r}const d={id:r,score:s,box:l,boxRaw:o,keypoints:[...e],annotations:u};zQ(d),a.push(d)}}return a.sort(((e,t)=>t.score-e.score)),a.length>t.body.maxDetected&&(a.length=t.body.maxDetected),a}(r,t,e);for(const t of GQ.bodies)WQ(t,[e.shape[2]||1,e.shape[1]||1]),LQ(t.keypoints);Object.keys(a).forEach((e=>Qs(a[e]))),n(GQ.bodies)}))}var jQ=[],qQ=0,XQ=Number.MAX_SAFE_INTEGER,KQ=0,ZQ=2.5;async function YQ(e,t){if(!(null==BQ?void 0:BQ.executor))return[];const n=(t.object.skipTime||0)>Lj()-qQ,a=XQ<(t.object.skipFrames||0);return t.skipAllowed&&n&&a&&jQ.length>0?(XQ++,jQ):(XQ=0,cq.kernels.includes("mod")&&cq.kernels.includes("sparsetodense")?new Promise((async n=>{const a=[e.shape[2]||0,e.shape[1]||0],r=dh.resizeBilinear(e,[KQ,KQ],!1),i=fo(r,IX.tf255),s=Kp(i,[0,3,1,2]);let o;t.object.enabled&&(o=BQ.execute(s)),qQ=Lj();const l=await async function(e,t,n){var a,r;let i=0,s=[];const o=KQ;for(const l of[1,2,4]){const u=13*l,d=kp(e.find((e=>e.shape[1]===u**2&&(e.shape[2]||0)===WK.length))),p=await d.array(),c=kp(e.find((e=>e.shape[1]===u**2&&(e.shape[2]||0)<WK.length))),h=Go(c,[-1,4,((null==(a=c.shape)?void 0:a[1])||0)/4]),f=wo(h,2),m=await f.array();for(let e=0;e<d.shape[0];e++)for(let a=0;a<((null==(r=d.shape)?void 0:r[1])||0);a++){const r=p[e][a];if(r>(n.object.minConfidence||0)&&61!==a){const n=(.5+Math.trunc(e%u))/u,d=(.5+Math.trunc(e/u))/u,p=m[e].map((e=>e*(u/l/o))),[c,h]=[n-ZQ/l*p[0],d-ZQ/l*p[1]],[f,y]=[n+ZQ/l*p[2]-c,d+ZQ/l*p[3]-h];let g=[c,h,f,y];g=g.map((e=>Math.max(0,Math.min(e,1))));const A=[g[0]*t[0],g[1]*t[1],g[2]*t[0],g[3]*t[1]],x={id:i++,score:Math.round(100*r)/100,class:a+1,label:WK[a].label,box:A.map((e=>Math.trunc(e))),boxRaw:g};s.push(x)}}Qs([d,c,h,f])}const l=s.map((e=>[e.boxRaw[1],e.boxRaw[0],e.boxRaw[3],e.boxRaw[2]])),u=s.map((e=>e.score));let d=[];if(l&&l.length>0){const e=await dh.nonMaxSuppressionAsync(l,u,n.object.maxDetected||0,n.object.iouThreshold,n.object.minConfidence);d=Array.from(await e.data()),Qs(e)}return s=s.filter(((e,t)=>d.includes(t))).sort(((e,t)=>t.score-e.score)),s}(o,a,t);jQ=l,Qs([r,i,s,...o]),n(l)})):jQ)}var JQ=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],QQ=JQ.length,e1=JQ.reduce(((e,t,n)=>(e[t]=n,e)),{}),t1=([["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((([e,t])=>[e1[e],e1[t]])),[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]]);function n1(e){const t=e.reduce((({maxX:e,maxY:t,minX:n,minY:a},{position:{x:r,y:i}})=>({maxX:Math.max(e,r),maxY:Math.max(t,i),minX:Math.min(n,r),minY:Math.min(a,i)})),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}var a1,r1=class{constructor(e,t){r(this,"priorityQueue"),r(this,"numberOfElements"),r(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){const e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return-1===this.numberOfElements}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){const n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n}};function i1(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+QQ)}}function s1(e,t,n){const{heatmapY:a,heatmapX:r,id:i}=e,{y:s,x:o}=i1(a,r,i,n);return{x:e.heatmapX*t+o,y:e.heatmapY*t+s}}function o1(e,t,n){return e<t?t:e>n?n:e}function l1(e,t){return{x:e.x+t.x,y:e.y+t.y}}var u1,d1=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],p1=1,c1=16,h1=2500;function f1(e,t,n,a,r,i,s=2){const o=(e,t,n)=>({y:o1(Math.round(e.y/c1),0,t-1),x:o1(Math.round(e.x/c1),0,n-1)}),[l,u]=a.shape,d=(p=o(t.position,l,u),{y:i.get(p.y,p.x,e),x:i.get(p.y,p.x,i.shape[2]/2+e)});var p;let c=l1(t.position,d);for(let e=0;e<s;e++){const e=o(c,l,u),t=i1(e.y,e.x,n,r);c=l1({x:e.x*c1,y:e.y*c1},{x:t.x,y:t.y})}const h=o(c,l,u),f=a.get(h.y,h.x,n);return{position:c,part:JQ[n],score:f}}function m1(e,t,n,a,r){const i=t1.map((([e,t])=>[e1[e],e1[t]])),s=i.map((([,e])=>e)),o=i.map((([e])=>e)),l=t.shape[2],u=s.length,d=new Array(l),p=s1(e.part,c1,n);d[e.part.id]={score:e.score,part:JQ[e.part.id],position:p};for(let e=u-1;e>=0;--e){const a=s[e],i=o[e];d[a]&&!d[i]&&(d[i]=f1(e,d[a],i,t,n,r))}for(let e=0;e<u;++e){const r=o[e],i=s[e];d[r]&&!d[i]&&(d[i]=f1(e,d[r],i,t,n,a))}return d}function y1(e,t,n,a,r){const[i,s]=r.shape;let o=!0;const l=Math.max(n-p1,0),u=Math.min(n+p1+1,i);for(let n=l;n<u;++n){const i=Math.max(a-p1,0),l=Math.min(a+p1+1,s);for(let a=i;a<l;++a)if(r.get(n,a,e)>t){o=!1;break}if(!o)break}return o}function g1(e,{x:t,y:n},a){return e.some((({keypoints:e})=>{var r;const i=null==(r=e[a])?void 0:r.position;return!!i&&function(e,t,n,a){const r=n-e,i=a-t;return r*r+i*i}(n,t,i.y,i.x)<=h1}))}function A1(e,t){return t.reduce(((t,{position:n,score:a},r)=>(g1(e,n,r)||(t+=a),t)),0)/t.length}async function x1(e,t){if(!(null==a1?void 0:a1.executor))return[];const n=Js((()=>{if(!a1.inputs[0].shape)return[];const t=dh.resizeBilinear(e,[a1.inputs[0].shape[2],a1.inputs[0].shape[1]]),n=Lu(fo(Bs(t,"float32"),127.5),1),a=a1.execute(n,d1).map((e=>kp(e,[0])));return a[1]=Ko(a[1]),a})),a=await Promise.all(n.map((e=>e.buffer())));for(const e of n)Qs(e);const r=function(e,t,n,a,r,i){const s=[],o=function(e,t){const[n,a,r]=t.shape,i=new r1(n*a*r,(({score:e})=>e));for(let s=0;s<n;++s)for(let n=0;n<a;++n)for(let a=0;a<r;++a){const r=t.get(s,n,a);r<e||y1(a,r,s,n,t)&&i.enqueue({score:r,part:{heatmapY:s,heatmapX:n,id:a}})}return i}(i,t);for(;s.length<r&&!o.empty();){const r=o.dequeue();if(g1(s,s1(r.part,c1,e),r.part.id))continue;let l=m1(r,t,e,n,a);l=l.filter((e=>e.score>i));const u=A1(s,l),d=n1(l);u>i&&s.push({keypoints:l,box:d,score:Math.round(100*u)/100})}return s}(a[0],a[1],a[2],a[3],t.body.maxDetected,t.body.minConfidence);return a1.inputs[0].shape?function(e,[t,n],[a,r]){const i=t/a,s=n/r;return e.map(((e,t)=>((e,t)=>({id:t,score:e.score,boxRaw:[e.box[0]/r,e.box[1]/a,e.box[2]/r,e.box[3]/a],box:[Math.trunc(e.box[0]*s),Math.trunc(e.box[1]*i),Math.trunc(e.box[2]*s),Math.trunc(e.box[3]*i)],keypoints:e.keypoints.map((({score:e,part:t,position:n})=>({score:e,part:t,position:[Math.trunc(n.x*s),Math.trunc(n.y*i)],positionRaw:[n.x/a,n.y/a]}))),annotations:{}}))(e,t)))}(r,[e.shape[1],e.shape[2]],[a1.inputs[0].shape[2],a1.inputs[0].shape[1]]):[]}var b1=["fgr","pha","r1o","r2o","r3o","r4o"],v1={},w1=0;function k1(e){Qs([v1.r1i,v1.r2i,v1.r3i,v1.r4i,v1.downsample_ratio]),v1.r1i=Gi(0),v1.r2i=Gi(0),v1.r3i=Gi(0),v1.r4i=Gi(0),w1=e.segmentation.ratio||.5,v1.downsample_ratio=Gi(w1)}async function I1(e){return!u1||cq.initial?u1=await vX(e.segmentation.modelPath):e.debug&&zj("cached model:",u1.modelUrl),k1(e),u1}var S1,C1=e=>Js((()=>{const t=kp(e,[0]),n=mo(t,IX.tf255);return Bs(n,"int32")}));function N1(e,t){const n=e?C1(e):dl([t.shape[1]||0,t.shape[2]||0,3],255,"int32"),a=t?C1(t):dl([e.shape[1]||0,e.shape[2]||0,1],255,"int32"),r=qo([n,a],-1);return Qs([n,a]),r}async function T1(e){return!S1||cq.initial?S1=await vX(e.segmentation.modelPath):e.debug&&zj("cached model:",S1.modelUrl),S1}function R1(e,t,n){var a,r;if(!t)return null;if(!(null==(a=null==e?void 0:e.config)?void 0:a.validateModels))return null;const i=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"],s=["biasadd","fusedbatchnormv3","matmul","switch","shape","merge","split","broadcastto"],o=[],l=[],u=t.modelUrl,d=t.executor;if(null==(r=null==d?void 0:d.graph)?void 0:r.nodes)for(const e of Object.values(d.graph.nodes)){const t=e.op.toLowerCase();o.includes(t)||o.push(t)}else!d&&e.config.debug&&zj("model not loaded",n);for(const t of o)i.includes(t)||s.includes(t)||e.env.kernels.includes(t)||e.env.kernels.includes(t.replace("_",""))||e.env.kernels.includes(t.replace("native",""))||e.env.kernels.includes(t.replace("v2",""))||l.push(t);return e.config.debug&&l.length>0&&zj("model validation failed:",n,l),l.length>0?{name:n,missing:l,ops:o,url:u}:null}var E1,$1,M1,F1,_1,P1=class{constructor(e){r(this,"instance"),r(this,"models",{}),this.models={},this.instance=e}stats(){let e=0,t=0,n=0;for(const a of Object.values(bX))e+=a.sizeFromManifest,t+=a.sizeLoadedWeights,n+=a.sizeDesired;const a=n>0?t/n:0;return{numLoadedModels:Object.values(bX).length,numDefinedModels:Object.keys(this.models).length,percentageLoaded:a,totalSizeFromManifest:e,totalSizeWeights:t,totalSizeLoading:n,modelStats:Object.values(bX)}}reset(){for(const e of Object.keys(this.models))this.models[e]=null}async load(e){var t,n,a,r,i,s,o,l,u,d,p,c,h,f,m,y,g,A,x,b,v,w,k,I,S,C,N;cq.initial&&this.reset(),e&&(this.instance=e);const T={};T.blazeface=this.instance.config.face.enabled&&!this.models.blazeface?async function(e){var t;return cq.initial&&(AZ=null),AZ?e.debug&&zj("cached model:",AZ.modelUrl):AZ=await vX(null==(t=e.face.detector)?void 0:t.modelPath),wZ=AZ.executor&&AZ.inputs[0].shape?AZ.inputs[0].shape[2]:256,kZ=nu(wZ,"int32"),vZ=Rp(function(e){const t=192===e?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},n=[];for(let a=0;a<t.strides.length;a++){const r=t.strides[a],i=Math.floor((e+r-1)/r),s=Math.floor((e+r-1)/r),o=t.anchors[a];for(let e=0;e<i;e++){const t=r*(e+.5);for(let e=0;e<s;e++){const a=r*(e+.5);for(let e=0;e<o;e++)n.push([a,t])}}}return n}(wZ)),AZ}(this.instance.config):null,T.antispoof=this.instance.config.face.enabled&&(null==(t=this.instance.config.face.antispoof)?void 0:t.enabled)&&!this.models.antispoof?async function(e){var t;return cq.initial&&(aY=null),aY?e.debug&&zj("cached model:",aY.modelUrl):aY=await vX(null==(t=e.face.antispoof)?void 0:t.modelPath),aY}(this.instance.config):null,T.liveness=this.instance.config.face.enabled&&(null==(n=this.instance.config.face.liveness)?void 0:n.enabled)&&!this.models.liveness?async function(e){var t;return cq.initial&&(oY=null),oY?e.debug&&zj("cached model:",oY.modelUrl):oY=await vX(null==(t=e.face.liveness)?void 0:t.modelPath),oY}(this.instance.config):null,T.faceres=this.instance.config.face.enabled&&(null==(a=this.instance.config.face.description)?void 0:a.enabled)&&!this.models.faceres?async function(e){var t;return cq.initial&&(LZ=null),LZ?e.debug&&zj("cached model:",LZ.modelUrl):LZ=await vX(null==(t=e.face.description)?void 0:t.modelPath),LZ}(this.instance.config):null,T.emotion=this.instance.config.face.enabled&&(null==(r=this.instance.config.face.emotion)?void 0:r.enabled)&&!this.models.emotion?async function(e){var t,n,a;return cq.initial&&(zZ=null),zZ?e.debug&&zj("cached model:",zZ.modelUrl):(zZ=await vX(null==(t=e.face.emotion)?void 0:t.modelPath),ZZ=3===(null==(a=null==(n=null==zZ?void 0:zZ.inputs)?void 0:n[0].shape)?void 0:a[3]),HZ=ZZ?["angry","disgust","fear","happy","neutral","sad","surprise"]:["angry","disgust","fear","happy","sad","surprise","neutral"]),zZ}(this.instance.config):null,T.iris=this.instance.config.face.enabled&&(null==(i=this.instance.config.face.iris)?void 0:i.enabled)&&!(null==(s=this.instance.config.face.attention)?void 0:s.enabled)&&!this.models.iris?async function(e){var t,n;return cq.initial&&(xZ=null),xZ?e.debug&&zj("cached model:",xZ.modelUrl):xZ=await vX(null==(t=e.face.iris)?void 0:t.modelPath),-1===(IZ=(null==xZ?void 0:xZ.executor)&&(null==(n=xZ.inputs)?void 0:n[0].shape)?xZ.inputs[0].shape[2]:0)&&(IZ=64),xZ}(this.instance.config):null,T.facemesh=this.instance.config.face.enabled&&(null==(o=this.instance.config.face.mesh)?void 0:o.enabled)&&!this.models.facemesh?async function(e){var t,n,a,r,i,s;return cq.initial&&(BZ=null),(null==(t=e.face.attention)?void 0:t.enabled)&&(null==BZ?void 0:BZ.signature)&&Object.keys((null==(n=null==BZ?void 0:BZ.signature)?void 0:n.outputs)||{}).length<6&&(BZ=null),BZ?e.debug&&zj("cached model:",BZ.modelUrl):BZ=(null==(a=e.face.attention)?void 0:a.enabled)?await vX(e.face.attention.modelPath):await vX(null==(r=e.face.mesh)?void 0:r.modelPath),VZ=BZ.executor&&(null==(i=null==BZ?void 0:BZ.inputs)?void 0:i[0].shape)?null==(s=null==BZ?void 0:BZ.inputs)?void 0:s[0].shape[2]:256,BZ}(this.instance.config):null,T.gear=this.instance.config.face.enabled&&(null==(l=this.instance.config.face.gear)?void 0:l.enabled)&&!this.models.gear?async function(e){var t;return cq.initial&&(hY=null),hY?e.debug&&zj("cached model:",hY.modelUrl):hY=await vX(null==(t=e.face.gear)?void 0:t.modelPath),hY}(this.instance.config):null,T.ssrnetage=this.instance.config.face.enabled&&(null==(u=this.instance.config.face.ssrnet)?void 0:u.enabled)&&!this.models.ssrnetage?async function(e){return cq.initial&&(xY=null),xY?e.debug&&zj("cached model:",xY.modelUrl):xY=await vX(e.face.ssrnet.modelPathAge),xY}(this.instance.config):null,T.ssrnetgender=this.instance.config.face.enabled&&(null==(d=this.instance.config.face.ssrnet)?void 0:d.enabled)&&!this.models.ssrnetgender?async function(e){var t;return cq.initial&&(NY=null),NY?e.debug&&zj("cached model:",NY.modelUrl):NY=await vX(null==(t=e.face.ssrnet)?void 0:t.modelPathGender),NY}(this.instance.config):null,T.mobilefacenet=this.instance.config.face.enabled&&(null==(p=this.instance.config.face.mobilefacenet)?void 0:p.enabled)&&!this.models.mobilefacenet?async function(e){var t;return cq.initial&&(FY=null),FY?e.debug&&zj("cached model:",FY.modelUrl):FY=await vX(null==(t=e.face.mobilefacenet)?void 0:t.modelPath),FY}(this.instance.config):null,T.insightface=this.instance.config.face.enabled&&(null==(c=this.instance.config.face.insightface)?void 0:c.enabled)&&!this.models.insightface?async function(e){return cq.initial&&(WY=null),WY?e.debug&&zj("cached model:",WY.modelUrl):WY=await vX(e.face.insightface.modelPath),WY}(this.instance.config):null,T.blazepose=this.instance.config.body.enabled&&!this.models.blazepose&&(null==(h=this.instance.config.body.modelPath)?void 0:h.includes("blazepose"))?async function(e){if(cq.initial&&(IK=null),IK)e.debug&&zj("cached model:",IK.modelUrl);else{const t=(null==(IK=await vX(e.body.modelPath))?void 0:IK.executor)?Object.values(IK.modelSignature.inputs):void 0;RK=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}return IK}(this.instance.config):null,T.blazeposedetect=this.instance.config.body.enabled&&!this.models.blazeposedetect&&this.instance.config.body.detector&&this.instance.config.body.detector.modelPath?async function(e){if(cq.initial&&(AK=null),!AK&&e.body.detector&&e.body.detector.modelPath){const t=(null==(AK=await vX(e.body.detector.modelPath))?void 0:AK.executor)?Object.values(AK.modelSignature.inputs):void 0;wK=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}else e.debug&&AK&&zj("cached model:",AK.modelUrl);return function(){const e=[];let t=0;for(;t<5;){let n=0,a=t;for(;a<kK.length&&kK[a]===kK[t];)n+=2,a++;const r=kK[t],i=Math.ceil(wK/r),s=Math.ceil(wK/r);for(let t=0;t<i;++t)for(let a=0;a<s;++a)for(let r=0;r<n;++r)e.push({x:(a+.5)/s,y:(t+.5)/i});t=a}xK={x:Tp(e.map((e=>e.x))),y:Tp(e.map((e=>e.y)))}}(),AK}(this.instance.config):null,T.efficientpose=this.instance.config.body.enabled&&!this.models.efficientpose&&(null==(f=this.instance.config.body.modelPath)?void 0:f.includes("efficientpose"))?async function(e){return cq.initial&&(qK=null),qK?e.debug&&zj("cached model:",qK.modelUrl):qK=await vX(e.body.modelPath),qK}(this.instance.config):null,T.movenet=this.instance.config.body.enabled&&!this.models.movenet&&(null==(m=this.instance.config.body.modelPath)?void 0:m.includes("movenet"))?async function(e){var t;return cq.initial&&(PQ=null),PQ?e.debug&&zj("cached model:",PQ.modelUrl):(NX(["size"],e),PQ=await vX(e.body.modelPath)),(VQ=(null==PQ?void 0:PQ.executor)&&(null==(t=null==PQ?void 0:PQ.inputs)?void 0:t[0].shape)?PQ.inputs[0].shape[2]:0)<64&&(VQ=256),Le().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&Le().set("WEBGL_USE_SHAPES_UNIFORMS",!1),PQ}(this.instance.config):null,T.posenet=this.instance.config.body.enabled&&!this.models.posenet&&(null==(y=this.instance.config.body.modelPath)?void 0:y.includes("posenet"))?async function(e){return!a1||cq.initial?a1=await vX(e.body.modelPath):e.debug&&zj("cached model:",a1.modelUrl),a1}(this.instance.config):null,T.handtrack=this.instance.config.hand.enabled&&!this.models.handtrack&&(null==(A=null==(g=this.instance.config.hand.detector)?void 0:g.modelPath)?void 0:A.includes("handtrack"))?async function(e){var t;if(cq.initial&&(lQ[0]=null),lQ[0])e.debug&&zj("cached model:",lQ[0].modelUrl);else{NX(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),lQ[0]=await vX(null==(t=e.hand.detector)?void 0:t.modelPath);const n=lQ[0].executor?Object.values(lQ[0].modelSignature.inputs):void 0;dQ[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,dQ[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return lQ[0]}(this.instance.config):null,T.handskeleton=this.instance.config.hand.enabled&&this.instance.config.hand.landmarks&&!this.models.handskeleton&&(null==(b=null==(x=this.instance.config.hand.detector)?void 0:x.modelPath)?void 0:b.includes("handtrack"))?async function(e){var t;if(cq.initial&&(lQ[1]=null),lQ[1])e.debug&&zj("cached model:",lQ[1].modelUrl);else{lQ[1]=await vX(null==(t=e.hand.skeleton)?void 0:t.modelPath);const n=lQ[1].executor?Object.values(lQ[1].modelSignature.inputs):void 0;dQ[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,dQ[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return lQ[1]}(this.instance.config):null,this.instance.config.hand.enabled&&!this.models.handdetect&&(null==(w=null==(v=this.instance.config.hand.detector)?void 0:v.modelPath)?void 0:w.includes("handdetect"))&&(T.handdetect=async function(e){var t;return cq.initial&&(eQ=null),eQ?e.debug&&zj("cached model:",eQ.modelUrl):eQ=await vX(null==(t=e.hand.detector)?void 0:t.modelPath),eQ}(this.instance.config),T.handskeleton=async function(e){var t;return cq.initial&&(tQ=null),tQ?e.debug&&zj("cached model:",tQ.modelUrl):tQ=await vX(null==(t=e.hand.skeleton)?void 0:t.modelPath),tQ}(this.instance.config)),T.centernet=this.instance.config.object.enabled&&!this.models.centernet&&(null==(k=this.instance.config.object.modelPath)?void 0:k.includes("centernet"))?async function(e){if(cq.initial&&(LK=null),LK)e.debug&&zj("cached model:",LK.modelUrl);else{const t=(null==(LK=await vX(e.object.modelPath))?void 0:LK.executor)?Object.values(LK.modelSignature.inputs):void 0;BK=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return LK}(this.instance.config):null,T.nanodet=this.instance.config.object.enabled&&!this.models.nanodet&&(null==(I=this.instance.config.object.modelPath)?void 0:I.includes("nanodet"))?async function(e){if(!BQ||cq.initial){const t=(null==(BQ=await vX(e.object.modelPath))?void 0:BQ.executor)?Object.values(BQ.modelSignature.inputs):void 0;KQ=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):416}else e.debug&&zj("cached model:",BQ.modelUrl);return BQ}(this.instance.config):null,T.selfie=this.instance.config.segmentation.enabled&&!this.models.selfie&&(null==(S=this.instance.config.segmentation.modelPath)?void 0:S.includes("selfie"))?T1(this.instance.config):null,T.meet=this.instance.config.segmentation.enabled&&!this.models.meet&&(null==(C=this.instance.config.segmentation.modelPath)?void 0:C.includes("meet"))?RQ(this.instance.config):null,T.rvm=this.instance.config.segmentation.enabled&&!this.models.rvm&&(null==(N=this.instance.config.segmentation.modelPath)?void 0:N.includes("rvm"))?I1(this.instance.config):null;for(const[e,t]of Object.entries(T))(null==t?void 0:t.then)&&t.then((t=>this.models[e]=t));await Promise.all(Object.values(T))}list(){const e=Object.keys(this.models).map((e=>{var t;return{name:e,loaded:null!==this.models[e],size:0,url:this.models[e]?null==(t=this.models[e])?void 0:t.modelUrl:null}}));for(const t of e){const e=Object.keys(bX).find((e=>e.startsWith(t.name)));e&&(t.size=bX[e].sizeLoadedWeights,t.url=bX[e].url)}return e}loaded(){return this.list().filter((e=>e.loaded)).map((e=>e.name))}validate(){const e=[];for(const t of Object.keys(this.models)){const n=this.models[t];if(!n)continue;const a=R1(this.instance,n,t);a&&e.push(a)}return e}},O1="\n/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA\nAAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu\nbmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob\nIxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo\nKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E\nAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE\nEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH\nSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1\ntre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB\nAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET\nIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla\nY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG\nx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML\nXp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF\nPUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/\nAJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z\n5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9\nzZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO\ntHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6\n8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W\nwA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk\nEtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6\nGhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT\nA7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep\nrBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb\nLCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ\nih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K\nKAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l\npBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x\nUqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4\nHaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr\nxL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS\nNO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD\n1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX\n+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3\nGBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K\nq4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0\nnhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm\nuic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH\nArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV\nwF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8\n87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P\nFQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD\nYNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv\nJmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ\nQmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el\nUJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681\nly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly\nCK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc\nUDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF\n63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x\nXY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2\nZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk\nXb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK\ncBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef\neNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4\n/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5\nrl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru\n/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A\nzviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO\nI4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1\njfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ\nGRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG\ncZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb\nWmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis\nZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH\nckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi\nlbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO\nxuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK\nJtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX\nPaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c\nW0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t\nC6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk\n4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn\nxHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW\nvHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi\nqr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV\nhamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F\nj4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6\nwqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm\noy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ\nk7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg\nnQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP\n1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1\nH1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ\n1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx\nzSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt\nfFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp\nOxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj\nVtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy\nrFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe\n5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D\nd/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69\nMlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ\nFbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ\nMA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP\nByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn\n0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU\nyOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is\npNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz\nTSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu\nuCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem\ngGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk\nHvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy\ns9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu\nm6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb\n0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz\n9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN\nDNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n\nR6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk\nnmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu\n6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd\n9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb\nSms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S\nMSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz\nFEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8\nVSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx\nY0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ\nmupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+\n5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh\n05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd\nua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ\n5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR\nMqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8\n1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4\nB9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag\nBc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA\n3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn\n3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx\n1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU\ntzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6\nf3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA\nbvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ\nzyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup\n6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM\n350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0\n/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a\nYfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ\nagBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO\nmAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl\nmOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR\nnqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo\nEPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt\n4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ\nScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p\niMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj\nPQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l\nc6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1\n8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3\nylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY\neuPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==",D1="\n/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk\nJyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF\nRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA\nAhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA\nAQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA\nAAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA\nAhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj\n+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt\nFh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR\nPLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl\nmZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp\n+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa\nzhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D\nh1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2\nex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67\nd4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y\nRv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP\nLd3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC\nvy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi\neSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/\nMx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+\nr3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO\nO0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s\ntfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN\nTmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc\n0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj\nq83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w\n+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s\nd8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t\ncI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4\nYibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe\nbzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi\nKxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6\nrNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ\n9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf\nJvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V\nbxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q\nVbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM\nlorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/\n/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme\nE4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv\nfauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6\njkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN\n+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk\nRvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK\ncGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop\nyW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn\nE8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX\n12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW\niI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS\nRWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf\n0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx\nDS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL\nG8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK\nxC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ\na9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4\nZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6\ntvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+\nfJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE\nerk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR\nMd5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9\nlcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD\nj8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV\n5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt\nCu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/\n+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c\nvUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p\njrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0\n77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP\nSel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8\n5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe\nY0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R\nHwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV\nrWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU\nz7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8\nto6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X\ny8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt\nstcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/\nw9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT\nDpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l\nXV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t\nydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS\n34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX\ne09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn\n26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf\n3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q\n6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P\nNbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO\nyZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN\n3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8\n2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h\ndqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx\nkr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t\nDHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb\neFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc\n1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka\nc258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE\nxEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu\ns5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK\n0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9\ndM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt\nPXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T\nMd/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T\nadq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b\nSVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt\npdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm\nvfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr\nEejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N\nvwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh\nZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I\ntkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW\nd43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe\nN4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218\n8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG\nPNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY\nV1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw\nw18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT\nEx5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1\naxqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/\ntDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I\nmbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe\nXRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1\nizjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2\ncrFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4\nOadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2\nr8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx\nzc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz\n+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v\nMevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu\nryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095\nYZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE\n9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8\nmNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O\nuSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O\nfft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6\nOlty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT\nuTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3\n6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1\nMb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF\nfeH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq\nxVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v\ned7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ\nmtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz\nmWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP\nB39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0\n5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1\nmkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt\nmxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO\n1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq\nZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q\nky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7\nROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK\nGEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i\ntMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T\n+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+\nO8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO\nesd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es\nvPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz\nXV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1\n+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY\n36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL\nq555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY\n3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz\np7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr\n1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV\nxUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt\npCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS\nfP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH\nmMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z\n1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+\nn3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d\nMRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df\nzXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl\nJ2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs\nzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH\nDpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ\ndHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR\ntER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j\nadmFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC\nb2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X\nqdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh\nydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O\n8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L\nT7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0\nZa1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr\nvNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer\nrWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL\noNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq\nj/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh\nodZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8\n8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1\nlNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+\noza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL\nknU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK\nEtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N\nmtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm\n9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N\nIpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W\nMYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2\n+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql\no+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37\nO99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE\nTE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1\nL7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4\nizsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt\n1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb\nV5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum\nL37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12\nCvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE\nebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo\nGvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu\nL8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh\n5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3\n6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9\nXO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM\nfeKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj\nSZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF\nXaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr\n79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h\nyeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT\nOC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223\n2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt\nadohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y\ncnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX\nDpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p\n7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso\nS24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l\nbPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe\nvVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG\nH6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7\nx3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz\n5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY\nq+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn\nvLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2\nIjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK\nz0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ\nYYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON\nZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW\nekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf\ncjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c\nbiuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO\nCkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw\ny1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi\nQXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E\nbL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r\ntv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t\nLRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP\nRqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm\ns7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el\nXX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1\nvK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq\nqrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v\nVYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0\nZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q\nmT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm\n6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG\nf63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo\ndPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22\ngtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M\nMoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb\nc2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX\n6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn\n1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK\nfOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ\nEqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u\n7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT\nqPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa\nS2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf\nLp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU\nIiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O\n8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c\nvU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx\n5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V\nKTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm\n2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu\nj8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB\nTTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9\nRUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL\nCWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA\nAAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8\ncTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj\nqKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF\n0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK\nZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK\n66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu\nXT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9\nXOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN\nM2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv\nVrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK\n7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI\n3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m\nXY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m\n1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A\nJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC\nEgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9\n8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL\nOrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H\nM+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA\nTsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8\nelpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp\nBjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS\nCRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r\nrcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY\njbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW\nUsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB\nKUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb\nSz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL\n+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v\nT471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM\nsfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj\nFontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl\n5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q\n7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv\n6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa\n0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/\nAOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM\nd8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5\n6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP\nbFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu\nLJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy\nwt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX\n0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK\n3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn\nKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0\nvobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t\nzya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps\nuOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi\nFdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2\nO3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z\naK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz\n0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb\nT/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l\nqMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t\ntrJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn\nmvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa\neq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe\nPwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of\nTdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O\n1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG\nf/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi\n0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY\n5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc\nV2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L\n/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM\nt/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd\nVknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD\nKLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R\nfwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3\nVxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ\nDJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ\n3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv\nx7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD\nweqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI\n6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew\nPnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk\nj3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm\nOqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/\nAKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez\nN9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ\n92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp\n+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue\nV9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv\navHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0\nvQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP\n8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt\nn1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw\nnUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3\n7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P\n0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U\nx8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG\n0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L\nfaQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ\nQKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA\nBAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A\ntLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv\n9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr\njn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm\nb7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB\nACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk\ndEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1\nrMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+\nx+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA\nAAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr\nYvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4\n5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V\nkK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg\nBIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA\nAAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g\nWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx\nOEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2\nH/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF\n+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V\nh6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA\nEgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu\nZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml\nHMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl\nn0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN\n3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi\n/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00\n+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC\nUACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2\nM2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp\n5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn\nN1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS\nOjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL\n/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo\nstLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3\nGyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA\nAAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4\nqmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy\nWEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a\nfJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI\nrTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2\nrz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc\n3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3\nTur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA\nAAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx\nskA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F\no7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx\nNO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h\n2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te\npSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7\ncvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7\nmZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA\nAAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA\nhGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J\nqx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI\nXRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy\nRHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX\nqNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX\nkaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P\nya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC\nExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA\nlAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA\nAAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o\nb9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP\ny6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae\nkzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu\n9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ\nk7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1\n8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp\nDXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh\nnyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ\nAAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA\nAAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO\nyvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5\nPM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii\nIpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r\nO3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE\nyTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX\n6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2\nJgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS\nAAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA\nAAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx\nWa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI\n6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5\nK2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7\nVv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id\nPW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ\n2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4\neF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7\npiVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR\nACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ\nJQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i\nUiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61\nrZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq\nZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2\nf0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO\nIjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts\nbAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA\nAAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA\nBAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2\nSbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T\nlBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/\n2Q==";async function z1(e,t){await CX(e,!1);const n=Lj();return e.state="warmup",t&&(e.config=Bj(e.config,t)),e.config.warmup&&0!==e.config.warmup.length&&"none"!==e.config.warmup?new Promise((async t=>{await e.models.load(),await async function(e){var t,n,a,r;if(!Le().flagRegistry.ENGINE_COMPILE_ONLY)return;const i=ro(),s=uo();if("webgl"!==i&&"humangl"!==i||!(null==s?void 0:s.checkCompileCompletion))return;Le().set("ENGINE_COMPILE_ONLY",!0);const o=Ks().state.numTensors,l=[];for(const[i,s]of Object.entries(e.models.models)){if(!s)continue;const o=(null==s?void 0:s.modelSignature)&&(null==(n=null==(t=null==s?void 0:s.inputs)?void 0:t[0])?void 0:n.shape)?[...s.inputs[0].shape]:[1,64,64,3],u=(null==s?void 0:s.modelSignature)&&(null==(r=null==(a=null==s?void 0:s.inputs)?void 0:a[0])?void 0:r.dtype)?s.inputs[0].dtype:"float32";for(let e=0;e<o.length;e++)-1===o[e]&&(o[e]=0===e?1:64);const d=ed(o,u);try{const e=s.execute(d);l.push(i),Array.isArray(e)?e.forEach((e=>Qs(e))):Qs(e)}catch(t){e.config.debug&&zj("compile fail model:",i)}Qs(d)}const u=await s.checkCompileCompletionAsync();s.getUniformLocations(),e.config.debug&&zj("compile pass:",{models:l,kernels:u.length}),Le().set("ENGINE_COMPILE_ONLY",!1);const d=Ks().state.numTensors;d-o>0&&zj("tensor leak:",d-o)}(e);const a=await async function(e){let t;return t="function"==typeof createImageBitmap?await async function(e){const t=(e,t="application/octet-stream")=>fetch(`data:${t};base64,${e}`).then((e=>e.blob()));let n,a;switch(e.config.warmup){case"face":n=await t(O1);break;case"body":case"full":n=await t(D1);break;default:n=null}if(n){const t=await createImageBitmap(n);a=await e.detect(t,e.config),t.close()}return a}(e):"undefined"!=typeof Image||void 0!==cq.Canvas?await async function(e){return new Promise((t=>{let n,a;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+O1;break;case"full":case"body":n="data:image/jpeg;base64,"+D1;break;default:n=""}if("undefined"!=typeof Image)a=new Image;else{if(!cq.Image)return void t(void 0);a=new cq.Image}a.onload=async()=>{const n=uq(a.naturalWidth,a.naturalHeight);if(n){const r=n.getContext("2d");r&&r.drawImage(a,0,0);const i=await e.image(n,!0),s=i.tensor?await e.detect(i.tensor,e.config):void 0;t(s)}else zj("Warmup: Canvas not found"),t(void 0)},n?a.src=n:t(void 0)}))}(e):await async function(e){const t=e=>Buffer.from(e,"base64");let n,a;if(n="face"===e.config.warmup?t(O1):t(D1),"node"in u&&"tensorflow"===ro()){const t=(void 0).decodeJpeg(n),r=du(t,0);e.tf.dispose(t),a=await e.detect(r,e.config),e.tf.dispose(r)}else e.config.debug&&zj("Warmup tfjs-node not loaded");return a}(e),t}(e),r=Lj();e.config.debug&&zj("warmup",e.config.warmup,Math.round(r-n),"ms"),e.emit("warmup"),t(a)})):xQ()}E1=new WeakMap,$1=new WeakMap,M1=new WeakMap,F1=new WeakMap,_1=new WeakMap,console.log("Hello World!");const L1=new class{constructor(e){r(this,"version"),r(this,"config"),r(this,"result"),r(this,"state"),r(this,"process"),r(this,"tf"),r(this,"env",cq),r(this,"draw",TX),r(this,"match",EQ),r(this,"models"),r(this,"events"),r(this,"faceTriangulation"),r(this,"faceUVMap"),r(this,"performance"),o(this,E1,void 0),o(this,$1,void 0),o(this,M1,void 0),r(this,"analyze",((...e)=>{if(!s(this,$1))return;const t=this.tf.engine().state.numTensors,n=s(this,E1);l(this,E1,t);const a=t-n;0!==a&&zj(...e,a)})),o(this,F1,(e=>{if(!s(this,M1))return null;if(!e)return"input is not defined";if(this.env.node&&!(e instanceof ri))return"input must be a tensor";try{this.tf.getBackend()}catch(e){return"backend not loaded"}return null})),r(this,"webcam",new class{constructor(){r(this,"config"),r(this,"element"),r(this,"stream"),r(this,"devices",[]),r(this,"enumerate",(async()=>{try{const e=await navigator.mediaDevices.enumerateDevices();this.devices=e.filter((e=>"videoinput"===e.kind))}catch(e){this.devices=[]}return this.devices})),r(this,"start",(async e=>{var t,n;if((null==e?void 0:e.debug)&&(this.config.debug=null==e?void 0:e.debug),(null==e?void 0:e.crop)&&(this.config.crop=null==e?void 0:e.crop),(null==e?void 0:e.mode)&&(this.config.mode=null==e?void 0:e.mode),(null==e?void 0:e.width)&&(this.config.width=null==e?void 0:e.width),(null==e?void 0:e.height)&&(this.config.height=null==e?void 0:e.height),(null==e?void 0:e.id)&&(this.config.id=null==e?void 0:e.id),null==e?void 0:e.element)if("string"==typeof e.element){const t=document.getElementById(e.element);if(!(t&&t instanceof HTMLVideoElement))return this.config.debug&&zj("webcam","cannot get dom element",e.element),`webcam error: cannot get dom element: ${e.element}`;this.element=t}else{if(!(e.element instanceof HTMLVideoElement))return this.config.debug&&zj("webcam","unknown dom element",e.element),`webcam error: unknown dom element: ${e.element}`;this.element=e.element}else this.element=document.createElement("video");const a={audio:!1,video:{facingMode:"front"===this.config.mode?"user":"environment",resizeMode:this.config.crop?"crop-and-scale":"none"}};if((null==(t=this.config)?void 0:t.width)>0&&(a.video.width={ideal:this.config.width}),(null==(n=this.config)?void 0:n.height)>0&&(a.video.height={ideal:this.config.height}),this.config.id&&(a.video.deviceId=this.config.id),this.element.addEventListener("play",(()=>{this.config.debug&&zj("webcam","play")})),this.element.addEventListener("pause",(()=>{this.config.debug&&zj("webcam","pause")})),this.element.addEventListener("click",(async()=>{this.element&&this.stream&&(this.element.paused?await this.element.play():this.element.pause())})),!(null==navigator?void 0:navigator.mediaDevices))return this.config.debug&&zj("webcam error","no devices"),"webcam error: no devices";try{this.stream=await navigator.mediaDevices.getUserMedia(a)}catch(e){return zj("webcam",e),`webcam error: ${e}`}if(!this.stream)return this.config.debug&&zj("webcam error","no stream"),"webcam error no stream";this.element.srcObject=this.stream;const r=new Promise((e=>{this.element?this.element.onloadeddata=()=>e(!0):e(!1)}));return await r,await this.element.play(),this.config.debug&&zj("webcam",{width:this.width,height:this.height,label:this.label,stream:this.stream,track:this.track,settings:this.settings,constraints:this.constraints,capabilities:this.capabilities}),`webcam: ${this.label}`})),r(this,"pause",(()=>{this.element&&this.element.pause()})),r(this,"play",(async()=>{this.element&&await this.element.play()})),r(this,"stop",(()=>{this.config.debug&&zj("webcam","stop"),this.track&&this.track.stop()})),this.config={element:void 0,debug:!0,mode:"front",crop:!1,width:0,height:0}}get track(){if(this.stream)return this.stream.getVideoTracks()[0]}get capabilities(){if(this.track)return this.track.getCapabilities?this.track.getCapabilities():void 0}get constraints(){if(this.track)return this.track.getConstraints?this.track.getConstraints():void 0}get settings(){if(!this.stream)return;const e=this.stream.getVideoTracks()[0];return e.getSettings?e.getSettings():void 0}get label(){return this.track?this.track.label:""}get paused(){var e;return(null==(e=this.element)?void 0:e.paused)||!1}get width(){var e;return(null==(e=this.element)?void 0:e.videoWidth)||0}get height(){var e;return(null==(e=this.element)?void 0:e.videoHeight)||0}}),r(this,"emit",(e=>{var t;(null==(t=this.events)?void 0:t.dispatchEvent)&&this.events.dispatchEvent(new Event(e))})),o(this,_1,{});const t=(Dj.tfjs||Rf).replace(/-(.*)/,"");var n;Vj.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${t}/dist/`,Vj.modelBasePath=cq.browser?"../models/":"file://models/",this.version=wX,Object.defineProperty(this,"version",{value:wX}),this.config=JSON.parse(JSON.stringify(Vj)),Object.seal(this.config),this.config.cacheModels="undefined"!=typeof indexedDB,e&&(this.config=Bj(this.config,e)),n=this.config,xX.cacheModels=n.cacheModels,xX.verbose=n.debug,xX.modelBasePath=n.modelBasePath,this.tf=u,this.state="idle",l(this,E1,0),l(this,$1,!1),l(this,M1,!1),this.performance={},this.events="undefined"!=typeof EventTarget?new EventTarget:void 0,this.models=new P1(this),yK(),this.result=xQ(),this.process={tensor:null,canvas:null},this.faceTriangulation=UZ,this.faceUVMap=GZ,R1(this,null,""),this.emit("create"),(this.config.debug||this.env.browser)&&zj(`version: ${this.version}`),this.config.debug&&zj(`tfjs version: ${this.tf.version["tfjs-core"]}`);const a=JSON.parse(JSON.stringify(this.env));delete a.kernels,delete a.initial,delete a.perfadd,this.config.debug&&zj("environment:",a)}reset(){const e=this.config.backend;this.config=JSON.parse(JSON.stringify(Vj)),this.config.backend=e,lq(),cq.initial=!0}validate(e){const t=Wj(Vj,e||this.config);return 0===t.length&&(this.config=Bj(this.config,e)),t}now(){return Lj()}image(e,t=!1){return pq(e,this.config,t)}async segmentation(e,t){var n,a,r;if(t&&(this.config=Bj(this.config,t)),!this.config.segmentation.enabled)return null;const i=await pq(e,this.config);if(!i.tensor)return null;let s=null;return(null==(n=this.config.segmentation.modelPath)?void 0:n.includes("rvm"))&&(s=await async function(e,t){if(u1||(u1=await I1(t)),!(null==u1?void 0:u1.executor))return null;v1.src=fo(e,255),w1!==t.segmentation.ratio&&k1(t);const[n,a,r,i,s,o]=await u1.executeAsync(v1,b1);let l;switch(t.segmentation.mode||"default"){case"default":l=N1(n,a);break;case"alpha":l=N1(null,a);break;case"foreground":l=N1(n,null);break;case"state":u=r,l=Js((()=>{const e={};return e.unstack=Up(u,-1),e.concat=qo(e.unstack,1),e.split=bp(e.concat,4,1),e.stack=qo(e.split,2),e.squeeze=kp(e.stack,[0]),e.expand=du(e.squeeze,-1),e.add=co(e.expand,1),e.mul=mo(e.add,127.5),e.cast=Bs(e.mul,"int32"),e.tile=cu(e.cast,[1,1,3]),e.alpha=dl([e.tile.shape[0]||0,e.tile.shape[1]||0,1],255,"int32"),qo([e.tile,e.alpha],-1)}));break;default:l=Gi(0)}var u;return Qs([v1.src,n,a,v1.r1i,v1.r2i,v1.r3i,v1.r4i]),[v1.r1i,v1.r2i,v1.r3i,v1.r4i]=[r,i,s,o],l}(i.tensor,this.config)),(null==(a=this.config.segmentation.modelPath)?void 0:a.includes("meet"))&&(s=await async function(e,t){var n;if(vQ||(vQ=await RQ(t)),!(null==vQ?void 0:vQ.executor)||!(null==(n=null==vQ?void 0:vQ.inputs)?void 0:n[0].shape))return null;const a={};let r;switch(a.resize=dh.resizeBilinear(e,[vQ.inputs[0].shape?vQ.inputs[0].shape[1]:0,vQ.inputs[0].shape?vQ.inputs[0].shape[2]:0],!1),a.norm=fo(a.resize,IX.tf255),a.res=vQ.execute(a.norm),a.squeeze=kp(a.res,[0]),[a.bgRaw,a.fgRaw]=Up(a.squeeze,2),a.fg=yp(a.fgRaw),a.mul=mo(a.fg,IX.tf255),a.expand=du(a.mul,2),a.output=dh.resizeBilinear(a.expand,[e.shape[1]||0,e.shape[2]||0]),t.segmentation.mode||"default"){case"default":a.input=kp(e),a.concat=qo([a.input,a.output],-1),r=Bs(a.concat,"int32");break;case"alpha":r=Bs(a.output,"int32");break;default:r=Gi(0)}return Object.keys(a).forEach((e=>Qs(a[e]))),r}(i.tensor,this.config)),(null==(r=this.config.segmentation.modelPath)?void 0:r.includes("selfie"))&&(s=await async function(e,t){var n;if(S1||(S1=await T1(t)),!(null==S1?void 0:S1.executor)||!(null==(n=null==S1?void 0:S1.inputs)?void 0:n[0].shape))return null;const a={};let r;switch(a.resize=dh.resizeBilinear(e,[S1.inputs[0].shape?S1.inputs[0].shape[1]:0,S1.inputs[0].shape?S1.inputs[0].shape[2]:0],!1),a.norm=fo(a.resize,IX.tf255),a.res=S1.execute(a.norm),a.squeeze=kp(a.res,[0]),a.alpha=dh.resizeBilinear(a.squeeze,[e.shape[1]||0,e.shape[2]||0]),a.mul=mo(a.alpha,IX.tf255),t.segmentation.mode||"default"){case"default":a.input=kp(e),a.concat=qo([a.input,a.mul],-1),r=Bs(a.concat,"int32");break;case"alpha":r=Bs(a.mul,"int32");break;default:r=Gi(0)}return Object.keys(a).forEach((e=>Qs(a[e]))),r}(i.tensor,this.config)),Qs(i.tensor),s}compare(e,t){return async function(e,t,n){const a={};if(!t||!n||4!==t.shape.length||t.shape.length!==n.shape.length)return e.debug||zj("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(1!==t.shape[0]||1!==n.shape[0]||3!==t.shape[3]||3!==n.shape[3])return e.debug||zj("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;a.input1=Vs(t),a.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?dh.resizeBilinear(n,[t.shape[1],t.shape[2]]):Vs(n),a.diff=Lu(a.input1,a.input2),a.squared=mo(a.diff,a.diff),a.sum=iu(a.squared);const r=(await a.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return Qs([a.input1,a.input2,a.diff,a.squared,a.sum]),r}(this.config,e,t)}async init(){await CX(this,!0),await this.tf.ready(),lq()}async load(e){this.state="load";const t=Lj(),n=Object.values(this.models.models).filter((e=>e)).length;e&&(this.config=Bj(this.config,e)),this.env.initial&&(await CX(this,!1)||zj("error: backend check failed"),await ao(),this.env.browser&&(this.config.debug&&zj("configuration:",this.config),this.config.debug&&zj("tf flags:",this.tf.ENV.flags))),await this.models.load(this),this.env.initial&&this.config.debug&&zj("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models.models).filter((e=>e)).length!==n&&(this.models.validate(),this.emit("load"));const a=Math.trunc(Lj()-t);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(e=this.result){return function(e,t){var n,a,r,i,s,o,l,u,d,p,c,h,f,m,y,g,A,x,b,v,w,k,I,S,C,N;const T=Lj();if(!e)return xQ();const R=Date.now()-e.timestamp,E=R<1e3?8-Math.log(R+1):1;if(e.canvas&&(NQ.canvas=e.canvas),e.error&&(NQ.error=e.error),NQ.body&&e.body.length===NQ.body.length)for(let i=0;i<e.body.length;i++){const s=e.body[i].box.map(((e,t)=>((E-1)*NQ.body[i].box[t]+e)/E)),o=e.body[i].boxRaw.map(((e,t)=>((E-1)*NQ.body[i].boxRaw[t]+e)/E)),l=e.body[i].keypoints.map(((e,t)=>{var n,a,r,s,o,l,u,d,p;return{score:e.score,part:e.part,position:[NQ.body[i].keypoints[t]?((E-1)*(NQ.body[i].keypoints[t].position[0]||0)+(e.position[0]||0))/E:e.position[0],NQ.body[i].keypoints[t]?((E-1)*(NQ.body[i].keypoints[t].position[1]||0)+(e.position[1]||0))/E:e.position[1],NQ.body[i].keypoints[t]?((E-1)*(NQ.body[i].keypoints[t].position[2]||0)+(e.position[2]||0))/E:e.position[2]],positionRaw:[NQ.body[i].keypoints[t]?((E-1)*(NQ.body[i].keypoints[t].positionRaw[0]||0)+(e.positionRaw[0]||0))/E:e.positionRaw[0],NQ.body[i].keypoints[t]?((E-1)*(NQ.body[i].keypoints[t].positionRaw[1]||0)+(e.positionRaw[1]||0))/E:e.positionRaw[1],NQ.body[i].keypoints[t]?((E-1)*(NQ.body[i].keypoints[t].positionRaw[2]||0)+(e.positionRaw[2]||0))/E:e.positionRaw[2]],distance:[NQ.body[i].keypoints[t]?((E-1)*((null==(n=NQ.body[i].keypoints[t].distance)?void 0:n[0])||0)+((null==(a=e.distance)?void 0:a[0])||0))/E:null==(r=e.distance)?void 0:r[0],NQ.body[i].keypoints[t]?((E-1)*((null==(s=NQ.body[i].keypoints[t].distance)?void 0:s[1])||0)+((null==(o=e.distance)?void 0:o[1])||0))/E:null==(l=e.distance)?void 0:l[1],NQ.body[i].keypoints[t]?((E-1)*((null==(u=NQ.body[i].keypoints[t].distance)?void 0:u[2])||0)+((null==(d=e.distance)?void 0:d[2])||0))/E:null==(p=e.distance)?void 0:p[2]]}})),u={};let d={connected:{}};(null==(n=t.body.modelPath)?void 0:n.includes("efficientpose"))?d=jK:(null==(a=t.body.modelPath)?void 0:a.includes("blazepose"))?d=gK:(null==(r=t.body.modelPath)?void 0:r.includes("movenet"))&&(d=bQ);for(const[e,t]of Object.entries(d.connected)){const n=[];for(let e=0;e<t.length-1;e++){const a=l.find((n=>n.part===t[e])),r=l.find((n=>n.part===t[e+1]));a&&r&&n.push([a.position,r.position])}u[e]=n}NQ.body[i]={...e.body[i],box:s,boxRaw:o,keypoints:l,annotations:u}}else NQ.body=JSON.parse(JSON.stringify(e.body));if(NQ.hand&&e.hand.length===NQ.hand.length)for(let t=0;t<e.hand.length;t++){const n=e.hand[t].box.map(((e,n)=>((E-1)*NQ.hand[t].box[n]+e)/E)),a=e.hand[t].boxRaw.map(((e,n)=>((E-1)*NQ.hand[t].boxRaw[n]+e)/E));NQ.hand[t].keypoints.length!==e.hand[t].keypoints.length&&(NQ.hand[t].keypoints=e.hand[t].keypoints);const r=e.hand[t].keypoints&&e.hand[t].keypoints.length>0?e.hand[t].keypoints.map(((e,n)=>e.map(((e,a)=>((E-1)*(NQ.hand[t].keypoints[n][a]||1)+(e||0))/E)))):[];let l={};if(Object.keys(NQ.hand[t].annotations).length!==Object.keys(e.hand[t].annotations).length)NQ.hand[t].annotations=e.hand[t].annotations,l=NQ.hand[t].annotations;else if(e.hand[t].annotations)for(const n of Object.keys(e.hand[t].annotations))l[n]=(null==(o=null==(s=null==(i=e.hand[t])?void 0:i.annotations)?void 0:s[n])?void 0:o[0])?e.hand[t].annotations[n].map(((e,a)=>e.map(((e,r)=>((E-1)*NQ.hand[t].annotations[n][a][r]+e)/E)))):null;NQ.hand[t]={...e.hand[t],box:n,boxRaw:a,keypoints:r,annotations:l}}else NQ.hand=JSON.parse(JSON.stringify(e.hand));if(NQ.face&&e.face.length===NQ.face.length)for(let t=0;t<e.face.length;t++){const n=e.face[t].box.map(((e,n)=>((E-1)*NQ.face[t].box[n]+e)/E)),a=e.face[t].boxRaw.map(((e,n)=>((E-1)*NQ.face[t].boxRaw[n]+e)/E));let r=e.face[t].annotations;if(Object.keys(NQ.face[t].annotations).length!==Object.keys(e.face[t].annotations).length)NQ.face[t].annotations=e.face[t].annotations,r=NQ.face[t].annotations;else if(e.face[t].annotations)for(const n of Object.keys(e.face[t].annotations))r[n]=(null==(d=null==(u=null==(l=e.face[t])?void 0:l.annotations)?void 0:u[n])?void 0:d[0])?e.face[t].annotations[n].map(((e,a)=>e.map(((e,r)=>((E-1)*NQ.face[t].annotations[n][a][r]+e)/E)))):null;if(e.face[t].rotation){const i={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};i.matrix=null==(p=e.face[t].rotation)?void 0:p.matrix,i.angle={roll:((E-1)*((null==(h=null==(c=NQ.face[t].rotation)?void 0:c.angle)?void 0:h.roll)||0)+((null==(m=null==(f=e.face[t].rotation)?void 0:f.angle)?void 0:m.roll)||0))/E,yaw:((E-1)*((null==(g=null==(y=NQ.face[t].rotation)?void 0:y.angle)?void 0:g.yaw)||0)+((null==(x=null==(A=e.face[t].rotation)?void 0:A.angle)?void 0:x.yaw)||0))/E,pitch:((E-1)*((null==(v=null==(b=NQ.face[t].rotation)?void 0:b.angle)?void 0:v.pitch)||0)+((null==(k=null==(w=e.face[t].rotation)?void 0:w.angle)?void 0:k.pitch)||0))/E},i.gaze={bearing:((E-1)*((null==(I=NQ.face[t].rotation)?void 0:I.gaze.bearing)||0)+((null==(S=e.face[t].rotation)?void 0:S.gaze.bearing)||0))/E,strength:((E-1)*((null==(C=NQ.face[t].rotation)?void 0:C.gaze.strength)||0)+((null==(N=e.face[t].rotation)?void 0:N.gaze.strength)||0))/E},NQ.face[t]={...e.face[t],rotation:i,box:n,boxRaw:a,annotations:r}}else NQ.face[t]={...e.face[t],box:n,boxRaw:a,annotations:r}}else NQ.face=JSON.parse(JSON.stringify(e.face));if(NQ.object&&e.object.length===NQ.object.length)for(let t=0;t<e.object.length;t++){const n=e.object[t].box.map(((e,n)=>((E-1)*NQ.object[t].box[n]+e)/E)),a=e.object[t].boxRaw.map(((e,n)=>((E-1)*NQ.object[t].boxRaw[n]+e)/E));NQ.object[t]={...e.object[t],box:n,boxRaw:a}}else NQ.object=JSON.parse(JSON.stringify(e.object));if(e.persons){const t=e.persons;if(NQ.persons&&t.length===NQ.persons.length)for(let e=0;e<t.length;e++)NQ.persons[e].box=t[e].box.map(((t,n)=>((E-1)*NQ.persons[e].box[n]+t)/E));else NQ.persons=JSON.parse(JSON.stringify(t))}e.gesture&&(NQ.gesture=e.gesture),NQ.width=e.width,NQ.height=e.height;const $=Lj();return TQ=cq.perfadd?TQ+Math.round($-T):Math.round($-T),e.performance&&(NQ.performance={...e.performance,interpolate:TQ}),NQ}(e,this.config)}async warmup(e){const t=Lj(),n=await z1(this,e),a=Lj();return this.performance.warmup=Math.trunc(a-t),n}async profile(e,t){const n=await this.tf.profile((()=>this.detect(e,t))),a={};let r=0;for(const e of n.kernels){const t=Number(e.kernelTimeMs)||0;a[e.name]?a[e.name]+=t:a[e.name]=t,r+=t}const i=[];Object.entries(a).forEach((e=>i.push({kernel:e[0],time:e[1],perc:0})));for(const e of i)e.perc=Math.round(1e3*e.time/r)/1e3,e.time=Math.round(1e3*e.time)/1e3;return i.sort(((e,t)=>t.time-e.time)),i.length=20,i}async detect(e,t){return this.state="detect",new Promise((async n=>{var a,r,i,o,l,u,d,p,c,h,f,m,y,g,A,x,b,v,w,k,I;let S;this.state="config",this.config=Bj(this.config,t),this.state="check";const C=s(this,F1).call(this,e);C&&(zj(C,e),this.emit("error"),n(xQ(C)));const N=Lj();await this.load(),S=Lj(),this.state="image";const T=await pq(e,this.config);if(this.process=T,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(Lj()-S):Math.trunc(Lj()-S),this.analyze("Get Image:"),!T.tensor)return this.config.debug&&zj("could not convert input to tensor"),this.emit("error"),void n(xQ("could not convert input to tensor"));this.emit("image"),S=Lj(),this.config.skipAllowed=await async function(e,t){let n=!1;if(0===e.cacheSensitivity||!t.shape||4!==t.shape.length||t.shape[1]>3840||t.shape[2]>2160)return n;if(oq.inputTensor)if(oq.inputTensor.shape[1]!==t.shape[1]||oq.inputTensor.shape[2]!==t.shape[2])Qs(oq.inputTensor),oq.inputTensor=Vs(t);else{const a={};a.diff=Lu(t,oq.inputTensor),a.squared=mo(a.diff,a.diff),a.sum=iu(a.squared);const r=(await a.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;Qs([oq.inputTensor,a.diff,a.squared,a.sum]),oq.inputTensor=Vs(t),n=r<=(e.cacheSensitivity||0)}else oq.inputTensor=Vs(t);return n}(this.config,T.tensor),this.config.filter.autoBrightness=!!this.config.filter.autoBrightness&&this.config.skipAllowed,this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(Lj()-S):Math.trunc(Lj()-S),this.analyze("Check Changed:");let R=[],E=[],$=[],M=[];this.state="detect:face",this.config.async?(R=this.config.face.enabled?QY(this,T.tensor):[],this.performance.face&&delete this.performance.face):(S=Lj(),R=this.config.face.enabled?await QY(this,T.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(Lj()-S):Math.trunc(Lj()-S)),!this.config.async||-1!==this.config.body.maxDetected&&-1!==this.config.hand.maxDetected||(R=await R),this.analyze("Start Body:"),this.state="detect:body";const F=-1===this.config.body.maxDetected?Bj(this.config,{body:{maxDetected:this.config.face.enabled?1*R.length:1}}):this.config;this.config.async?((null==(a=this.config.body.modelPath)?void 0:a.includes("posenet"))?E=this.config.body.enabled?x1(T.tensor,F):[]:(null==(r=this.config.body.modelPath)?void 0:r.includes("blazepose"))?E=this.config.body.enabled?zK(T.tensor,F):[]:(null==(i=this.config.body.modelPath)?void 0:i.includes("efficientpose"))?E=this.config.body.enabled?eZ(T.tensor,F):[]:(null==(o=this.config.body.modelPath)?void 0:o.includes("movenet"))&&(E=this.config.body.enabled?HQ(T.tensor,F):[]),this.performance.body&&delete this.performance.body):(S=Lj(),(null==(l=this.config.body.modelPath)?void 0:l.includes("posenet"))?E=this.config.body.enabled?await x1(T.tensor,F):[]:(null==(u=this.config.body.modelPath)?void 0:u.includes("blazepose"))?E=this.config.body.enabled?await zK(T.tensor,F):[]:(null==(d=this.config.body.modelPath)?void 0:d.includes("efficientpose"))?E=this.config.body.enabled?await eZ(T.tensor,F):[]:(null==(p=this.config.body.modelPath)?void 0:p.includes("movenet"))&&(E=this.config.body.enabled?await HQ(T.tensor,F):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(Lj()-S):Math.trunc(Lj()-S)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";const _=-1===this.config.hand.maxDetected?Bj(this.config,{hand:{maxDetected:this.config.face.enabled?2*R.length:1}}):this.config;this.config.async?((null==(h=null==(c=this.config.hand.detector)?void 0:c.modelPath)?void 0:h.includes("handdetect"))?$=this.config.hand.enabled?oQ(T.tensor,_):[]:(null==(m=null==(f=this.config.hand.detector)?void 0:f.modelPath)?void 0:m.includes("handtrack"))&&($=this.config.hand.enabled?AQ(T.tensor,_):[]),this.performance.hand&&delete this.performance.hand):(S=Lj(),(null==(g=null==(y=this.config.hand.detector)?void 0:y.modelPath)?void 0:g.includes("handdetect"))?$=this.config.hand.enabled?await oQ(T.tensor,_):[]:(null==(x=null==(A=this.config.hand.detector)?void 0:A.modelPath)?void 0:x.includes("handtrack"))&&($=this.config.hand.enabled?await AQ(T.tensor,_):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(Lj()-S):Math.trunc(Lj()-S)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((null==(b=this.config.object.modelPath)?void 0:b.includes("nanodet"))?M=this.config.object.enabled?YQ(T.tensor,this.config):[]:(null==(v=this.config.object.modelPath)?void 0:v.includes("centernet"))&&(M=this.config.object.enabled?HK(T.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(S=Lj(),(null==(w=this.config.object.modelPath)?void 0:w.includes("nanodet"))?M=this.config.object.enabled?await YQ(T.tensor,this.config):[]:(null==(k=this.config.object.modelPath)?void 0:k.includes("centernet"))&&(M=this.config.object.enabled?await HK(T.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(Lj()-S):Math.trunc(Lj()-S)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([R,E,$,M]=await Promise.all([R,E,$,M])),this.state="detect:gesture";let P=[];this.config.gesture.enabled&&(S=Lj(),P=[...zJ(R),...DJ(E),...WJ($),...LJ(R)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(Lj()-S):Math.trunc(Lj()-S)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(Lj()-N):Math.trunc(Lj()-N);const O=(null==(I=this.process.tensor)?void 0:I.shape)||[0,0,0,0];this.result={face:R,body:E,hand:$,gesture:P,object:M,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,width:O[2],height:O[1],get persons(){return function(e,t,n,a,r){var i,s,o,l,u,d;let p=0;const c=[];for(const h of e){const e={id:p++,face:h,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(const n of t)h.box[0]>n.box[0]&&h.box[0]<n.box[0]+n.box[2]&&h.box[1]+h.box[3]>n.box[1]&&h.box[1]+h.box[3]<n.box[1]+n.box[3]&&(e.body=n);if(e.body)for(const t of n)t.box[0]+t.box[2]>e.body.box[0]&&t.box[0]+t.box[2]<e.body.box[0]+e.body.box[2]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.left=t),t.box[0]<e.body.box[0]+e.body.box[2]&&t.box[0]>e.body.box[0]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.right=t);for(const t of a)(void 0!==t.face&&t.face===h.id||void 0!==t.iris&&t.iris===h.id||void 0!==t.body&&t.body===(null==(i=e.body)?void 0:i.id)||void 0!==t.hand&&t.hand===(null==(s=e.hands.left)?void 0:s.id)||void 0!==t.hand&&t.hand===(null==(o=e.hands.right)?void 0:o.id))&&e.gestures.push(t);const f=[],m=[],y=e=>{e&&4===e.length&&(f.push(e[0],e[0]+e[2]),m.push(e[1],e[1]+e[3]))};y(e.face.box),y(null==(l=e.body)?void 0:l.box),y(null==(u=e.hands.left)?void 0:u.box),y(null==(d=e.hands.right)?void 0:d.box);const g=Math.min(...f),A=Math.min(...m);e.box=[g,A,Math.max(...f)-g,Math.max(...m)-A],(null==r?void 0:r[1])&&(null==r?void 0:r[2])&&(e.boxRaw=[e.box[0]/r[2],e.box[1]/r[1],e.box[2]/r[2],e.box[3]/r[1]]),c.push(e)}return c}(R,E,$,P,O)}},Qs(T.tensor),this.emit("detect"),this.state="idle",n(this.result)}))}async sleep(e){return new Promise((t=>{setTimeout(t,e)}))}async video(e,t=!0,n=0){t?(s(this,_1)[e.id]||(this.config.debug&&zj("video start",e.id),s(this,_1)[e.id]=!0),!e.paused&&s(this,_1)[e.id]&&e.readyState>=2&&await this.detect(e),n>0&&await this.sleep(n),s(this,_1)[e.id]&&requestAnimationFrame((()=>this.video(e,t,n)))):(this.config.debug&&zj("video stop",e.id),s(this,_1)[e.id]=!1)}}({modelBasePath:"./models",filter:{enabled:!0,equalization:!0,flip:!1},flags:!0,face:{liveness:{enabled:!0},enabled:!0,detector:{rotation:!1},mesh:{enabled:!0},attention:{enabled:!1},iris:{enabled:!0},description:{enabled:!0},emotion:{enabled:!0}},segmentation:{enabled:!1}}),W1=document.getElementById("canvas");async function B1(){const e=L1.next();L1.draw.canvas(L1.webcam.element,W1),await L1.draw.all(W1,e),setTimeout(B1,200)}window.onload=async function(){document.getElementById("log").innerHTML=`human version: ${L1.version} | tfjs version: ${L1.tf.version["tfjs-core"]}<br>platform: ${L1.env.platform} | agent ${L1.env.agent}`,await L1.webcam.start({crop:!0}),L1.video(L1.webcam.element),W1.width=L1.webcam.width,W1.height=L1.webcam.height,W1.onclick=async()=>{L1.webcam.paused?await L1.webcam.play():L1.webcam.pause()},await B1()}})();